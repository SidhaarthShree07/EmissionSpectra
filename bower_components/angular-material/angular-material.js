/*!
* Angular Material Design
* https://github.com/angular/material
* @license MIT
* v0.9.8
*/
(function(window,angular,undefined){"use strict";(function(){"use strict";angular.module('ngMaterial',["ng","ngAnimate","ngAria","material.core","material.core.gestures","material.core.theming.palette","material.core.theming","material.components.autocomplete","material.components.backdrop","material.components.bottomSheet","material.components.button","material.components.card","material.components.checkbox","material.components.chips","material.components.content","material.components.dialog","material.components.divider","material.components.gridList","material.components.icon","material.components.input","material.components.list","material.components.progressCircular","material.components.progressLinear","material.components.radioButton","material.components.select","material.components.sidenav","material.components.slider","material.components.sticky","material.components.subheader","material.components.swipe","material.components.switch","material.components.tabs","material.components.toast","material.components.toolbar","material.components.tooltip","material.components.whiteframe"]);})();(function(){"use strict";angular.module('material.core',['material.core.gestures','material.core.theming']).config(MdCoreConfigure);function MdCoreConfigure($provide,$mdThemingProvider){$provide.decorator('$$rAF',["$delegate",rAFDecorator]);$mdThemingProvider.theme('default').primaryPalette('indigo').accentPalette('pink').warnPalette('red').backgroundPalette('grey');}
MdCoreConfigure.$inject=["$provide","$mdThemingProvider"];function rAFDecorator($delegate){$delegate.throttle=function(cb){var queueArgs,alreadyQueued,queueCb,context;return function debounced(){queueArgs=arguments;context=this;queueCb=cb;if(!alreadyQueued){alreadyQueued=true;$delegate(function(){queueCb.apply(context,queueArgs);alreadyQueued=false;});}};};return $delegate;}})();(function(){"use strict";angular.module('material.core').factory('$mdConstant',MdConstantFactory);function MdConstantFactory($$rAF,$sniffer){var webkit=/webkit/i.test($sniffer.vendorPrefix);function vendorProperty(name){return webkit?('webkit'+name.charAt(0).toUpperCase()+name.substring(1)):name;}
return{KEY_CODE:{ENTER:13,ESCAPE:27,SPACE:32,LEFT_ARROW:37,UP_ARROW:38,RIGHT_ARROW:39,DOWN_ARROW:40,TAB:9,BACKSPACE:8,DELETE:46},CSS:{TRANSITIONEND:'transitionend'+(webkit?' webkitTransitionEnd':''),ANIMATIONEND:'animationend'+(webkit?' webkitAnimationEnd':''),TRANSFORM:vendorProperty('transform'),TRANSFORM_ORIGIN:vendorProperty('transformOrigin'),TRANSITION:vendorProperty('transition'),TRANSITION_DURATION:vendorProperty('transitionDuration'),ANIMATION_PLAY_STATE:vendorProperty('animationPlayState'),ANIMATION_DURATION:vendorProperty('animationDuration'),ANIMATION_NAME:vendorProperty('animationName'),ANIMATION_TIMING:vendorProperty('animationTimingFunction'),ANIMATION_DIRECTION:vendorProperty('animationDirection')},MEDIA:{'sm':'(max-width: 600px)','gt-sm':'(min-width: 600px)','md':'(min-width: 600px) and (max-width: 960px)','gt-md':'(min-width: 960px)','lg':'(min-width: 960px) and (max-width: 1200px)','gt-lg':'(min-width: 1200px)'},MEDIA_PRIORITY:['gt-lg','lg','gt-md','md','gt-sm','sm']};}
MdConstantFactory.$inject=["$$rAF","$sniffer"];})();(function(){"use strict";angular.module('material.core').config(["$provide",function($provide){$provide.decorator('$mdUtil',['$delegate',function($delegate){$delegate.iterator=MdIterator;return $delegate;}]);}]);function MdIterator(items,reloop){var trueFn=function(){return true;};if(items&&!angular.isArray(items)){items=Array.prototype.slice.call(items);}
reloop=!!reloop;var _items=items||[];return{items:getItems,count:count,inRange:inRange,contains:contains,indexOf:indexOf,itemAt:itemAt,findBy:findBy,add:add,remove:remove,first:first,last:last,next:angular.bind(null,findSubsequentItem,false),previous:angular.bind(null,findSubsequentItem,true),hasPrevious:hasPrevious,hasNext:hasNext};function getItems(){return[].concat(_items);}
function count(){return _items.length;}
function inRange(index){return _items.length&&(index>-1)&&(index<_items.length);}
function hasNext(item){return item?inRange(indexOf(item)+1):false;}
function hasPrevious(item){return item?inRange(indexOf(item)-1):false;}
function itemAt(index){return inRange(index)?_items[index]:null;}
function findBy(key,val){return _items.filter(function(item){return item[key]===val;});}
function add(item,index){if(!item)return-1;if(!angular.isNumber(index)){index=_items.length;}
_items.splice(index,0,item);return indexOf(item);}
function remove(item){if(contains(item)){_items.splice(indexOf(item),1);}}
function indexOf(item){return _items.indexOf(item);}
function contains(item){return item&&(indexOf(item)>-1);}
function first(){return _items.length?_items[0]:null;}
function last(){return _items.length?_items[_items.length-1]:null;}
function findSubsequentItem(backwards,item,validate,limit){validate=validate||trueFn;var curIndex=indexOf(item);while(true){if(!inRange(curIndex))return null;var nextIndex=curIndex+(backwards?-1:1);var foundItem=null;if(inRange(nextIndex)){foundItem=_items[nextIndex];}else if(reloop){foundItem=backwards?last():first();nextIndex=indexOf(foundItem);}
if((foundItem===null)||(nextIndex===limit))return null;if(validate(foundItem))return foundItem;if(angular.isUndefined(limit))limit=nextIndex;curIndex=nextIndex;}}}})();(function(){"use strict";angular.module('material.core').factory('$mdMedia',mdMediaFactory);function mdMediaFactory($mdConstant,$rootScope,$window){var queries={};var mqls={};var results={};var normalizeCache={};$mdMedia.getResponsiveAttribute=getResponsiveAttribute;$mdMedia.getQuery=getQuery;$mdMedia.watchResponsiveAttributes=watchResponsiveAttributes;return $mdMedia;function $mdMedia(query){var validated=queries[query];if(angular.isUndefined(validated)){validated=queries[query]=validate(query);}
var result=results[validated];if(angular.isUndefined(result)){result=add(validated);}
return result;}
function validate(query){return $mdConstant.MEDIA[query]||((query.charAt(0)!=='(')?('('+query+')'):query);}
function add(query){var result=mqls[query]=$window.matchMedia(query);result.addListener(onQueryChange);return(results[result.media]=!!result.matches);}
function onQueryChange(query){$rootScope.$evalAsync(function(){results[query.media]=!!query.matches;});}
function getQuery(name){return mqls[name];}
function getResponsiveAttribute(attrs,attrName){for(var i=0;i<$mdConstant.MEDIA_PRIORITY.length;i++){var mediaName=$mdConstant.MEDIA_PRIORITY[i];if(!mqls[queries[mediaName]].matches){continue;}
var normalizedName=getNormalizedName(attrs,attrName+'-'+mediaName);if(attrs[normalizedName]){return attrs[normalizedName];}}
return attrs[getNormalizedName(attrs,attrName)];}
function watchResponsiveAttributes(attrNames,attrs,watchFn){var unwatchFns=[];attrNames.forEach(function(attrName){var normalizedName=getNormalizedName(attrs,attrName);if(attrs[normalizedName]){unwatchFns.push(attrs.$observe(normalizedName,angular.bind(void 0,watchFn,null)));}
for(var mediaName in $mdConstant.MEDIA){normalizedName=getNormalizedName(attrs,attrName+'-'+mediaName);if(!attrs[normalizedName]){return;}
unwatchFns.push(attrs.$observe(normalizedName,angular.bind(void 0,watchFn,mediaName)));}});return function unwatch(){unwatchFns.forEach(function(fn){fn();})};}
function getNormalizedName(attrs,attrName){return normalizeCache[attrName]||(normalizeCache[attrName]=attrs.$normalize(attrName));}}
mdMediaFactory.$inject=["$mdConstant","$rootScope","$window"];})();(function(){"use strict";var nextUniqueId=0;angular.module('material.core').factory('$mdUtil',["$cacheFactory","$document","$timeout","$q","$window","$mdConstant",function($cacheFactory,$document,$timeout,$q,$window,$mdConstant){var Util;function getNode(el){return el[0]||el;}
return Util={now:window.performance?angular.bind(window.performance,window.performance.now):Date.now,clientRect:function(element,offsetParent,isOffsetRect){var node=getNode(element);offsetParent=getNode(offsetParent||node.offsetParent||document.body);var nodeRect=node.getBoundingClientRect();var offsetRect=isOffsetRect?offsetParent.getBoundingClientRect():{left:0,top:0,width:0,height:0};return{left:nodeRect.left-offsetRect.left,top:nodeRect.top-offsetRect.top,width:nodeRect.width,height:nodeRect.height};},offsetRect:function(element,offsetParent){return Util.clientRect(element,offsetParent,true);},disableScrollAround:function(element){element=element instanceof angular.element?element[0]:element;var parentEl=element;var disableTarget;while(parentEl=this.getClosest(parentEl,'MD-CONTENT',true)){if(isScrolling(parentEl)){disableTarget=angular.element(parentEl)[0];}}
if(!disableTarget){disableTarget=$document[0].body;if(!isScrolling(disableTarget))return angular.noop;}
if(disableTarget.nodeName=='BODY'){return disableBodyScroll();}else{return disableElementScroll();}
function disableElementScroll(){var scrollMask=angular.element('<div class="md-scroll-mask"><div class="md-scroll-mask-bar"></div></div>');var computedStyle=$window.getComputedStyle(disableTarget);var disableRect=disableTarget.getBoundingClientRect();var scrollWidth=disableRect.width-disableTarget.clientWidth;applyStyles(scrollMask[0],{zIndex:computedStyle.zIndex=='auto'?2:computedStyle.zIndex+1,width:disableRect.width+'px',height:disableRect.height+'px',top:disableRect.top+'px',left:disableRect.left+'px'});scrollMask[0].firstElementChild.style.width=scrollWidth+'px';$document[0].body.appendChild(scrollMask[0]);scrollMask.on('wheel',preventDefault);scrollMask.on('touchmove',preventDefault);$document.on('keydown',disableKeyNav);return function restoreScroll(){scrollMask.off('wheel');scrollMask.off('touchmove');scrollMask[0].parentNode.removeChild(scrollMask[0]);$document.off('keydown',disableKeyNav);};function disableKeyNav(e){if(disableTarget.contains(e.target)){e.preventDefault();e.stopImmediatePropagation();}}
function preventDefault(e){e.preventDefault();}}
function disableBodyScroll(){var restoreStyle=disableTarget.getAttribute('style')||'';var scrollOffset=disableTarget.scrollTop;applyStyles(disableTarget,{position:'fixed',width:'100%',overflowY:'scroll',top:-scrollOffset+'px'});return function restoreScroll(){disableTarget.setAttribute('style',restoreStyle);disableTarget.scrollTop=scrollOffset;};}
function applyStyles(el,styles){for(var key in styles){el.style[key]=styles[key];}}
function isScrolling(el){if(el instanceof angular.element)el=el[0];return el.scrollHeight>el.offsetHeight;}},floatingScrollbars:function(){if(this.floatingScrollbars.cached===undefined){var tempNode=angular.element('<div style="width: 100%; z-index: -1; position: absolute; height: 35px; overflow-y: scroll"><div style="height: 60;"></div></div>');$document[0].body.appendChild(tempNode[0]);this.floatingScrollbars.cached=(tempNode[0].offsetWidth==tempNode[0].childNodes[0].offsetWidth);tempNode.remove();}
return this.floatingScrollbars.cached;},forceFocus:function(element){var node=element[0]||element;document.addEventListener('click',function focusOnClick(ev){if(ev.target===node&&ev.$focus){node.focus();ev.stopImmediatePropagation();ev.preventDefault();node.removeEventListener('click',focusOnClick);}},true);var newEvent=document.createEvent('MouseEvents');newEvent.initMouseEvent('click',false,true,window,{},0,0,0,0,false,false,false,false,0,null);newEvent.$material=true;newEvent.$focus=true;node.dispatchEvent(newEvent);},transitionEndPromise:function(element,opts){opts=opts||{};var deferred=$q.defer();element.on($mdConstant.CSS.TRANSITIONEND,finished);function finished(ev){if(!ev||ev.target===element[0]){element.off($mdConstant.CSS.TRANSITIONEND,finished);deferred.resolve();}}
if(opts.timeout)$timeout(finished,opts.timeout);return deferred.promise;},fakeNgModel:function(){return{$fake:true,$setTouched:angular.noop,$setViewValue:function(value){this.$viewValue=value;this.$render(value);this.$viewChangeListeners.forEach(function(cb){cb();});},$isEmpty:function(value){return(''+value).length===0;},$parsers:[],$formatters:[],$viewChangeListeners:[],$render:angular.noop};},debounce:function(func,wait,scope,invokeApply){var timer;return function debounced(){var context=scope,args=Array.prototype.slice.call(arguments);$timeout.cancel(timer);timer=$timeout(function(){timer=undefined;func.apply(context,args);},wait||10,invokeApply);};},throttle:function throttle(func,delay){var recent;return function throttled(){var context=this;var args=arguments;var now=Util.now();if(!recent||(now-recent>delay)){func.apply(context,args);recent=now;}};},time:function time(cb){var start=Util.now();cb();return Util.now()-start;},nextUid:function(){return''+nextUniqueId++;},disconnectScope:function disconnectScope(scope){if(!scope)return;if(scope.$root===scope)return;if(scope.$$destroyed)return;var parent=scope.$parent;scope.$$disconnected=true;if(parent.$$childHead===scope)parent.$$childHead=scope.$$nextSibling;if(parent.$$childTail===scope)parent.$$childTail=scope.$$prevSibling;if(scope.$$prevSibling)scope.$$prevSibling.$$nextSibling=scope.$$nextSibling;if(scope.$$nextSibling)scope.$$nextSibling.$$prevSibling=scope.$$prevSibling;scope.$$nextSibling=scope.$$prevSibling=null;},reconnectScope:function reconnectScope(scope){if(!scope)return;if(scope.$root===scope)return;if(!scope.$$disconnected)return;var child=scope;var parent=child.$parent;child.$$disconnected=false;child.$$prevSibling=parent.$$childTail;if(parent.$$childHead){parent.$$childTail.$$nextSibling=child;parent.$$childTail=child;}else{parent.$$childHead=parent.$$childTail=child;}},getClosest:function getClosest(el,tagName,onlyParent){if(el instanceof angular.element)el=el[0];tagName=tagName.toUpperCase();if(onlyParent)el=el.parentNode;if(!el)return null;do{if(el.nodeName===tagName){return el;}}while(el=el.parentNode);return null;},extractElementByName:function(element,nodeName){for(var i=0,len=element.length;i<len;i++){if(element[i].nodeName.toLowerCase()===nodeName){return angular.element(element[i]);}}
return element;},initOptionalProperties:function(scope,attr,defaults){defaults=defaults||{};angular.forEach(scope.$$isolateBindings,function(binding,key){if(binding.optional&&angular.isUndefined(scope[key])){var hasKey=attr.hasOwnProperty(attr.$normalize(binding.attrName));scope[key]=angular.isDefined(defaults[key])?defaults[key]:hasKey;}});}};}]);angular.element.prototype.focus=angular.element.prototype.focus||function(){if(this.length){this[0].focus();}
return this;};angular.element.prototype.blur=angular.element.prototype.blur||function(){if(this.length){this[0].blur();}
return this;};})();(function(){"use strict";angular.module('material.core').service('$mdAria',AriaService);function AriaService($$rAF,$log,$window){return{expect:expect,expectAsync:expectAsync,expectWithText:expectWithText};function expect(element,attrName,defaultValue){var node=element[0]||element;if(node&&((!node.hasAttribute(attrName)||node.getAttribute(attrName).length===0)&&!childHasAttribute(node,attrName))){defaultValue=angular.isString(defaultValue)?defaultValue.trim():'';if(defaultValue.length){element.attr(attrName,defaultValue);}else{$log.warn('ARIA: Attribute "',attrName,'", required for accessibility, is missing on node:',node);}}}
function expectAsync(element,attrName,defaultValueGetter){$$rAF(function(){expect(element,attrName,defaultValueGetter());});}
function expectWithText(element,attrName){expectAsync(element,attrName,function(){return getText(element);});}
function getText(element){return element.text().trim();}
function childHasAttribute(node,attrName){var hasChildren=node.hasChildNodes(),hasAttr=false;function isHidden(el){var style=el.currentStyle?el.currentStyle:$window.getComputedStyle(el);return(style.display==='none');}
if(hasChildren){var children=node.childNodes;for(var i=0;i<children.length;i++){var child=children[i];if(child.nodeType===1&&child.hasAttribute(attrName)){if(!isHidden(child)){hasAttr=true;}}}}
return hasAttr;}}
AriaService.$inject=["$$rAF","$log","$window"];})();(function(){"use strict";angular.module('material.core').service('$mdCompiler',mdCompilerService);function mdCompilerService($q,$http,$injector,$compile,$controller,$templateCache){this.compile=function(options){var templateUrl=options.templateUrl;var template=options.template||'';var controller=options.controller;var controllerAs=options.controllerAs;var resolve=options.resolve||{};var locals=options.locals||{};var transformTemplate=options.transformTemplate||angular.identity;var bindToController=options.bindToController;angular.forEach(resolve,function(value,key){if(angular.isString(value)){resolve[key]=$injector.get(value);}else{resolve[key]=$injector.invoke(value);}});angular.extend(resolve,locals);if(templateUrl){resolve.$template=$http.get(templateUrl,{cache:$templateCache}).then(function(response){return response.data;});}else{resolve.$template=$q.when(template);}
return $q.all(resolve).then(function(locals){var template=transformTemplate(locals.$template);var element=options.element||angular.element('<div>').html(template.trim()).contents();var linkFn=$compile(element);return{locals:locals,element:element,link:function link(scope){locals.$scope=scope;if(controller){var invokeCtrl=$controller(controller,locals,true);if(bindToController){angular.extend(invokeCtrl.instance,locals);}
var ctrl=invokeCtrl();element.data('$ngControllerController',ctrl);element.children().data('$ngControllerController',ctrl);if(controllerAs){scope[controllerAs]=ctrl;}}
return linkFn(scope);}};});};}
mdCompilerService.$inject=["$q","$http","$injector","$compile","$controller","$templateCache"];})();(function(){"use strict";var HANDLERS={};var pointer,lastPointer,forceSkipClickHijack=false;var isInitialized=false;angular.module('material.core.gestures',[]).provider('$mdGesture',MdGestureProvider).factory('$$MdGestureHandler',MdGestureHandler).run(attachToDocument);function MdGestureProvider(){}
MdGestureProvider.prototype={skipClickHijack:function(){return forceSkipClickHijack=true;},$get:["$$MdGestureHandler","$$rAF","$timeout",function($$MdGestureHandler,$$rAF,$timeout){return new MdGesture($$MdGestureHandler,$$rAF,$timeout);}]};function MdGesture($$MdGestureHandler,$$rAF,$timeout){var userAgent=navigator.userAgent||navigator.vendor||window.opera;var isIos=userAgent.match(/ipad|iphone|ipod/i);var isAndroid=userAgent.match(/android/i);var hasJQuery=(typeof window.jQuery!=='undefined')&&(angular.element===window.jQuery);var self={handler:addHandler,register:register,isHijackingClicks:(isIos||isAndroid)&&!hasJQuery&&!forceSkipClickHijack};if(self.isHijackingClicks){self.handler('click',{options:{maxDistance:6},onEnd:function(ev,pointer){if(pointer.distance<this.state.options.maxDistance){this.dispatchEvent(ev,'click');}}});}
function register(element,handlerName,options){var handler=HANDLERS[handlerName.replace(/^\$md./,'')];if(!handler){throw new Error('Failed to register element with handler '+handlerName+'. '+'Available handlers: '+Object.keys(HANDLERS).join(', '));}
return handler.registerElement(element,options);}
function addHandler(name,definition){var handler=new $$MdGestureHandler(name);angular.extend(handler,definition);HANDLERS[name]=handler;return self;}
return self.handler('press',{onStart:function(ev,pointer){this.dispatchEvent(ev,'$md.pressdown');},onEnd:function(ev,pointer){this.dispatchEvent(ev,'$md.pressup');}}).handler('hold',{options:{maxDistance:6,delay:500},onCancel:function(){$timeout.cancel(this.state.timeout);},onStart:function(ev,pointer){if(!this.state.registeredParent)return this.cancel();this.state.pos={x:pointer.x,y:pointer.y};this.state.timeout=$timeout(angular.bind(this,function holdDelayFn(){this.dispatchEvent(ev,'$md.hold');this.cancel();}),this.state.options.delay,false);},onMove:function(ev,pointer){ev.preventDefault();var dx=this.state.pos.x-pointer.x;var dy=this.state.pos.y-pointer.y;if(Math.sqrt(dx*dx+dy*dy)>this.options.maxDistance){this.cancel();}},onEnd:function(){this.onCancel();}}).handler('drag',{options:{minDistance:6,horizontal:true,cancelMultiplier:1.5},onStart:function(ev){if(!this.state.registeredParent)this.cancel();},onMove:function(ev,pointer){var shouldStartDrag,shouldCancel;ev.preventDefault();if(!this.state.dragPointer){if(this.state.options.horizontal){shouldStartDrag=Math.abs(pointer.distanceX)>this.state.options.minDistance;shouldCancel=Math.abs(pointer.distanceY)>this.state.options.minDistance*this.state.options.cancelMultiplier;}else{shouldStartDrag=Math.abs(pointer.distanceY)>this.state.options.minDistance;shouldCancel=Math.abs(pointer.distanceX)>this.state.options.minDistance*this.state.options.cancelMultiplier;}
if(shouldStartDrag){this.state.dragPointer=makeStartPointer(ev);updatePointerState(ev,this.state.dragPointer);this.dispatchEvent(ev,'$md.dragstart',this.state.dragPointer);}else if(shouldCancel){this.cancel();}}else{this.dispatchDragMove(ev);}},dispatchDragMove:$$rAF.throttle(function(ev){if(this.state.isRunning){updatePointerState(ev,this.state.dragPointer);this.dispatchEvent(ev,'$md.drag',this.state.dragPointer);}}),onEnd:function(ev,pointer){if(this.state.dragPointer){updatePointerState(ev,this.state.dragPointer);this.dispatchEvent(ev,'$md.dragend',this.state.dragPointer);}}}).handler('swipe',{options:{minVelocity:0.65,minDistance:10},onEnd:function(ev,pointer){if(Math.abs(pointer.velocityX)>this.state.options.minVelocity&&Math.abs(pointer.distanceX)>this.state.options.minDistance){var eventType=pointer.directionX=='left'?'$md.swipeleft':'$md.swiperight';this.dispatchEvent(ev,eventType);}}});}
MdGesture.$inject=["$$MdGestureHandler","$$rAF","$timeout"];function GestureHandler(name){this.name=name;this.state={};}
function MdGestureHandler(){var hasJQuery=(typeof window.jQuery!=='undefined')&&(angular.element===window.jQuery);GestureHandler.prototype={options:{},dispatchEvent:hasJQuery?jQueryDispatchEvent:nativeDispatchEvent,onStart:angular.noop,onMove:angular.noop,onEnd:angular.noop,onCancel:angular.noop,start:function(ev,pointer){if(this.state.isRunning)return;var parentTarget=this.getNearestParent(ev.target);var parentTargetOptions=parentTarget&&parentTarget.$mdGesture[this.name]||{};this.state={isRunning:true,options:angular.extend({},this.options,parentTargetOptions),registeredParent:parentTarget};this.onStart(ev,pointer);},move:function(ev,pointer){if(!this.state.isRunning)return;this.onMove(ev,pointer);},end:function(ev,pointer){if(!this.state.isRunning)return;this.onEnd(ev,pointer);this.state.isRunning=false;},cancel:function(ev,pointer){this.onCancel(ev,pointer);this.state={};},getNearestParent:function(node){var current=node;while(current){if((current.$mdGesture||{})[this.name]){return current;}
current=current.parentNode;}
return null;},registerElement:function(element,options){var self=this;element[0].$mdGesture=element[0].$mdGesture||{};element[0].$mdGesture[this.name]=options||{};element.on('$destroy',onDestroy);return onDestroy;function onDestroy(){delete element[0].$mdGesture[self.name];element.off('$destroy',onDestroy);}}};return GestureHandler;function jQueryDispatchEvent(srcEvent,eventType,eventPointer){eventPointer=eventPointer||pointer;var eventObj=new angular.element.Event(eventType);eventObj.$material=true;eventObj.pointer=eventPointer;eventObj.srcEvent=srcEvent;angular.extend(eventObj,{clientX:eventPointer.x,clientY:eventPointer.y,screenX:eventPointer.x,screenY:eventPointer.y,pageX:eventPointer.x,pageY:eventPointer.y,ctrlKey:srcEvent.ctrlKey,altKey:srcEvent.altKey,shiftKey:srcEvent.shiftKey,metaKey:srcEvent.metaKey});angular.element(eventPointer.target).trigger(eventObj);}
function nativeDispatchEvent(srcEvent,eventType,eventPointer){eventPointer=eventPointer||pointer;var eventObj;if(eventType==='click'){eventObj=document.createEvent('MouseEvents');eventObj.initMouseEvent('click',true,true,window,srcEvent.detail,eventPointer.x,eventPointer.y,eventPointer.x,eventPointer.y,srcEvent.ctrlKey,srcEvent.altKey,srcEvent.shiftKey,srcEvent.metaKey,srcEvent.button,srcEvent.relatedTarget||null);}else{eventObj=document.createEvent('CustomEvent');eventObj.initCustomEvent(eventType,true,true,{});}
eventObj.$material=true;eventObj.pointer=eventPointer;eventObj.srcEvent=srcEvent;eventPointer.target.dispatchEvent(eventObj);}}
function attachToDocument($mdGesture,$$MdGestureHandler){document.contains||(document.contains=function(node){return document.body.contains(node);});if(!isInitialized&&$mdGesture.isHijackingClicks){document.addEventListener('click',function clickHijacker(ev){var isKeyClick=ev.clientX===0&&ev.clientY===0;if(!isKeyClick&&!ev.$material&&!ev.isIonicTap){ev.preventDefault();ev.stopPropagation();}},true);isInitialized=true;}
var START_EVENTS='mousedown touchstart pointerdown';var MOVE_EVENTS='mousemove touchmove pointermove';var END_EVENTS='mouseup mouseleave touchend touchcancel pointerup pointercancel';angular.element(document).on(START_EVENTS,gestureStart).on(MOVE_EVENTS,gestureMove).on(END_EVENTS,gestureEnd).on('$$mdGestureReset',function gestureClearCache(){lastPointer=pointer=null;});function runHandlers(handlerEvent,event){var handler;for(var name in HANDLERS){handler=HANDLERS[name];if(handler instanceof $$MdGestureHandler){if(handlerEvent==='start'){handler.cancel();}
handler[handlerEvent](event,pointer);}}}
function gestureStart(ev){if(pointer)return;var now=+Date.now();if(lastPointer&&!typesMatch(ev,lastPointer)&&(now-lastPointer.endTime<1500)){return;}
pointer=makeStartPointer(ev);runHandlers('start',ev);}
function gestureMove(ev){if(!pointer||!typesMatch(ev,pointer))return;updatePointerState(ev,pointer);runHandlers('move',ev);}
function gestureEnd(ev){if(!pointer||!typesMatch(ev,pointer))return;updatePointerState(ev,pointer);pointer.endTime=+Date.now();runHandlers('end',ev);lastPointer=pointer;pointer=null;}}
attachToDocument.$inject=["$mdGesture","$$MdGestureHandler"];function makeStartPointer(ev){var point=getEventPoint(ev);var startPointer={startTime:+Date.now(),target:ev.target,type:ev.type.charAt(0)};startPointer.startX=startPointer.x=point.pageX;startPointer.startY=startPointer.y=point.pageY;return startPointer;}
function typesMatch(ev,pointer){return ev&&pointer&&ev.type.charAt(0)===pointer.type;}
function updatePointerState(ev,pointer){var point=getEventPoint(ev);var x=pointer.x=point.pageX;var y=pointer.y=point.pageY;pointer.distanceX=x-pointer.startX;pointer.distanceY=y-pointer.startY;pointer.distance=Math.sqrt(pointer.distanceX*pointer.distanceX+pointer.distanceY*pointer.distanceY);pointer.directionX=pointer.distanceX>0?'right':pointer.distanceX<0?'left':'';pointer.directionY=pointer.distanceY>0?'up':pointer.distanceY<0?'down':'';pointer.duration=+Date.now()-pointer.startTime;pointer.velocityX=pointer.distanceX/pointer.duration;pointer.velocityY=pointer.distanceY/pointer.duration;}
function getEventPoint(ev){ev=ev.originalEvent||ev;return(ev.touches&&ev.touches[0])||(ev.changedTouches&&ev.changedTouches[0])||ev;}})();(function(){"use strict";angular.module('material.core').provider('$$interimElement',InterimElementProvider);function InterimElementProvider(){createInterimElementProvider.$get=InterimElementFactory;InterimElementFactory.$inject=["$document","$q","$rootScope","$timeout","$rootElement","$animate","$interpolate","$mdCompiler","$mdTheming"];return createInterimElementProvider;function createInterimElementProvider(interimFactoryName){var EXPOSED_METHODS=['onHide','onShow','onRemove'];var customMethods={};var providerConfig={presets:{}};var provider={setDefaults:setDefaults,addPreset:addPreset,addMethod:addMethod,$get:factory};provider.addPreset('build',{methods:['controller','controllerAs','resolve','template','templateUrl','themable','transformTemplate','parent']});factory.$inject=["$$interimElement","$animate","$injector"];return provider;function setDefaults(definition){providerConfig.optionsFactory=definition.options;providerConfig.methods=(definition.methods||[]).concat(EXPOSED_METHODS);return provider;}
function addMethod(name,fn){customMethods[name]=fn;return provider;}
function addPreset(name,definition){definition=definition||{};definition.methods=definition.methods||[];definition.options=definition.options||function(){return{};};if(/^cancel|hide|show$/.test(name)){throw new Error("Preset '"+name+"' in "+interimFactoryName+" is reserved!");}
if(definition.methods.indexOf('_options')>-1){throw new Error("Method '_options' in "+interimFactoryName+" is reserved!");}
providerConfig.presets[name]={methods:definition.methods.concat(EXPOSED_METHODS),optionsFactory:definition.options,argOption:definition.argOption};return provider;}
function factory($$interimElement,$animate,$injector){var defaultMethods;var defaultOptions;var interimElementService=$$interimElement();var publicService={hide:interimElementService.hide,cancel:interimElementService.cancel,show:showInterimElement};defaultMethods=providerConfig.methods||[];defaultOptions=invokeFactory(providerConfig.optionsFactory,{});angular.forEach(customMethods,function(fn,name){publicService[name]=fn;});angular.forEach(providerConfig.presets,function(definition,name){var presetDefaults=invokeFactory(definition.optionsFactory,{});var presetMethods=(definition.methods||[]).concat(defaultMethods);angular.extend(presetDefaults,{$type:name});function Preset(opts){this._options=angular.extend({},presetDefaults,opts);}
angular.forEach(presetMethods,function(name){Preset.prototype[name]=function(value){this._options[name]=value;return this;};});if(definition.argOption){var methodName='show'+name.charAt(0).toUpperCase()+name.slice(1);publicService[methodName]=function(arg){var config=publicService[name](arg);return publicService.show(config);};}
publicService[name]=function(arg){if(arguments.length&&definition.argOption&&!angular.isObject(arg)&&!angular.isArray(arg)){return(new Preset())[definition.argOption](arg);}else{return new Preset(arg);}};});return publicService;function showInterimElement(opts){if(opts&&opts._options)opts=opts._options;return interimElementService.show(angular.extend({},defaultOptions,opts));}
function invokeFactory(factory,defaultVal){var locals={};locals[interimFactoryName]=publicService;return $injector.invoke(factory||function(){return defaultVal;},{},locals);}}}
function InterimElementFactory($document,$q,$rootScope,$timeout,$rootElement,$animate,$interpolate,$mdCompiler,$mdTheming){var startSymbol=$interpolate.startSymbol(),endSymbol=$interpolate.endSymbol(),usesStandardSymbols=((startSymbol==='{{')&&(endSymbol==='}}')),processTemplate=usesStandardSymbols?angular.identity:replaceInterpolationSymbols;return function createInterimElementService(){var stack=[];var service;return service={show:show,hide:hide,cancel:cancel};function show(options){if(stack.length){return service.cancel().then(function(){return show(options);});}else{var interimElement=new InterimElement(options);stack.push(interimElement);return interimElement.show().then(function(){return interimElement.deferred.promise;});}}
function hide(response){var interimElement=stack.shift();return interimElement&&interimElement.remove().then(function(){interimElement.deferred.resolve(response);});}
function cancel(reason){var interimElement=stack.shift();return $q.when(interimElement&&interimElement.remove().then(function(){interimElement.deferred.reject(reason);}));}
function InterimElement(options){var self;var hideTimeout,element,showDone,removeDone;options=options||{};options=angular.extend({preserveScope:false,scope:options.scope||$rootScope.$new(options.isolateScope),onShow:function(scope,element,options){return $animate.enter(element,options.parent);},onRemove:function(scope,element,options){return element&&$animate.leave(element)||$q.when();}},options);if(options.template){options.template=processTemplate(options.template);}
return self={options:options,deferred:$q.defer(),show:function(){var compilePromise;if(options.skipCompile){compilePromise=$q(function(resolve){resolve({locals:{},link:function(){return options.element;}});});}else{compilePromise=$mdCompiler.compile(options);}
return showDone=compilePromise.then(function(compileData){angular.extend(compileData.locals,self.options);element=compileData.link(options.scope);if(angular.isFunction(options.parent)){options.parent=options.parent(options.scope,element,options);}else if(angular.isString(options.parent)){options.parent=angular.element($document[0].querySelector(options.parent));}
if(!(options.parent||{}).length){var el;if($rootElement[0]&&$rootElement[0].querySelector){el=$rootElement[0].querySelector(':not(svg) > body');}
if(!el)el=$rootElement[0];if(el.nodeName=='#comment'){el=$document[0].body;}
options.parent=angular.element(el);}
if(options.themable)$mdTheming(element);var ret=options.onShow(options.scope,element,options);return $q.when(ret).then(function(){(options.onComplete||angular.noop)(options.scope,element,options);startHideTimeout();});function startHideTimeout(){if(options.hideDelay){hideTimeout=$timeout(service.cancel,options.hideDelay);}}},function(reason){showDone=true;self.deferred.reject(reason);});},cancelTimeout:function(){if(hideTimeout){$timeout.cancel(hideTimeout);hideTimeout=undefined;}},remove:function(){self.cancelTimeout();return removeDone=$q.when(showDone).then(function(){var ret=element?options.onRemove(options.scope,element,options):true;return $q.when(ret).then(function(){if(!options.preserveScope)options.scope.$destroy();removeDone=true;});});}};}};function replaceInterpolationSymbols(text){if(!text||!angular.isString(text))return text;return text.replace(/\{\{/g,startSymbol).replace(/}}/g,endSymbol);}}}})();(function(){"use strict";angular.module('material.core').factory('$mdComponentRegistry',ComponentRegistry);function ComponentRegistry($log,$q){var self;var instances=[];var pendings={};return self={notFoundError:function(handle){$log.error('No instance found for handle',handle);},getInstances:function(){return instances;},get:function(handle){if(!isValidID(handle))return null;var i,j,instance;for(i=0,j=instances.length;i<j;i++){instance=instances[i];if(instance.$$mdHandle===handle){return instance;}}
return null;},register:function(instance,handle){if(!handle)return angular.noop;instance.$$mdHandle=handle;instances.push(instance);resolveWhen();return deregister;function deregister(){var index=instances.indexOf(instance);if(index!==-1){instances.splice(index,1);}}
function resolveWhen(){var dfd=pendings[handle];if(dfd){dfd.resolve(instance);delete pendings[handle];}}},when:function(handle){if(isValidID(handle)){var deferred=$q.defer();var instance=self.get(handle);if(instance){deferred.resolve(instance);}else{pendings[handle]=deferred;}
return deferred.promise;}
return $q.reject("Invalid `md-component-id` value.");}};function isValidID(handle){return handle&&(handle!=="");}}
ComponentRegistry.$inject=["$log","$q"];})();(function(){"use strict";(function(){'use strict';angular.module('material.core').factory('$mdButtonInkRipple',MdButtonInkRipple);function MdButtonInkRipple($mdInkRipple){return{attach:attach};function attach(scope,element,options){var elementOptions=optionsForElement(element);return $mdInkRipple.attach(scope,element,angular.extend(elementOptions,options));};function optionsForElement(element){if(element.hasClass('md-icon-button')){return{isMenuItem:element.hasClass('md-menu-item'),fitRipple:true,center:true};}else{return{isMenuItem:element.hasClass('md-menu-item'),dimBackground:true}}};}
MdButtonInkRipple.$inject=["$mdInkRipple"];;})();})();(function(){"use strict";(function(){'use strict';angular.module('material.core').factory('$mdCheckboxInkRipple',MdCheckboxInkRipple);function MdCheckboxInkRipple($mdInkRipple){return{attach:attach};function attach(scope,element,options){return $mdInkRipple.attach(scope,element,angular.extend({center:true,dimBackground:false,fitRipple:true},options));};}
MdCheckboxInkRipple.$inject=["$mdInkRipple"];;})();})();(function(){"use strict";(function(){'use strict';angular.module('material.core').factory('$mdListInkRipple',MdListInkRipple);function MdListInkRipple($mdInkRipple){return{attach:attach};function attach(scope,element,options){return $mdInkRipple.attach(scope,element,angular.extend({center:false,dimBackground:true,outline:false,rippleSize:'full'},options));};}
MdListInkRipple.$inject=["$mdInkRipple"];;})();})();(function(){"use strict";angular.module('material.core').factory('$mdInkRipple',InkRippleService).directive('mdInkRipple',InkRippleDirective).directive('mdNoInk',attrNoDirective()).directive('mdNoBar',attrNoDirective()).directive('mdNoStretch',attrNoDirective());function InkRippleDirective($mdButtonInkRipple,$mdCheckboxInkRipple){return{controller:angular.noop,link:function(scope,element,attr){if(attr.hasOwnProperty('mdInkRippleCheckbox')){$mdCheckboxInkRipple.attach(scope,element);}else{$mdButtonInkRipple.attach(scope,element);}}};}
InkRippleDirective.$inject=["$mdButtonInkRipple","$mdCheckboxInkRipple"];function InkRippleService($window,$timeout){return{attach:attach};function attach(scope,element,options){if(element.controller('mdNoInk'))return angular.noop;options=angular.extend({colorElement:element,mousedown:true,hover:true,focus:true,center:false,mousedownPauseTime:150,dimBackground:false,outline:false,fullRipple:true,isMenuItem:false,fitRipple:false},options);var rippleSize,controller=element.controller('mdInkRipple')||{},counter=0,ripples=[],states=[],isActiveExpr=element.attr('md-highlight'),isActive=false,isHeld=false,node=element[0],rippleSizeSetting=element.attr('md-ripple-size'),color=parseColor(element.attr('md-ink-ripple'))||parseColor(options.colorElement.length&&$window.getComputedStyle(options.colorElement[0]).color||'rgb(0, 0, 0)');switch(rippleSizeSetting){case'full':options.fullRipple=true;break;case'partial':options.fullRipple=false;break;}
if(options.mousedown){element.on('$md.pressdown',onPressDown).on('$md.pressup',onPressUp);}
controller.createRipple=createRipple;if(isActiveExpr){scope.$watch(isActiveExpr,function watchActive(newValue){isActive=newValue;if(isActive&&!ripples.length){$timeout(function(){createRipple(0,0);},0,false);}
angular.forEach(ripples,updateElement);});}
return function detach(){element.off('$md.pressdown',onPressDown).off('$md.pressup',onPressUp);getRippleContainer().remove();};function getRippleContainer(){var container=element.data('$mdRippleContainer');if(container)return container;container=angular.element('<div class="md-ripple-container">');element.append(container);element.data('$mdRippleContainer',container);return container;}
function parseColor(color){if(!color)return;if(color.indexOf('rgba')===0)return color.replace(/\d?\.?\d*\s*\)\s*$/,'0.1)');if(color.indexOf('rgb')===0)return rgbToRGBA(color);if(color.indexOf('#')===0)return hexToRGBA(color);function hexToRGBA(color){var hex=color.charAt(0)==='#'?color.substr(1):color,dig=hex.length/3,red=hex.substr(0,dig),grn=hex.substr(dig,dig),blu=hex.substr(dig*2);if(dig===1){red+=red;grn+=grn;blu+=blu;}
return'rgba('+parseInt(red,16)+','+parseInt(grn,16)+','+parseInt(blu,16)+',0.1)';}
function rgbToRGBA(color){return color.replace(')',', 0.1)').replace('(','a(');}}
function removeElement(elem,wait){ripples.splice(ripples.indexOf(elem),1);if(ripples.length===0){getRippleContainer().css({backgroundColor:''});}
$timeout(function(){elem.remove();},wait,false);}
function updateElement(elem){var index=ripples.indexOf(elem),state=states[index]||{},elemIsActive=ripples.length>1?false:isActive,elemIsHeld=ripples.length>1?false:isHeld;if(elemIsActive||state.animating||elemIsHeld){elem.addClass('md-ripple-visible');}else if(elem){elem.removeClass('md-ripple-visible');if(options.outline){elem.css({width:rippleSize+'px',height:rippleSize+'px',marginLeft:(rippleSize*-1)+'px',marginTop:(rippleSize*-1)+'px'});}
removeElement(elem,options.outline?450:650);}}
function createRipple(left,top){color=parseColor(element.attr('md-ink-ripple'))||parseColor($window.getComputedStyle(options.colorElement[0]).color||'rgb(0, 0, 0)');var container=getRippleContainer(),size=getRippleSize(left,top),css=getRippleCss(size,left,top),elem=getRippleElement(css),index=ripples.indexOf(elem),state=states[index]||{};rippleSize=size;state.animating=true;$timeout(function(){if(options.dimBackground){container.css({backgroundColor:color});}
elem.addClass('md-ripple-placed md-ripple-scaled');if(options.outline){elem.css({borderWidth:(size*0.5)+'px',marginLeft:(size*-0.5)+'px',marginTop:(size*-0.5)+'px'});}else{elem.css({left:'50%',top:'50%'});}
updateElement(elem);$timeout(function(){state.animating=false;updateElement(elem);},(options.outline?450:225),false);},0,false);return elem;function getRippleElement(css){var elem=angular.element('<div class="md-ripple" data-counter="'+counter++ +'">');ripples.unshift(elem);states.unshift({animating:true});container.append(elem);css&&elem.css(css);return elem;}
function getRippleSize(left,top){var width=container.prop('offsetWidth'),height=container.prop('offsetHeight'),multiplier,size,rect;if(options.isMenuItem){size=Math.sqrt(Math.pow(width,2)+Math.pow(height,2));}else if(options.outline){rect=node.getBoundingClientRect();left-=rect.left;top-=rect.top;width=Math.max(left,width-left);height=Math.max(top,height-top);size=2*Math.sqrt(Math.pow(width,2)+Math.pow(height,2));}else{multiplier=options.fullRipple?1.1:0.8;size=Math.sqrt(Math.pow(width,2)+Math.pow(height,2))*multiplier;if(options.fitRipple){size=Math.min(height,width,size);}}
return size;}
function getRippleCss(size,left,top){var rect=node.getBoundingClientRect(),css={backgroundColor:rgbaToRGB(color),borderColor:rgbaToRGB(color),width:size+'px',height:size+'px'};if(options.outline){css.width=0;css.height=0;}else{css.marginLeft=css.marginTop=(size*-0.5)+'px';}
if(options.center){css.left=css.top='50%';}else{css.left=Math.round((left-rect.left)/container.prop('offsetWidth')*100)+'%';css.top=Math.round((top-rect.top)/container.prop('offsetHeight')*100)+'%';}
return css;function rgbaToRGB(color){return color.replace('rgba','rgb').replace(/,[^\),]+\)/,')');}}}
function onPressDown(ev){if(!isRippleAllowed())return;createRipple(ev.pointer.x,ev.pointer.y);isHeld=true;}
function onPressUp(){isHeld=false;var ripple=ripples[ripples.length-1];$timeout(function(){updateElement(ripple);},0,false);}
function isRippleAllowed(){var parent=node.parentNode;var grandparent=parent&&parent.parentNode;var ancestor=grandparent&&grandparent.parentNode;return!isDisabled(node)&&!isDisabled(parent)&&!isDisabled(grandparent)&&!isDisabled(ancestor);function isDisabled(elem){return elem&&elem.hasAttribute&&elem.hasAttribute('disabled');}}}}
InkRippleService.$inject=["$window","$timeout"];function attrNoDirective(){return function(){return{controller:angular.noop};};}})();(function(){"use strict";(function(){'use strict';angular.module('material.core').factory('$mdTabInkRipple',MdTabInkRipple);function MdTabInkRipple($mdInkRipple){return{attach:attach};function attach(scope,element,options){return $mdInkRipple.attach(scope,element,angular.extend({center:false,dimBackground:true,outline:false,rippleSize:'full'},options));};}
MdTabInkRipple.$inject=["$mdInkRipple"];;})();})();(function(){"use strict";angular.module('material.core.theming.palette',[]).constant('$mdColorPalette',{'red':{'50':'#ffebee','100':'#ffcdd2','200':'#ef9a9a','300':'#e57373','400':'#ef5350','500':'#f44336','600':'#e53935','700':'#d32f2f','800':'#c62828','900':'#b71c1c','A100':'#ff8a80','A200':'#ff5252','A400':'#ff1744','A700':'#d50000','contrastDefaultColor':'light','contrastDarkColors':'50 100 200 300 400 A100','contrastStrongLightColors':'500 600 700 A200 A400 A700'},'pink':{'50':'#fce4ec','100':'#f8bbd0','200':'#f48fb1','300':'#f06292','400':'#ec407a','500':'#e91e63','600':'#d81b60','700':'#c2185b','800':'#ad1457','900':'#880e4f','A100':'#ff80ab','A200':'#ff4081','A400':'#f50057','A700':'#c51162','contrastDefaultColor':'light','contrastDarkColors':'50 100 200 300 400 A100','contrastStrongLightColors':'500 600 A200 A400 A700'},'purple':{'50':'#f3e5f5','100':'#e1bee7','200':'#ce93d8','300':'#ba68c8','400':'#ab47bc','500':'#9c27b0','600':'#8e24aa','700':'#7b1fa2','800':'#6a1b9a','900':'#4a148c','A100':'#ea80fc','A200':'#e040fb','A400':'#d500f9','A700':'#aa00ff','contrastDefaultColor':'light','contrastDarkColors':'50 100 200 A100','contrastStrongLightColors':'300 400 A200 A400 A700'},'deep-purple':{'50':'#ede7f6','100':'#d1c4e9','200':'#b39ddb','300':'#9575cd','400':'#7e57c2','500':'#673ab7','600':'#5e35b1','700':'#512da8','800':'#4527a0','900':'#311b92','A100':'#b388ff','A200':'#7c4dff','A400':'#651fff','A700':'#6200ea','contrastDefaultColor':'light','contrastDarkColors':'50 100 200 A100','contrastStrongLightColors':'300 400 A200'},'indigo':{'50':'#e8eaf6','100':'#c5cae9','200':'#9fa8da','300':'#7986cb','400':'#5c6bc0','500':'#3f51b5','600':'#3949ab','700':'#303f9f','800':'#283593','900':'#1a237e','A100':'#8c9eff','A200':'#536dfe','A400':'#3d5afe','A700':'#304ffe','contrastDefaultColor':'light','contrastDarkColors':'50 100 200 A100','contrastStrongLightColors':'300 400 A200 A400'},'blue':{'50':'#e3f2fd','100':'#bbdefb','200':'#90caf9','300':'#64b5f6','400':'#42a5f5','500':'#2196f3','600':'#1e88e5','700':'#1976d2','800':'#1565c0','900':'#0d47a1','A100':'#82b1ff','A200':'#448aff','A400':'#2979ff','A700':'#2962ff','contrastDefaultColor':'light','contrastDarkColors':'100 200 300 400 A100','contrastStrongLightColors':'500 600 700 A200 A400 A700'},'light-blue':{'50':'#e1f5fe','100':'#b3e5fc','200':'#81d4fa','300':'#4fc3f7','400':'#29b6f6','500':'#03a9f4','600':'#039be5','700':'#0288d1','800':'#0277bd','900':'#01579b','A100':'#80d8ff','A200':'#40c4ff','A400':'#00b0ff','A700':'#0091ea','contrastDefaultColor':'dark','contrastLightColors':'500 600 700 800 900 A700','contrastStrongLightColors':'500 600 700 800 A700'},'cyan':{'50':'#e0f7fa','100':'#b2ebf2','200':'#80deea','300':'#4dd0e1','400':'#26c6da','500':'#00bcd4','600':'#00acc1','700':'#0097a7','800':'#00838f','900':'#006064','A100':'#84ffff','A200':'#18ffff','A400':'#00e5ff','A700':'#00b8d4','contrastDefaultColor':'dark','contrastLightColors':'500 600 700 800 900','contrastStrongLightColors':'500 600 700 800'},'teal':{'50':'#e0f2f1','100':'#b2dfdb','200':'#80cbc4','300':'#4db6ac','400':'#26a69a','500':'#009688','600':'#00897b','700':'#00796b','800':'#00695c','900':'#004d40','A100':'#a7ffeb','A200':'#64ffda','A400':'#1de9b6','A700':'#00bfa5','contrastDefaultColor':'dark','contrastLightColors':'500 600 700 800 900','contrastStrongLightColors':'500 600 700'},'green':{'50':'#e8f5e9','100':'#c8e6c9','200':'#a5d6a7','300':'#81c784','400':'#66bb6a','500':'#4caf50','600':'#43a047','700':'#388e3c','800':'#2e7d32','900':'#1b5e20','A100':'#b9f6ca','A200':'#69f0ae','A400':'#00e676','A700':'#00c853','contrastDefaultColor':'dark','contrastLightColors':'500 600 700 800 900','contrastStrongLightColors':'500 600 700'},'light-green':{'50':'#f1f8e9','100':'#dcedc8','200':'#c5e1a5','300':'#aed581','400':'#9ccc65','500':'#8bc34a','600':'#7cb342','700':'#689f38','800':'#558b2f','900':'#33691e','A100':'#ccff90','A200':'#b2ff59','A400':'#76ff03','A700':'#64dd17','contrastDefaultColor':'dark','contrastLightColors':'800 900','contrastStrongLightColors':'800 900'},'lime':{'50':'#f9fbe7','100':'#f0f4c3','200':'#e6ee9c','300':'#dce775','400':'#d4e157','500':'#cddc39','600':'#c0ca33','700':'#afb42b','800':'#9e9d24','900':'#827717','A100':'#f4ff81','A200':'#eeff41','A400':'#c6ff00','A700':'#aeea00','contrastDefaultColor':'dark','contrastLightColors':'900','contrastStrongLightColors':'900'},'yellow':{'50':'#fffde7','100':'#fff9c4','200':'#fff59d','300':'#fff176','400':'#ffee58','500':'#ffeb3b','600':'#fdd835','700':'#fbc02d','800':'#f9a825','900':'#f57f17','A100':'#ffff8d','A200':'#ffff00','A400':'#ffea00','A700':'#ffd600','contrastDefaultColor':'dark'},'amber':{'50':'#fff8e1','100':'#ffecb3','200':'#ffe082','300':'#ffd54f','400':'#ffca28','500':'#ffc107','600':'#ffb300','700':'#ffa000','800':'#ff8f00','900':'#ff6f00','A100':'#ffe57f','A200':'#ffd740','A400':'#ffc400','A700':'#ffab00','contrastDefaultColor':'dark'},'orange':{'50':'#fff3e0','100':'#ffe0b2','200':'#ffcc80','300':'#ffb74d','400':'#ffa726','500':'#ff9800','600':'#fb8c00','700':'#f57c00','800':'#ef6c00','900':'#e65100','A100':'#ffd180','A200':'#ffab40','A400':'#ff9100','A700':'#ff6d00','contrastDefaultColor':'dark','contrastLightColors':'800 900','contrastStrongLightColors':'800 900'},'deep-orange':{'50':'#fbe9e7','100':'#ffccbc','200':'#ffab91','300':'#ff8a65','400':'#ff7043','500':'#ff5722','600':'#f4511e','700':'#e64a19','800':'#d84315','900':'#bf360c','A100':'#ff9e80','A200':'#ff6e40','A400':'#ff3d00','A700':'#dd2c00','contrastDefaultColor':'light','contrastDarkColors':'50 100 200 300 400 A100 A200','contrastStrongLightColors':'500 600 700 800 900 A400 A700'},'brown':{'50':'#efebe9','100':'#d7ccc8','200':'#bcaaa4','300':'#a1887f','400':'#8d6e63','500':'#795548','600':'#6d4c41','700':'#5d4037','800':'#4e342e','900':'#3e2723','A100':'#d7ccc8','A200':'#bcaaa4','A400':'#8d6e63','A700':'#5d4037','contrastDefaultColor':'light','contrastDarkColors':'50 100 200','contrastStrongLightColors':'300 400'},'grey':{'50':'#fafafa','100':'#f5f5f5','200':'#eeeeee','300':'#e0e0e0','400':'#bdbdbd','500':'#9e9e9e','600':'#757575','700':'#616161','800':'#424242','900':'#212121','1000':'#000000','A100':'#ffffff','A200':'#eeeeee','A400':'#bdbdbd','A700':'#616161','contrastDefaultColor':'dark','contrastLightColors':'600 700 800 900'},'blue-grey':{'50':'#eceff1','100':'#cfd8dc','200':'#b0bec5','300':'#90a4ae','400':'#78909c','500':'#607d8b','600':'#546e7a','700':'#455a64','800':'#37474f','900':'#263238','A100':'#cfd8dc','A200':'#b0bec5','A400':'#78909c','A700':'#455a64','contrastDefaultColor':'light','contrastDarkColors':'50 100 200 300','contrastStrongLightColors':'400 500'}});})();(function(){"use strict";angular.module('material.core.theming',['material.core.theming.palette']).directive('mdTheme',ThemingDirective).directive('mdThemable',ThemableDirective).provider('$mdTheming',ThemingProvider).run(generateThemes);var GENERATED={};var PALETTES;var THEMES;var DARK_FOREGROUND={name:'dark','1':'rgba(0,0,0,0.87)','2':'rgba(0,0,0,0.54)','3':'rgba(0,0,0,0.26)','4':'rgba(0,0,0,0.12)'};var LIGHT_FOREGROUND={name:'light','1':'rgba(255,255,255,1.0)','2':'rgba(255,255,255,0.7)','3':'rgba(255,255,255,0.3)','4':'rgba(255,255,255,0.12)'};var DARK_SHADOW='1px 1px 0px rgba(0,0,0,0.4), -1px -1px 0px rgba(0,0,0,0.4)';var LIGHT_SHADOW='';var DARK_CONTRAST_COLOR=colorToRgbaArray('rgba(0,0,0,0.87)');var LIGHT_CONTRAST_COLOR=colorToRgbaArray('rgba(255,255,255,0.87');var STRONG_LIGHT_CONTRAST_COLOR=colorToRgbaArray('rgb(255,255,255)');var THEME_COLOR_TYPES=['primary','accent','warn','background'];var DEFAULT_COLOR_TYPE='primary';var LIGHT_DEFAULT_HUES={'accent':{'default':'A200','hue-1':'A100','hue-2':'A400','hue-3':'A700'},'background':{'default':'A100','hue-1':'300','hue-2':'800','hue-3':'900'}};var DARK_DEFAULT_HUES={'background':{'default':'800','hue-1':'300','hue-2':'600','hue-3':'900'}};THEME_COLOR_TYPES.forEach(function(colorType){var defaultDefaultHues={'default':'500','hue-1':'300','hue-2':'800','hue-3':'A100'};if(!LIGHT_DEFAULT_HUES[colorType])LIGHT_DEFAULT_HUES[colorType]=defaultDefaultHues;if(!DARK_DEFAULT_HUES[colorType])DARK_DEFAULT_HUES[colorType]=defaultDefaultHues;});var VALID_HUE_VALUES=['50','100','200','300','400','500','600','700','800','900','A100','A200','A400','A700'];function ThemingProvider($mdColorPalette){PALETTES={};THEMES={};var themingProvider;var defaultTheme='default';var alwaysWatchTheme=false;angular.extend(PALETTES,$mdColorPalette);ThemingService.$inject=["$rootScope","$log"];return themingProvider={definePalette:definePalette,extendPalette:extendPalette,theme:registerTheme,setDefaultTheme:function(theme){defaultTheme=theme;},alwaysWatchTheme:function(alwaysWatch){alwaysWatchTheme=alwaysWatch;},$get:ThemingService,_LIGHT_DEFAULT_HUES:LIGHT_DEFAULT_HUES,_DARK_DEFAULT_HUES:DARK_DEFAULT_HUES,_PALETTES:PALETTES,_THEMES:THEMES,_parseRules:parseRules,_rgba:rgba};function definePalette(name,map){map=map||{};PALETTES[name]=checkPaletteValid(name,map);return themingProvider;}
function extendPalette(name,map){return checkPaletteValid(name,angular.extend({},PALETTES[name]||{},map));}
function checkPaletteValid(name,map){var missingColors=VALID_HUE_VALUES.filter(function(field){return!map[field];});if(missingColors.length){throw new Error("Missing colors %1 in palette %2!".replace('%1',missingColors.join(', ')).replace('%2',name));}
return map;}
function registerTheme(name,inheritFrom){if(THEMES[name])return THEMES[name];inheritFrom=inheritFrom||'default';var parentTheme=typeof inheritFrom==='string'?THEMES[inheritFrom]:inheritFrom;var theme=new Theme(name);if(parentTheme){angular.forEach(parentTheme.colors,function(color,colorType){theme.colors[colorType]={name:color.name,hues:angular.extend({},color.hues)};});}
THEMES[name]=theme;return theme;}
function Theme(name){var self=this;self.name=name;self.colors={};self.dark=setDark;setDark(false);function setDark(isDark){isDark=arguments.length===0?true:!!isDark;if(isDark===self.isDark)return;self.isDark=isDark;self.foregroundPalette=self.isDark?LIGHT_FOREGROUND:DARK_FOREGROUND;self.foregroundShadow=self.isDark?DARK_SHADOW:LIGHT_SHADOW;var newDefaultHues=self.isDark?DARK_DEFAULT_HUES:LIGHT_DEFAULT_HUES;var oldDefaultHues=self.isDark?LIGHT_DEFAULT_HUES:DARK_DEFAULT_HUES;angular.forEach(newDefaultHues,function(newDefaults,colorType){var color=self.colors[colorType];var oldDefaults=oldDefaultHues[colorType];if(color){for(var hueName in color.hues){if(color.hues[hueName]===oldDefaults[hueName]){color.hues[hueName]=newDefaults[hueName];}}}});return self;}
THEME_COLOR_TYPES.forEach(function(colorType){var defaultHues=(self.isDark?DARK_DEFAULT_HUES:LIGHT_DEFAULT_HUES)[colorType];self[colorType+'Palette']=function setPaletteType(paletteName,hues){var color=self.colors[colorType]={name:paletteName,hues:angular.extend({},defaultHues,hues)};Object.keys(color.hues).forEach(function(name){if(!defaultHues[name]){throw new Error("Invalid hue name '%1' in theme %2's %3 color %4. Available hue names: %4".replace('%1',name).replace('%2',self.name).replace('%3',paletteName).replace('%4',Object.keys(defaultHues).join(', ')));}});Object.keys(color.hues).map(function(key){return color.hues[key];}).forEach(function(hueValue){if(VALID_HUE_VALUES.indexOf(hueValue)==-1){throw new Error("Invalid hue value '%1' in theme %2's %3 color %4. Available hue values: %5".replace('%1',hueValue).replace('%2',self.name).replace('%3',colorType).replace('%4',paletteName).replace('%5',VALID_HUE_VALUES.join(', ')));}});return self;};self[colorType+'Color']=function(){var args=Array.prototype.slice.call(arguments);console.warn('$mdThemingProviderTheme.'+colorType+'Color() has been deprecated. '+'Use $mdThemingProviderTheme.'+colorType+'Palette() instead.');return self[colorType+'Palette'].apply(self,args);};});}
function ThemingService($rootScope,$log){applyTheme.inherit=function(el,parent){var ctrl=parent.controller('mdTheme');var attrThemeValue=el.attr('md-theme-watch');if((alwaysWatchTheme||angular.isDefined(attrThemeValue))&&attrThemeValue!='false'){var deregisterWatch=$rootScope.$watch(function(){return ctrl&&ctrl.$mdTheme||defaultTheme;},changeTheme);el.on('$destroy',deregisterWatch);}else{var theme=ctrl&&ctrl.$mdTheme||defaultTheme;changeTheme(theme);}
function changeTheme(theme){if(!registered(theme)){$log.warn('Attempted to use unregistered theme \''+theme+'\'. '+'Register it with $mdThemingProvider.theme().');}
var oldTheme=el.data('$mdThemeName');if(oldTheme)el.removeClass('md-'+oldTheme+'-theme');el.addClass('md-'+theme+'-theme');el.data('$mdThemeName',theme);}};applyTheme.THEMES=angular.extend({},THEMES);applyTheme.defaultTheme=function(){return defaultTheme;};applyTheme.registered=registered;return applyTheme;function registered(themeName){if(themeName===undefined||themeName==='')return true;return applyTheme.THEMES[themeName]!==undefined;}
function applyTheme(scope,el){if(el===undefined){el=scope;scope=undefined;}
if(scope===undefined){scope=$rootScope;}
applyTheme.inherit(el,el);}}}
ThemingProvider.$inject=["$mdColorPalette"];function ThemingDirective($mdTheming,$interpolate,$log){return{priority:100,link:{pre:function(scope,el,attrs){var ctrl={$setTheme:function(theme){if(!$mdTheming.registered(theme)){$log.warn('attempted to use unregistered theme \''+theme+'\'');}
ctrl.$mdTheme=theme;}};el.data('$mdThemeController',ctrl);ctrl.$setTheme($interpolate(attrs.mdTheme)(scope));attrs.$observe('mdTheme',ctrl.$setTheme);}}};}
ThemingDirective.$inject=["$mdTheming","$interpolate","$log"];function ThemableDirective($mdTheming){return $mdTheming;}
ThemableDirective.$inject=["$mdTheming"];function parseRules(theme,colorType,rules){checkValidPalette(theme,colorType);rules=rules.replace(/THEME_NAME/g,theme.name);var generatedRules=[];var color=theme.colors[colorType];var themeNameRegex=new RegExp('.md-'+theme.name+'-theme','g');var hueRegex=new RegExp('(\'|")?{{\\s*('+colorType+')-(color|contrast)-?(\\d\\.?\\d*)?\\s*}}(\"|\')?','g');var simpleVariableRegex=/'?"?\{\{\s*([a-zA-Z]+)-(A?\d+|hue\-[0-3]|shadow)-?(\d\.?\d*)?\s*\}\}'?"?/g;var palette=PALETTES[color.name];rules=rules.replace(simpleVariableRegex,function(match,colorType,hue,opacity){if(colorType==='foreground'){if(hue=='shadow'){return theme.foregroundShadow;}else{return theme.foregroundPalette[hue]||theme.foregroundPalette['1'];}}
if(hue.indexOf('hue')===0){hue=theme.colors[colorType].hues[hue];}
return rgba((PALETTES[theme.colors[colorType].name][hue]||'').value,opacity);});angular.forEach(color.hues,function(hueValue,hueName){var newRule=rules.replace(hueRegex,function(match,_,colorType,hueType,opacity){return rgba(palette[hueValue][hueType==='color'?'value':'contrast'],opacity);});if(hueName!=='default'){newRule=newRule.replace(themeNameRegex,'.md-'+theme.name+'-theme.md-'+hueName);}
if(theme.name=='default'){newRule=newRule.replace(/\.md-default-theme/g,'');}
generatedRules.push(newRule);});return generatedRules;}
function generateThemes($injector){var head=document.getElementsByTagName('head')[0];var firstChild=head?head.firstElementChild:null;var themeCss=$injector.has('$MD_THEME_CSS')?$injector.get('$MD_THEME_CSS'):'';if(!firstChild)return;if(themeCss.length===0)return;angular.forEach(PALETTES,sanitizePalette);var rulesByType={};var rules=themeCss.split(/\}(?!(\}|'|"|;))/).filter(function(rule){return rule&&rule.length;}).map(function(rule){return rule.trim()+'}';});var ruleMatchRegex=new RegExp('md-('+THEME_COLOR_TYPES.join('|')+')','g');THEME_COLOR_TYPES.forEach(function(type){rulesByType[type]='';});rules.forEach(function(rule){var match=rule.match(ruleMatchRegex);for(var i=0,type;type=THEME_COLOR_TYPES[i];i++){if(rule.indexOf('.md-'+type)>-1){return rulesByType[type]+=rule;}}
for(i=0;type=THEME_COLOR_TYPES[i];i++){if(rule.indexOf(type)>-1){return rulesByType[type]+=rule;}}
return rulesByType[DEFAULT_COLOR_TYPE]+=rule;});angular.forEach(THEMES,function(theme){if(!GENERATED[theme.name]){THEME_COLOR_TYPES.forEach(function(colorType){var styleStrings=parseRules(theme,colorType,rulesByType[colorType]);while(styleStrings.length){var style=document.createElement('style');style.setAttribute('type','text/css');style.appendChild(document.createTextNode(styleStrings.shift()));head.insertBefore(style,firstChild);}});if(theme.colors.primary.name==theme.colors.accent.name){console.warn("$mdThemingProvider: Using the same palette for primary and"+" accent. This violates the material design spec.");}
GENERATED[theme.name]=true;}});function sanitizePalette(palette){var defaultContrast=palette.contrastDefaultColor;var lightColors=palette.contrastLightColors||[];var strongLightColors=palette.contrastStrongLightColors||[];var darkColors=palette.contrastDarkColors||[];if(typeof lightColors==='string')lightColors=lightColors.split(' ');if(typeof strongLightColors==='string')strongLightColors=strongLightColors.split(' ');if(typeof darkColors==='string')darkColors=darkColors.split(' ');delete palette.contrastDefaultColor;delete palette.contrastLightColors;delete palette.contrastStrongLightColors;delete palette.contrastDarkColors;angular.forEach(palette,function(hueValue,hueName){if(angular.isObject(hueValue))return;var rgbValue=colorToRgbaArray(hueValue);if(!rgbValue){throw new Error("Color %1, in palette %2's hue %3, is invalid. Hex or rgb(a) color expected.".replace('%1',hueValue).replace('%2',palette.name).replace('%3',hueName));}
palette[hueName]={value:rgbValue,contrast:getContrastColor()};function getContrastColor(){if(defaultContrast==='light'){if(darkColors.indexOf(hueName)>-1){return DARK_CONTRAST_COLOR;}else{return strongLightColors.indexOf(hueName)>-1?STRONG_LIGHT_CONTRAST_COLOR:LIGHT_CONTRAST_COLOR;}}else{if(lightColors.indexOf(hueName)>-1){return strongLightColors.indexOf(hueName)>-1?STRONG_LIGHT_CONTRAST_COLOR:LIGHT_CONTRAST_COLOR;}else{return DARK_CONTRAST_COLOR;}}}});}}
generateThemes.$inject=["$injector"];function checkValidPalette(theme,colorType){if(!PALETTES[(theme.colors[colorType]||{}).name]){throw new Error("You supplied an invalid color palette for theme %1's %2 palette. Available palettes: %3".replace('%1',theme.name).replace('%2',colorType).replace('%3',Object.keys(PALETTES).join(', ')));}}
function colorToRgbaArray(clr){if(angular.isArray(clr)&&clr.length==3)return clr;if(/^rgb/.test(clr)){return clr.replace(/(^\s*rgba?\(|\)\s*$)/g,'').split(',').map(function(value,i){return i==3?parseFloat(value,10):parseInt(value,10);});}
if(clr.charAt(0)=='#')clr=clr.substring(1);if(!/^([a-fA-F0-9]{3}){1,2}$/g.test(clr))return;var dig=clr.length/3;var red=clr.substr(0,dig);var grn=clr.substr(dig,dig);var blu=clr.substr(dig*2);if(dig===1){red+=red;grn+=grn;blu+=blu;}
return[parseInt(red,16),parseInt(grn,16),parseInt(blu,16)];}
function rgba(rgbArray,opacity){if(!rgbArray)return"rgb('0,0,0')";if(rgbArray.length==4){rgbArray=angular.copy(rgbArray);opacity?rgbArray.pop():opacity=rgbArray.pop();}
return opacity&&(typeof opacity=='number'||(typeof opacity=='string'&&opacity.length))?'rgba('+rgbArray.join(',')+','+opacity+')':'rgb('+rgbArray.join(',')+')';}})();(function(){"use strict";angular.module('material.components.autocomplete',['material.core','material.components.icon']);})();(function(){"use strict";angular.module('material.components.backdrop',['material.core']).directive('mdBackdrop',BackdropDirective);function BackdropDirective($mdTheming){return $mdTheming;}
BackdropDirective.$inject=["$mdTheming"];})();(function(){"use strict";angular.module('material.components.bottomSheet',['material.core','material.components.backdrop']).directive('mdBottomSheet',MdBottomSheetDirective).provider('$mdBottomSheet',MdBottomSheetProvider);function MdBottomSheetDirective(){return{restrict:'E'};}
function MdBottomSheetProvider($$interimElementProvider){var CLOSING_VELOCITY=0.5;var PADDING=80;bottomSheetDefaults.$inject=["$animate","$mdConstant","$mdUtil","$timeout","$compile","$mdTheming","$mdBottomSheet","$rootElement","$mdGesture"];return $$interimElementProvider('$mdBottomSheet').setDefaults({methods:['disableParentScroll','escapeToClose','targetEvent'],options:bottomSheetDefaults});function bottomSheetDefaults($animate,$mdConstant,$mdUtil,$timeout,$compile,$mdTheming,$mdBottomSheet,$rootElement,$mdGesture){var backdrop;return{themable:true,targetEvent:null,onShow:onShow,onRemove:onRemove,escapeToClose:true,disableParentScroll:true};function onShow(scope,element,options){element=$mdUtil.extractElementByName(element,'md-bottom-sheet');backdrop=$compile('<md-backdrop class="md-opaque md-bottom-sheet-backdrop">')(scope);backdrop.on('click',function(){$timeout($mdBottomSheet.cancel);});$mdTheming.inherit(backdrop,options.parent);$animate.enter(backdrop,options.parent,null);var bottomSheet=new BottomSheet(element,options.parent);options.bottomSheet=bottomSheet;options.targetEvent&&angular.element(options.targetEvent.target).blur();$mdTheming.inherit(bottomSheet.element,options.parent);if(options.disableParentScroll){options.lastOverflow=options.parent.css('overflow');options.parent.css('overflow','hidden');}
return $animate.enter(bottomSheet.element,options.parent).then(function(){var focusable=angular.element(element[0].querySelector('button')||element[0].querySelector('a')||element[0].querySelector('[ng-click]'));focusable.focus();if(options.escapeToClose){options.rootElementKeyupCallback=function(e){if(e.keyCode===$mdConstant.KEY_CODE.ESCAPE){$timeout($mdBottomSheet.cancel);}};$rootElement.on('keyup',options.rootElementKeyupCallback);}});}
function onRemove(scope,element,options){var bottomSheet=options.bottomSheet;$animate.leave(backdrop);return $animate.leave(bottomSheet.element).then(function(){if(options.disableParentScroll){options.parent.css('overflow',options.lastOverflow);delete options.lastOverflow;}
bottomSheet.cleanup();options.targetEvent&&angular.element(options.targetEvent.target).focus();});}
function BottomSheet(element,parent){var deregister=$mdGesture.register(parent,'drag',{horizontal:false});parent.on('$md.dragstart',onDragStart).on('$md.drag',onDrag).on('$md.dragend',onDragEnd);return{element:element,cleanup:function cleanup(){deregister();parent.off('$md.dragstart',onDragStart).off('$md.drag',onDrag).off('$md.dragend',onDragEnd);}};function onDragStart(ev){element.css($mdConstant.CSS.TRANSITION_DURATION,'0ms');}
function onDrag(ev){var transform=ev.pointer.distanceY;if(transform<5){transform=Math.max(-PADDING,transform/2);}
element.css($mdConstant.CSS.TRANSFORM,'translate3d(0,'+(PADDING+transform)+'px,0)');}
function onDragEnd(ev){if(ev.pointer.distanceY>0&&(ev.pointer.distanceY>20||Math.abs(ev.pointer.velocityY)>CLOSING_VELOCITY)){var distanceRemaining=element.prop('offsetHeight')-ev.pointer.distanceY;var transitionDuration=Math.min(distanceRemaining/ev.pointer.velocityY*0.75,500);element.css($mdConstant.CSS.TRANSITION_DURATION,transitionDuration+'ms');$timeout($mdBottomSheet.cancel);}else{element.css($mdConstant.CSS.TRANSITION_DURATION,'');element.css($mdConstant.CSS.TRANSFORM,'');}}}}}
MdBottomSheetProvider.$inject=["$$interimElementProvider"];})();(function(){"use strict";angular.module('material.components.button',['material.core']).directive('mdButton',MdButtonDirective);function MdButtonDirective($mdButtonInkRipple,$mdTheming,$mdAria,$timeout){return{restrict:'EA',replace:true,transclude:true,template:getTemplate,link:postLink};function isAnchor(attr){return angular.isDefined(attr.href)||angular.isDefined(attr.ngHref)||angular.isDefined(attr.ngLink)||angular.isDefined(attr.uiSref);}
function getTemplate(element,attr){return isAnchor(attr)?'<a class="md-button" ng-transclude></a>':'<button class="md-button" ng-transclude></button>';}
function postLink(scope,element,attr){var node=element[0];$mdTheming(element);$mdButtonInkRipple.attach(scope,element);var elementHasText=node.textContent.trim();if(!elementHasText){$mdAria.expect(element,'aria-label');}
if(isAnchor(attr)&&angular.isDefined(attr.ngDisabled)){scope.$watch(attr.ngDisabled,function(isDisabled){element.attr('tabindex',isDisabled?-1:0);});}
element.on('click',function(e){if(attr.disabled===true){e.preventDefault();e.stopImmediatePropagation();}});scope.mouseActive=false;element.on('mousedown',function(){scope.mouseActive=true;$timeout(function(){scope.mouseActive=false;},100);}).on('focus',function(){if(scope.mouseActive===false){element.addClass('md-focused');}}).on('blur',function(){element.removeClass('md-focused');});}}
MdButtonDirective.$inject=["$mdButtonInkRipple","$mdTheming","$mdAria","$timeout"];})();(function(){"use strict";angular.module('material.components.card',['material.core']).directive('mdCard',mdCardDirective);function mdCardDirective($mdTheming){return{restrict:'E',link:function($scope,$element,$attr){$mdTheming($element);}};}
mdCardDirective.$inject=["$mdTheming"];})();(function(){"use strict";angular.module('material.components.checkbox',['material.core']).directive('mdCheckbox',MdCheckboxDirective);function MdCheckboxDirective(inputDirective,$mdInkRipple,$mdAria,$mdConstant,$mdTheming,$mdUtil,$timeout){inputDirective=inputDirective[0];var CHECKED_CSS='md-checked';return{restrict:'E',transclude:true,require:'?ngModel',priority:210,template:'<div class="md-container" md-ink-ripple md-ink-ripple-checkbox>'+'<div class="md-icon"></div>'+'</div>'+'<div ng-transclude class="md-label"></div>',compile:compile};function compile(tElement,tAttrs){tAttrs.type='checkbox';tAttrs.tabindex=tAttrs.tabindex||'0';tElement.attr('role',tAttrs.type);return function postLink(scope,element,attr,ngModelCtrl){ngModelCtrl=ngModelCtrl||$mdUtil.fakeNgModel();$mdTheming(element);if(attr.ngChecked){scope.$watch(scope.$eval.bind(scope,attr.ngChecked),ngModelCtrl.$setViewValue.bind(ngModelCtrl));}
$$watchExpr('ngDisabled','tabindex',{true:'-1',false:attr.tabindex});$mdAria.expectWithText(element,'aria-label');inputDirective.link.pre(scope,{on:angular.noop,0:{}},attr,[ngModelCtrl]);scope.mouseActive=false;element.on('click',listener).on('keypress',keypressHandler).on('mousedown',function(){scope.mouseActive=true;$timeout(function(){scope.mouseActive=false;},100);}).on('focus',function(){if(scope.mouseActive===false){element.addClass('md-focused');}}).on('blur',function(){element.removeClass('md-focused');});ngModelCtrl.$render=render;function $$watchExpr(expr,htmlAttr,valueOpts){if(attr[expr]){scope.$watch(attr[expr],function(val){if(valueOpts[val]){element.attr(htmlAttr,valueOpts[val]);}});}}
function keypressHandler(ev){var keyCode=ev.which||ev.keyCode;if(keyCode===$mdConstant.KEY_CODE.SPACE||keyCode===$mdConstant.KEY_CODE.ENTER){ev.preventDefault();if(!element.hasClass('md-focused')){element.addClass('md-focused');}
listener(ev);}}
function listener(ev){if(element[0].hasAttribute('disabled'))return;scope.$apply(function(){var viewValue=attr.ngChecked?attr.checked:!ngModelCtrl.$viewValue;ngModelCtrl.$setViewValue(viewValue,ev&&ev.type);ngModelCtrl.$render();});}
function render(){if(ngModelCtrl.$viewValue){element.addClass(CHECKED_CSS);}else{element.removeClass(CHECKED_CSS);}}};}}
MdCheckboxDirective.$inject=["inputDirective","$mdInkRipple","$mdAria","$mdConstant","$mdTheming","$mdUtil","$timeout"];})();(function(){"use strict";angular.module('material.components.chips',['material.core','material.components.autocomplete']);})();(function(){"use strict";angular.module('material.components.content',['material.core']).directive('mdContent',mdContentDirective);function mdContentDirective($mdTheming){return{restrict:'E',controller:['$scope','$element',ContentController],link:function(scope,element,attr){var node=element[0];$mdTheming(element);scope.$broadcast('$mdContentLoaded',element);iosScrollFix(element[0]);}};function ContentController($scope,$element){this.$scope=$scope;this.$element=$element;}}
mdContentDirective.$inject=["$mdTheming"];function iosScrollFix(node){angular.element(node).on('$md.pressdown',function(ev){if(ev.pointer.type!=='t')return;if(ev.$materialScrollFixed)return;ev.$materialScrollFixed=true;if(node.scrollTop===0){node.scrollTop=1;}else if(node.scrollHeight===node.scrollTop+node.offsetHeight){node.scrollTop-=1;}});}})();(function(){"use strict";angular.module('material.components.dialog',['material.core','material.components.backdrop']).directive('mdDialog',MdDialogDirective).provider('$mdDialog',MdDialogProvider);function MdDialogDirective($$rAF,$mdTheming){return{restrict:'E',link:function(scope,element,attr){$mdTheming(element);$$rAF(function(){var content=element[0].querySelector('md-dialog-content');if(content&&content.scrollHeight>content.clientHeight){element.addClass('md-content-overflow');}});}};}
MdDialogDirective.$inject=["$$rAF","$mdTheming"];function MdDialogProvider($$interimElementProvider){var alertDialogMethods=['title','content','ariaLabel','ok'];advancedDialogOptions.$inject=["$mdDialog","$mdTheming"];dialogDefaultOptions.$inject=["$mdAria","$document","$mdUtil","$mdConstant","$mdTheming","$mdDialog","$timeout","$rootElement","$animate","$$rAF","$q"];return $$interimElementProvider('$mdDialog').setDefaults({methods:['disableParentScroll','hasBackdrop','clickOutsideToClose','escapeToClose','targetEvent','parent'],options:dialogDefaultOptions}).addPreset('alert',{methods:['title','content','ariaLabel','ok','theme'],options:advancedDialogOptions}).addPreset('confirm',{methods:['title','content','ariaLabel','ok','cancel','theme'],options:advancedDialogOptions});function advancedDialogOptions($mdDialog,$mdTheming){return{template:['<md-dialog md-theme="{{ dialog.theme }}" aria-label="{{ dialog.ariaLabel }}">','<md-dialog-content role="document" tabIndex="-1">','<h2 class="md-title">{{ dialog.title }}</h2>','<p>{{ dialog.content }}</p>','</md-dialog-content>','<div class="md-actions">','<md-button ng-if="dialog.$type == \'confirm\'"'+' ng-click="dialog.abort()" class="md-primary">','{{ dialog.cancel }}','</md-button>','<md-button ng-click="dialog.hide()" class="md-primary">','{{ dialog.ok }}','</md-button>','</div>','</md-dialog>'].join(''),controller:function mdDialogCtrl(){this.hide=function(){$mdDialog.hide(true);};this.abort=function(){$mdDialog.cancel();};},controllerAs:'dialog',bindToController:true,theme:$mdTheming.defaultTheme()};}
function dialogDefaultOptions($mdAria,$document,$mdUtil,$mdConstant,$mdTheming,$mdDialog,$timeout,$rootElement,$animate,$$rAF,$q){return{hasBackdrop:true,isolateScope:true,onShow:onShow,onRemove:onRemove,clickOutsideToClose:false,escapeToClose:true,targetEvent:null,focusOnOpen:true,disableParentScroll:true,transformTemplate:function(template){return'<div class="md-dialog-container">'+template+'</div>';}};function trapFocus(ev){var dialog=document.querySelector('md-dialog');if(dialog&&!dialog.contains(ev.target)){ev.stopImmediatePropagation();dialog.focus();}}
function onShow(scope,element,options){angular.element($document[0].body).addClass('md-dialog-is-showing');element=$mdUtil.extractElementByName(element,'md-dialog');options.parent=angular.element(options.parent);options.popInTarget=angular.element((options.targetEvent||{}).target);var closeButton=findCloseButton();if(options.hasBackdrop){var computeFrom=(options.parent[0]==$document[0].body&&$document[0].documentElement&&$document[0].documentElement.scrollTop)?angular.element($document[0].documentElement):options.parent;var parentOffset=computeFrom.prop('scrollTop');options.backdrop=angular.element('<md-backdrop class="md-dialog-backdrop md-opaque">');options.backdrop.css('top',parentOffset+'px');$mdTheming.inherit(options.backdrop,options.parent);$animate.enter(options.backdrop,options.parent);element.css('top',parentOffset+'px');}
var role='dialog',elementToFocus=closeButton;if(options.$type==='alert'){role='alertdialog';elementToFocus=element.find('md-dialog-content');}
configureAria(element.find('md-dialog'),role,options);document.addEventListener('focus',trapFocus,true);if(options.disableParentScroll){options.lastOverflow=options.parent.css('overflow');options.parent.css('overflow','hidden');}
return dialogPopIn(element,options.parent,options.popInTarget&&options.popInTarget.length&&options.popInTarget).then(function(){applyAriaToSiblings(element,true);if(options.escapeToClose){options.rootElementKeyupCallback=function(e){if(e.keyCode===$mdConstant.KEY_CODE.ESCAPE){$timeout($mdDialog.cancel);}};$rootElement.on('keyup',options.rootElementKeyupCallback);}
if(options.clickOutsideToClose){options.dialogClickOutsideCallback=function(ev){if(ev.target===element[0]){$timeout($mdDialog.cancel);}};element.on('click',options.dialogClickOutsideCallback);}
if(options.focusOnOpen){elementToFocus.focus();}});function findCloseButton(){var closeButton=element[0].querySelector('.dialog-close');if(!closeButton){var actionButtons=element[0].querySelectorAll('.md-actions button');closeButton=actionButtons[actionButtons.length-1];}
return angular.element(closeButton);}}
function onRemove(scope,element,options){angular.element($document[0].body).removeClass('md-dialog-is-showing');if(options.backdrop){$animate.leave(options.backdrop);}
if(options.disableParentScroll){options.parent.css('overflow',options.lastOverflow);delete options.lastOverflow;}
if(options.escapeToClose){$rootElement.off('keyup',options.rootElementKeyupCallback);}
if(options.clickOutsideToClose){element.off('click',options.dialogClickOutsideCallback);}
applyAriaToSiblings(element,false);document.removeEventListener('focus',trapFocus,true);return dialogPopOut(element,options.parent,options.popInTarget&&options.popInTarget.length&&options.popInTarget).then(function(){element.remove();options.popInTarget&&options.popInTarget.focus();});}
function configureAria(element,role,options){element.attr({'role':role,'tabIndex':'-1'});var dialogContent=element.find('md-dialog-content');if(dialogContent.length===0){dialogContent=element;}
var dialogId=element.attr('id')||('dialog_'+$mdUtil.nextUid());dialogContent.attr('id',dialogId);element.attr('aria-describedby',dialogId);if(options.ariaLabel){$mdAria.expect(element,'aria-label',options.ariaLabel);}
else{$mdAria.expectAsync(element,'aria-label',function(){var words=dialogContent.text().split(/\s+/);if(words.length>3)words=words.slice(0,3).concat('...');return words.join(' ');});}}
function isNodeOneOf(elem,nodeTypeArray){if(nodeTypeArray.indexOf(elem.nodeName)!==-1){return true;}}
function applyAriaToSiblings(element,value){var attribute='aria-hidden';element=element[0];function walkDOM(element){while(element.parentNode){if(element===document.body){return;}
var children=element.parentNode.children;for(var i=0;i<children.length;i++){if(element!==children[i]&&!isNodeOneOf(children[i],['SCRIPT','STYLE'])){children[i].setAttribute(attribute,value);}}
walkDOM(element=element.parentNode);}}
walkDOM(element);}
function dialogPopIn(container,parentElement,clickElement){var dialogEl=container.find('md-dialog');parentElement.append(container);transformToClickElement(dialogEl,clickElement);$$rAF(function(){dialogEl.addClass('transition-in').css($mdConstant.CSS.TRANSFORM,'');});return $mdUtil.transitionEndPromise(dialogEl);}
function dialogPopOut(container,parentElement,clickElement){var dialogEl=container.find('md-dialog');dialogEl.addClass('transition-out').removeClass('transition-in');transformToClickElement(dialogEl,clickElement);return $mdUtil.transitionEndPromise(dialogEl);}
function transformToClickElement(dialogEl,clickElement){if(clickElement){var clickRect=clickElement[0].getBoundingClientRect();var dialogRect=dialogEl[0].getBoundingClientRect();var scaleX=Math.min(0.5,clickRect.width/dialogRect.width);var scaleY=Math.min(0.5,clickRect.height/dialogRect.height);dialogEl.css($mdConstant.CSS.TRANSFORM,'translate3d('+
(-dialogRect.left+clickRect.left+clickRect.width/2-dialogRect.width/2)+'px,'+
(-dialogRect.top+clickRect.top+clickRect.height/2-dialogRect.height/2)+'px,'+'0) scale('+scaleX+','+scaleY+')');}}
function dialogTransitionEnd(dialogEl){var deferred=$q.defer();dialogEl.on($mdConstant.CSS.TRANSITIONEND,finished);function finished(ev){if(ev.target===dialogEl[0]){dialogEl.off($mdConstant.CSS.TRANSITIONEND,finished);deferred.resolve();}}
return deferred.promise;}}}
MdDialogProvider.$inject=["$$interimElementProvider"];})();(function(){"use strict";angular.module('material.components.divider',['material.core']).directive('mdDivider',MdDividerDirective);function MdDividerDirective($mdTheming){return{restrict:'E',link:$mdTheming};}
MdDividerDirective.$inject=["$mdTheming"];})();(function(){"use strict";angular.module('material.components.gridList',['material.core']).directive('mdGridList',GridListDirective).directive('mdGridTile',GridTileDirective).directive('mdGridTileFooter',GridTileCaptionDirective).directive('mdGridTileHeader',GridTileCaptionDirective).factory('$mdGridLayout',GridLayoutFactory);function GridListDirective($interpolate,$mdConstant,$mdGridLayout,$mdMedia){return{restrict:'E',controller:GridListController,scope:{mdOnLayout:'&'},link:postLink};function postLink(scope,element,attrs,ctrl){element.attr('role','list');ctrl.layoutDelegate=layoutDelegate;var invalidateLayout=angular.bind(ctrl,ctrl.invalidateLayout),unwatchAttrs=watchMedia();scope.$on('$destroy',unwatchMedia);function watchMedia(){for(var mediaName in $mdConstant.MEDIA){$mdMedia(mediaName);$mdMedia.getQuery($mdConstant.MEDIA[mediaName]).addListener(invalidateLayout);}
return $mdMedia.watchResponsiveAttributes(['md-cols','md-row-height'],attrs,layoutIfMediaMatch);}
function unwatchMedia(){ctrl.layoutDelegate=angular.noop;unwatchAttrs();for(var mediaName in $mdConstant.MEDIA){$mdMedia.getQuery($mdConstant.MEDIA[mediaName]).removeListener(invalidateLayout);}}
function layoutIfMediaMatch(mediaName){if(mediaName==null){ctrl.invalidateLayout();}else if($mdMedia(mediaName)){ctrl.invalidateLayout();}}
var lastLayoutProps;function layoutDelegate(tilesInvalidated){var tiles=getTileElements();var props={tileSpans:getTileSpans(tiles),colCount:getColumnCount(),rowMode:getRowMode(),rowHeight:getRowHeight(),gutter:getGutter()};if(!tilesInvalidated&&angular.equals(props,lastLayoutProps)){return;}
var performance=$mdGridLayout(props.colCount,props.tileSpans,tiles).map(function(tilePositions,rowCount){return{grid:{element:element,style:getGridStyle(props.colCount,rowCount,props.gutter,props.rowMode,props.rowHeight)},tiles:tilePositions.map(function(ps,i){return{element:angular.element(tiles[i]),style:getTileStyle(ps.position,ps.spans,props.colCount,props.rowCount,props.gutter,props.rowMode,props.rowHeight)}})}}).reflow().performance();scope.mdOnLayout({$event:{performance:performance}});lastLayoutProps=props;}
var startSymbol=$interpolate.startSymbol();var endSymbol=$interpolate.endSymbol();function expr(exprStr){return startSymbol+exprStr+endSymbol;}
var UNIT=$interpolate(expr('share')+'% - ('+expr('gutter')+' * '+expr('gutterShare')+')');var POSITION=$interpolate('calc(('+expr('unit')+' + '+expr('gutter')+') * '+expr('offset')+')');var DIMENSION=$interpolate('calc(('+expr('unit')+') * '+expr('span')+' + ('+expr('span')+' - 1) * '+expr('gutter')+')');function getTileStyle(position,spans,colCount,rowCount,gutter,rowMode,rowHeight){var hShare=(1/colCount)*100;var hGutterShare=(colCount-1)/colCount;var hUnit=UNIT({share:hShare,gutterShare:hGutterShare,gutter:gutter});var style={left:POSITION({unit:hUnit,offset:position.col,gutter:gutter}),width:DIMENSION({unit:hUnit,span:spans.col,gutter:gutter}),paddingTop:'',marginTop:'',top:'',height:''};switch(rowMode){case'fixed':style.top=POSITION({unit:rowHeight,offset:position.row,gutter:gutter});style.height=DIMENSION({unit:rowHeight,span:spans.row,gutter:gutter});break;case'ratio':var vShare=hShare/rowHeight;var vUnit=UNIT({share:vShare,gutterShare:hGutterShare,gutter:gutter});style.paddingTop=DIMENSION({unit:vUnit,span:spans.row,gutter:gutter});style.marginTop=POSITION({unit:vUnit,offset:position.row,gutter:gutter});break;case'fit':var vGutterShare=(rowCount-1)/rowCount;var vShare=(1/rowCount)*100;var vUnit=UNIT({share:vShare,gutterShare:vGutterShare,gutter:gutter});style.top=POSITION({unit:vUnit,offset:position.row,gutter:gutter});style.height=DIMENSION({unit:vUnit,span:spans.row,gutter:gutter});break;}
return style;}
function getGridStyle(colCount,rowCount,gutter,rowMode,rowHeight){var style={height:'',paddingBottom:''};switch(rowMode){case'fixed':style.height=DIMENSION({unit:rowHeight,span:rowCount,gutter:gutter});break;case'ratio':var hGutterShare=colCount===1?0:(colCount-1)/colCount,hShare=(1/colCount)*100,vShare=hShare*(1/rowHeight),vUnit=UNIT({share:vShare,gutterShare:hGutterShare,gutter:gutter});style.paddingBottom=DIMENSION({unit:vUnit,span:rowCount,gutter:gutter});break;case'fit':break;}
return style;}
function getTileElements(){return[].filter.call(element.children(),function(ele){return ele.tagName=='MD-GRID-TILE';});}
function getTileSpans(tileElements){return[].map.call(tileElements,function(ele){var ctrl=angular.element(ele).controller('mdGridTile');return{row:parseInt($mdMedia.getResponsiveAttribute(ctrl.$attrs,'md-rowspan'),10)||1,col:parseInt($mdMedia.getResponsiveAttribute(ctrl.$attrs,'md-colspan'),10)||1};});}
function getColumnCount(){var colCount=parseInt($mdMedia.getResponsiveAttribute(attrs,'md-cols'),10);if(isNaN(colCount)){throw'md-grid-list: md-cols attribute was not found, or contained a non-numeric value';}
return colCount;}
function getGutter(){return applyDefaultUnit($mdMedia.getResponsiveAttribute(attrs,'md-gutter')||1);}
function getRowHeight(){var rowHeight=$mdMedia.getResponsiveAttribute(attrs,'md-row-height');switch(getRowMode()){case'fixed':return applyDefaultUnit(rowHeight);case'ratio':var whRatio=rowHeight.split(':');return parseFloat(whRatio[0])/parseFloat(whRatio[1]);case'fit':return 0;}}
function getRowMode(){var rowHeight=$mdMedia.getResponsiveAttribute(attrs,'md-row-height');if(rowHeight=='fit'){return'fit';}else if(rowHeight.indexOf(':')!==-1){return'ratio';}else{return'fixed';}}
function applyDefaultUnit(val){return /\D$/.test(val)?val:val+'px';}}}
GridListDirective.$inject=["$interpolate","$mdConstant","$mdGridLayout","$mdMedia"];function GridListController($timeout){this.layoutInvalidated=false;this.tilesInvalidated=false;this.$timeout_=$timeout;this.layoutDelegate=angular.noop;}
GridListController.$inject=["$timeout"];GridListController.prototype={invalidateTiles:function(){this.tilesInvalidated=true;this.invalidateLayout();},invalidateLayout:function(){if(this.layoutInvalidated){return;}
this.layoutInvalidated=true;this.$timeout_(angular.bind(this,this.layout));},layout:function(){try{this.layoutDelegate(this.tilesInvalidated);}finally{this.layoutInvalidated=false;this.tilesInvalidated=false;}}};function GridLayoutFactory($mdUtil){var defaultAnimator=GridTileAnimator;GridLayout.animateWith=function(customAnimator){defaultAnimator=!angular.isFunction(customAnimator)?GridTileAnimator:customAnimator;};return GridLayout;function GridLayout(colCount,tileSpans){var self,layoutInfo,gridStyles,layoutTime,mapTime,reflowTime;layoutTime=$mdUtil.time(function(){layoutInfo=calculateGridFor(colCount,tileSpans);});return self={layoutInfo:function(){return layoutInfo;},map:function(updateFn){mapTime=$mdUtil.time(function(){var info=self.layoutInfo();gridStyles=updateFn(info.positioning,info.rowCount);});return self;},reflow:function(animatorFn){reflowTime=$mdUtil.time(function(){var animator=animatorFn||defaultAnimator;animator(gridStyles.grid,gridStyles.tiles);});return self;},performance:function(){return{tileCount:tileSpans.length,layoutTime:layoutTime,mapTime:mapTime,reflowTime:reflowTime,totalTime:layoutTime+mapTime+reflowTime};}};}
function GridTileAnimator(grid,tiles){grid.element.css(grid.style);tiles.forEach(function(t){t.element.css(t.style);})}
function calculateGridFor(colCount,tileSpans){var curCol=0,curRow=0,spaceTracker=newSpaceTracker();return{positioning:tileSpans.map(function(spans,i){return{spans:spans,position:reserveSpace(spans,i)};}),rowCount:curRow+Math.max.apply(Math,spaceTracker)};function reserveSpace(spans,i){if(spans.col>colCount){throw'md-grid-list: Tile at position '+i+' has a colspan '+'('+spans.col+') that exceeds the column count '+'('+colCount+')';}
var start=0,end=0;while(end-start<spans.col){if(curCol>=colCount){nextRow();continue;}
start=spaceTracker.indexOf(0,curCol);if(start===-1||(end=findEnd(start+1))===-1){start=end=0;nextRow();continue;}
curCol=end+1;}
adjustRow(start,spans.col,spans.row);curCol=start+spans.col;return{col:start,row:curRow};}
function nextRow(){curCol=0;curRow++;adjustRow(0,colCount,-1);}
function adjustRow(from,cols,by){for(var i=from;i<from+cols;i++){spaceTracker[i]=Math.max(spaceTracker[i]+by,0);}}
function findEnd(start){var i;for(i=start;i<spaceTracker.length;i++){if(spaceTracker[i]!==0){return i;}}
if(i===spaceTracker.length){return i;}}
function newSpaceTracker(){var tracker=[];for(var i=0;i<colCount;i++){tracker.push(0);}
return tracker;}}}
GridLayoutFactory.$inject=["$mdUtil"];function GridTileDirective($mdMedia){return{restrict:'E',require:'^mdGridList',template:'<figure ng-transclude></figure>',transclude:true,scope:{},controller:["$attrs",function($attrs){this.$attrs=$attrs;}],link:postLink};function postLink(scope,element,attrs,gridCtrl){element.attr('role','listitem');var unwatchAttrs=$mdMedia.watchResponsiveAttributes(['md-colspan','md-rowspan'],attrs,angular.bind(gridCtrl,gridCtrl.invalidateLayout));gridCtrl.invalidateTiles();scope.$on('$destroy',function(){unwatchAttrs();gridCtrl.invalidateLayout();});if(angular.isDefined(scope.$parent.$index)){scope.$watch(function(){return scope.$parent.$index;},function indexChanged(newIdx,oldIdx){if(newIdx===oldIdx){return;}
gridCtrl.invalidateTiles();});}}}
GridTileDirective.$inject=["$mdMedia"];function GridTileCaptionDirective(){return{template:'<figcaption ng-transclude></figcaption>',transclude:true};}})();(function(){"use strict";angular.module('material.components.icon',['material.core']).directive('mdIcon',mdIconDirective);function mdIconDirective($mdIcon,$mdTheming,$mdAria,$interpolate){return{scope:{fontSet:'@mdFontSet',fontIcon:'@mdFontIcon',svgIcon:'@mdSvgIcon',svgSrc:'@mdSvgSrc'},restrict:'E',transclude:true,template:getTemplate,link:postLink};function getTemplate(element,attr){var isEmptyAttr=function(key){return angular.isDefined(attr[key])?attr[key].length==0:false},hasAttrValue=function(key){return attr[key]&&attr[key].length>0;},attrValue=function(key){return hasAttrValue(key)?attr[key]:''};var tmplFontIcon='<span class="md-font {{classNames}}" ng-class="fontIcon"></span>';var tmplFontSet='<span class="{{classNames}}" ng-transclude></span>';var tmpl=hasAttrValue('mdSvgIcon')?'':hasAttrValue('mdSvgSrc')?'':isEmptyAttr('mdFontIcon')?'':hasAttrValue('mdFontIcon')?tmplFontIcon:tmplFontSet;var names=(tmpl==tmplFontSet)?$mdIcon.fontSet(attrValue('mdFontSet'))+' ':'';names=(names+attrValue('class')).trim();return $interpolate(tmpl)({classNames:names});}
function postLink(scope,element,attr){$mdTheming(element);var label=attr.alt||scope.fontIcon||scope.svgIcon||element.text();var attrName=attr.$normalize(attr.$attr.mdSvgIcon||attr.$attr.mdSvgSrc||'');if(!attr['aria-label']){if(label!=''&&!parentsHaveText()){$mdAria.expect(element,'aria-label',label);$mdAria.expect(element,'role','img');}else if(!element.text()){$mdAria.expect(element,'aria-hidden','true');}}
if(attrName){attr.$observe(attrName,function(attrVal){element.empty();if(attrVal){$mdIcon(attrVal).then(function(svg){element.append(svg);});}});}
function parentsHaveText(){var parent=element.parent();if(parent.attr('aria-label')||parent.text()){return true;}
else if(parent.parent().attr('aria-label')||parent.parent().text()){return true;}
return false;}}}
mdIconDirective.$inject=["$mdIcon","$mdTheming","$mdAria","$interpolate"];})();(function(){"use strict";angular.module('material.components.icon').provider('$mdIcon',MdIconProvider);var config={defaultIconSize:24,defaultFontSet:'material-icons',fontSets:[]};function MdIconProvider(){}
MdIconProvider.prototype={icon:function icon(id,url,iconSize){if(id.indexOf(':')==-1)id='$default:'+id;config[id]=new ConfigurationItem(url,iconSize);return this;},iconSet:function iconSet(id,url,iconSize){config[id]=new ConfigurationItem(url,iconSize);return this;},defaultIconSet:function defaultIconSet(url,iconSize){var setName='$default';if(!config[setName]){config[setName]=new ConfigurationItem(url,iconSize);}
config[setName].iconSize=iconSize||config.defaultIconSize;return this;},fontSet:function fontSet(alias,className){config.fontSets.push({alias:alias,fontSet:className||alias});},defaultFontSet:function defaultFontSet(className){config.defaultFontSet=!className?'':className;return this;},defaultIconSize:function defaultIconSize(iconSize){config.defaultIconSize=iconSize;return this;},preloadIcons:function($templateCache){var iconProvider=this;var svgRegistry=[{id:'md-tabs-arrow',url:'md-tabs-arrow.svg',svg:'<svg version="1.1" x="0px" y="0px" viewBox="0 0 24 24"><g><polygon points="15.4,7.4 14,6 8,12 14,18 15.4,16.6 10.8,12 "/></g></svg>'},{id:'md-close',url:'md-close.svg',svg:'<svg version="1.1" x="0px" y="0px" viewBox="0 0 24 24"><g><path d="M19 6.41l-1.41-1.41-5.59 5.59-5.59-5.59-1.41 1.41 5.59 5.59-5.59 5.59 1.41 1.41 5.59-5.59 5.59 5.59 1.41-1.41-5.59-5.59z"/></g></svg>'},{id:'md-cancel',url:'md-cancel.svg',svg:'<svg version="1.1" x="0px" y="0px" viewBox="0 0 24 24"><g><path d="M12 2c-5.53 0-10 4.47-10 10s4.47 10 10 10 10-4.47 10-10-4.47-10-10-10zm5 13.59l-1.41 1.41-3.59-3.59-3.59 3.59-1.41-1.41 3.59-3.59-3.59-3.59 1.41-1.41 3.59 3.59 3.59-3.59 1.41 1.41-3.59 3.59 3.59 3.59z"/></g></svg>'},{id:'md-menu',url:'md-menu.svg',svg:'<svg version="1.1" x="0px" y="0px" viewBox="0 0 100 100"><path d="M 50 0 L 100 14 L 92 80 L 50 100 L 8 80 L 0 14 Z" fill="#b2b2b2"></path><path d="M 50 5 L 6 18 L 13.5 77 L 50 94 Z" fill="#E42939"></path><path d="M 50 5 L 94 18 L 86.5 77 L 50 94 Z" fill="#B72833"></path><path d="M 50 7 L 83 75 L 72 75 L 65 59 L 50 59 L 50 50 L 61 50 L 50 26 Z" fill="#b2b2b2"></path><path d="M 50 7 L 17 75 L 28 75 L 35 59 L 50 59 L 50 50 L 39 50 L 50 26 Z" fill="#fff"></path></svg>'},{id:'md-toggle-arrow',url:'md-toggle-arrow-svg',svg:'<svg version="1.1" x="0px" y="0px" viewBox="0 0 48 48"><path d="M24 16l-12 12 2.83 2.83 9.17-9.17 9.17 9.17 2.83-2.83z"/><path d="M0 0h48v48h-48z" fill="none"/></svg>'}];svgRegistry.forEach(function(asset){iconProvider.icon(asset.id,asset.url);$templateCache.put(asset.url,asset.svg);});},$get:['$http','$q','$log','$templateCache',function($http,$q,$log,$templateCache){this.preloadIcons($templateCache);return MdIconService(config,$http,$q,$log,$templateCache);}]};function ConfigurationItem(url,iconSize){this.url=url;this.iconSize=iconSize||config.defaultIconSize;}
function MdIconService(config,$http,$q,$log,$templateCache){var iconCache={};var urlRegex=/[-a-zA-Z0-9@:%_\+.~#?&//=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@:%_\+.~#?&//=]*)?/i;Icon.prototype={clone:cloneSVG,prepare:prepareAndStyle};getIcon.fontSet=findRegisteredFontSet;return getIcon;function getIcon(id){id=id||'';if(iconCache[id])return $q.when(iconCache[id].clone());if(urlRegex.test(id))return loadByURL(id).then(cacheIcon(id));if(id.indexOf(':')==-1)id='$default:'+id;return loadByID(id).catch(loadFromIconSet).catch(announceIdNotFound).catch(announceNotFound).then(cacheIcon(id));}
function findRegisteredFontSet(alias){var useDefault=angular.isUndefined(alias)||!(alias&&alias.length);if(useDefault)return config.defaultFontSet;var result=alias;angular.forEach(config.fontSets,function(it){if(it.alias==alias)result=it.fontSet||result;});return result;}
function cacheIcon(id){return function updateCache(icon){iconCache[id]=isIcon(icon)?icon:new Icon(icon,config[id]);return iconCache[id].clone();};}
function loadByID(id){var iconConfig=config[id];return!iconConfig?$q.reject(id):loadByURL(iconConfig.url).then(function(icon){return new Icon(icon,iconConfig);});}
function loadFromIconSet(id){var setName=id.substring(0,id.lastIndexOf(':'))||'$default';var iconSetConfig=config[setName];return!iconSetConfig?$q.reject(id):loadByURL(iconSetConfig.url).then(extractFromSet);function extractFromSet(set){var iconName=id.slice(id.lastIndexOf(':')+1);var icon=set.querySelector('#'+iconName);return!icon?$q.reject(id):new Icon(icon,iconSetConfig);}}
function loadByURL(url){return $http.get(url,{cache:$templateCache}).then(function(response){return angular.element('<div>').append(response.data).find('svg')[0];});}
function announceIdNotFound(id){var msg;if(angular.isString(id)){msg='icon '+id+' not found';$log.warn(msg);}
return $q.reject(msg||id);}
function announceNotFound(err){var msg=angular.isString(err)?err:(err.message||err.data||err.statusText);$log.warn(msg);return $q.reject(msg);}
function isIcon(target){return angular.isDefined(target.element)&&angular.isDefined(target.config);}
function Icon(el,config){if(el.tagName!='svg'){el=angular.element('<svg xmlns="http://www.w3.org/2000/svg">').append(el)[0];}
if(!el.getAttribute('xmlns')){el.setAttribute('xmlns',"http://www.w3.org/2000/svg");}
this.element=el;this.config=config;this.prepare();}
function prepareAndStyle(){var iconSize=this.config?this.config.iconSize:config.defaultIconSize;angular.forEach({'fit':'','height':'100%','width':'100%','preserveAspectRatio':'xMidYMid meet','viewBox':this.element.getAttribute('viewBox')||('0 0 '+iconSize+' '+iconSize)},function(val,attr){this.element.setAttribute(attr,val);},this);angular.forEach({'pointer-events':'none','display':'block'},function(val,style){this.element.style[style]=val;},this);}
function cloneSVG(){return this.element.cloneNode(true);}}})();(function(){"use strict";angular.module('material.components.input',['material.core']).directive('mdInputContainer',mdInputContainerDirective).directive('label',labelDirective).directive('input',inputTextareaDirective).directive('textarea',inputTextareaDirective).directive('mdMaxlength',mdMaxlengthDirective).directive('placeholder',placeholderDirective);function mdInputContainerDirective($mdTheming,$parse){ContainerCtrl.$inject=["$scope","$element","$attrs"];return{restrict:'E',link:postLink,controller:ContainerCtrl};function postLink(scope,element,attr){$mdTheming(element);}
function ContainerCtrl($scope,$element,$attrs){var self=this;self.isErrorGetter=$attrs.mdIsError&&$parse($attrs.mdIsError);self.delegateClick=function(){self.input.focus();};self.element=$element;self.setFocused=function(isFocused){$element.toggleClass('md-input-focused',!!isFocused);};self.setHasValue=function(hasValue){$element.toggleClass('md-input-has-value',!!hasValue);};self.setInvalid=function(isInvalid){$element.toggleClass('md-input-invalid',!!isInvalid);};$scope.$watch(function(){return self.label&&self.input;},function(hasLabelAndInput){if(hasLabelAndInput&&!self.label.attr('for')){self.label.attr('for',self.input.attr('id'));}});}}
mdInputContainerDirective.$inject=["$mdTheming","$parse"];function labelDirective(){return{restrict:'E',require:'^?mdInputContainer',link:function(scope,element,attr,containerCtrl){if(!containerCtrl||attr.mdNoFloat)return;containerCtrl.label=element;scope.$on('$destroy',function(){containerCtrl.label=null;});}};}
function inputTextareaDirective($mdUtil,$window,$mdAria){return{restrict:'E',require:['^?mdInputContainer','?ngModel'],link:postLink};function postLink(scope,element,attr,ctrls){var containerCtrl=ctrls[0];var ngModelCtrl=ctrls[1]||$mdUtil.fakeNgModel();var isReadonly=angular.isDefined(attr.readonly);if(!containerCtrl)return;if(containerCtrl.input){throw new Error("<md-input-container> can only have *one* <input> or <textarea> child element!");}
containerCtrl.input=element;if(!containerCtrl.label){$mdAria.expect(element,'aria-label',element.attr('placeholder'));}
element.addClass('md-input');if(!element.attr('id')){element.attr('id','input_'+$mdUtil.nextUid());}
if(element[0].tagName.toLowerCase()==='textarea'){setupTextarea();}
var isErrorGetter=containerCtrl.isErrorGetter||function(){return ngModelCtrl.$invalid&&ngModelCtrl.$touched;};scope.$watch(isErrorGetter,containerCtrl.setInvalid);ngModelCtrl.$parsers.push(ngModelPipelineCheckValue);ngModelCtrl.$formatters.push(ngModelPipelineCheckValue);element.on('input',inputCheckValue);if(!isReadonly){element.on('focus',function(ev){containerCtrl.setFocused(true);}).on('blur',function(ev){containerCtrl.setFocused(false);inputCheckValue();});}
scope.$on('$destroy',function(){containerCtrl.setFocused(false);containerCtrl.setHasValue(false);containerCtrl.input=null;});function ngModelPipelineCheckValue(arg){containerCtrl.setHasValue(!ngModelCtrl.$isEmpty(arg));return arg;}
function inputCheckValue(){containerCtrl.setHasValue(element.val().length>0||(element[0].validity||{}).badInput);}
function setupTextarea(){var node=element[0];var onChangeTextarea=$mdUtil.debounce(growTextarea,1);function pipelineListener(value){onChangeTextarea();return value;}
if(ngModelCtrl){ngModelCtrl.$formatters.push(pipelineListener);ngModelCtrl.$viewChangeListeners.push(pipelineListener);}else{onChangeTextarea();}
element.on('keydown input',onChangeTextarea);element.on('scroll',onScroll);angular.element($window).on('resize',onChangeTextarea);scope.$on('$destroy',function(){angular.element($window).off('resize',onChangeTextarea);});function growTextarea(){node.style.height="auto";node.scrollTop=0;var height=getHeight();if(height)node.style.height=height+'px';}
function getHeight(){var line=node.scrollHeight-node.offsetHeight;return node.offsetHeight+(line>0?line:0);}
function onScroll(e){node.scrollTop=0;var line=node.scrollHeight-node.offsetHeight;var height=node.offsetHeight+line;node.style.height=height+'px';}}}}
inputTextareaDirective.$inject=["$mdUtil","$window","$mdAria"];function mdMaxlengthDirective($animate){return{restrict:'A',require:['ngModel','^mdInputContainer'],link:postLink};function postLink(scope,element,attr,ctrls){var maxlength;var ngModelCtrl=ctrls[0];var containerCtrl=ctrls[1];var charCountEl=angular.element('<div class="md-char-counter">');attr.$set('ngTrim','false');containerCtrl.element.append(charCountEl);ngModelCtrl.$formatters.push(renderCharCount);ngModelCtrl.$viewChangeListeners.push(renderCharCount);element.on('input keydown',function(){renderCharCount();});scope.$watch(attr.mdMaxlength,function(value){maxlength=value;if(angular.isNumber(value)&&value>0){if(!charCountEl.parent().length){$animate.enter(charCountEl,containerCtrl.element,angular.element(containerCtrl.element[0].lastElementChild));}
renderCharCount();}else{$animate.leave(charCountEl);}});ngModelCtrl.$validators['md-maxlength']=function(modelValue,viewValue){if(!angular.isNumber(maxlength)||maxlength<0){return true;}
return(modelValue||element.val()||viewValue||'').length<=maxlength;};function renderCharCount(value){charCountEl.text((element.val()||value||'').length+'/'+maxlength);return value;}}}
mdMaxlengthDirective.$inject=["$animate"];function placeholderDirective($log){var blackListElements=['MD-SELECT'];return{restrict:'A',require:'^^?mdInputContainer',priority:200,link:postLink};function postLink(scope,element,attr,inputContainer){if(!inputContainer)return;if(blackListElements.indexOf(element[0].nodeName)!=-1)return;if(angular.isDefined(inputContainer.element.attr('md-no-float')))return;var placeholderText=attr.placeholder;element.removeAttr('placeholder');if(inputContainer.element.find('label').length==0){var placeholder='<label ng-click="delegateClick()">'+placeholderText+'</label>';inputContainer.element.addClass('md-icon-float');inputContainer.element.prepend(placeholder);}else{$log.warn("The placeholder='"+placeholderText+"' will be ignored since this md-input-container has a child label element.");}}}
placeholderDirective.$inject=["$log"];})();(function(){"use strict";angular.module('material.components.list',['material.core']).controller('MdListController',MdListController).directive('mdList',mdListDirective).directive('mdListItem',mdListItemDirective);function mdListDirective($mdTheming){return{restrict:'E',compile:function(tEl){tEl[0].setAttribute('role','list');return $mdTheming;}};}
mdListDirective.$inject=["$mdTheming"];function mdListItemDirective($mdAria,$mdConstant,$timeout){var proxiedTypes=['md-checkbox','md-switch'];return{restrict:'E',controller:'MdListController',compile:function(tEl,tAttrs){var secondaryItem=tEl[0].querySelector('.md-secondary');var hasProxiedElement;var proxyElement;tEl[0].setAttribute('role','listitem');if(!tAttrs.ngClick){for(var i=0,type;type=proxiedTypes[i];++i){if(proxyElement=tEl[0].querySelector(type)){hasProxiedElement=true;break;}}
if(hasProxiedElement){wrapIn('div');}else if(!tEl[0].querySelector('md-button')){tEl.addClass('md-no-proxy');}}else{wrapIn('button');}
setupToggleAria();function setupToggleAria(){var toggleTypes=['md-switch','md-checkbox'];var toggle;for(var i=0,toggleType;toggleType=toggleTypes[i];++i){if(toggle=tEl.find(toggleType)[0]){if(!toggle.hasAttribute('aria-label')){var p=tEl.find('p')[0];if(!p)return;toggle.setAttribute('aria-label','Toggle '+p.textContent);}}}}
function wrapIn(type){var container;if(type=='div'){container=angular.element('<div class="md-no-style md-list-item-inner">');container.append(tEl.contents());tEl.addClass('md-proxy-focus');}else{container=angular.element('<md-button class="md-no-style"><div class="md-list-item-inner"></div></md-button>');var copiedAttrs=['ng-click','aria-label','ng-disabled'];angular.forEach(copiedAttrs,function(attr){if(tEl[0].hasAttribute(attr)){container[0].setAttribute(attr,tEl[0].getAttribute(attr));tEl[0].removeAttribute(attr);}});container.children().eq(0).append(tEl.contents());}
tEl[0].setAttribute('tabindex','-1');tEl.append(container);if(secondaryItem&&secondaryItem.hasAttribute('ng-click')){$mdAria.expect(secondaryItem,'aria-label');var buttonWrapper=angular.element('<md-button class="md-secondary-container md-icon-button">');buttonWrapper.attr('ng-click',secondaryItem.getAttribute('ng-click'));secondaryItem.removeAttribute('ng-click');secondaryItem.setAttribute('tabindex','-1');secondaryItem.classList.remove('md-secondary');buttonWrapper.append(secondaryItem);secondaryItem=buttonWrapper[0];}
if(secondaryItem&&(secondaryItem.hasAttribute('ng-click')||(tAttrs.ngClick&&isProxiedElement(secondaryItem)))){tEl.addClass('md-with-secondary');tEl.append(secondaryItem);}}
function isProxiedElement(el){return proxiedTypes.indexOf(el.nodeName.toLowerCase())!=-1;}
return postLink;function postLink($scope,$element,$attr,ctrl){var proxies=[],firstChild=$element[0].firstElementChild,hasClick=firstChild&&firstChild.hasAttribute('ng-click');computeProxies();computeClickable();if($element.hasClass('md-proxy-focus')&&proxies.length){angular.forEach(proxies,function(proxy){proxy=angular.element(proxy);$scope.mouseActive=false;proxy.on('mousedown',function(){$scope.mouseActive=true;$timeout(function(){$scope.mouseActive=false;},100);}).on('focus',function(){if($scope.mouseActive===false){$element.addClass('md-focused');}
proxy.on('blur',function proxyOnBlur(){$element.removeClass('md-focused');proxy.off('blur',proxyOnBlur);});});});}
function computeProxies(){var children=$element.children();if(children.length&&!children[0].hasAttribute('ng-click')){angular.forEach(proxiedTypes,function(type){angular.forEach(firstChild.querySelectorAll(type),function(child){proxies.push(child);});});}}
function computeClickable(){if(proxies.length||hasClick){$element.addClass('md-clickable');ctrl.attachRipple($scope,angular.element($element[0].querySelector('.md-no-style')));}}
if(!hasClick&&!proxies.length){firstChild&&firstChild.addEventListener('keypress',function(e){if(e.target.nodeName!='INPUT'&&e.target.nodeName!='TEXTAREA'){var keyCode=e.which||e.keyCode;if(keyCode==$mdConstant.KEY_CODE.SPACE){if(firstChild){firstChild.click();e.preventDefault();e.stopPropagation();}}}});}
$element.off('click');$element.off('keypress');if(proxies.length&&firstChild){$element.children().eq(0).on('click',function(e){if(firstChild.contains(e.target)){angular.forEach(proxies,function(proxy){if(e.target!==proxy&&!proxy.contains(e.target)){angular.element(proxy).triggerHandler('click');}});}});}}}};}
mdListItemDirective.$inject=["$mdAria","$mdConstant","$timeout"];function MdListController($scope,$element,$mdListInkRipple){var ctrl=this;ctrl.attachRipple=attachRipple;function attachRipple(scope,element){var options={};$mdListInkRipple.attach(scope,element,options);}}
MdListController.$inject=["$scope","$element","$mdListInkRipple"];})();(function(){"use strict";angular.module('material.components.progressCircular',['material.core']).directive('mdProgressCircular',MdProgressCircularDirective);function MdProgressCircularDirective($mdConstant,$mdTheming){return{restrict:'E',template:'<div class="md-spinner-wrapper">'+'<div class="md-inner">'+'<div class="md-gap"></div>'+'<div class="md-left">'+'<div class="md-half-circle"></div>'+'</div>'+'<div class="md-right">'+'<div class="md-half-circle"></div>'+'</div>'+'</div>'+'</div>',compile:compile};function compile(tElement){tElement.attr('aria-valuemin',0);tElement.attr('aria-valuemax',100);tElement.attr('role','progressbar');return postLink;}
function postLink(scope,element,attr){$mdTheming(element);var circle=element[0];var diameter=attr.mdDiameter||48;var scale=diameter/48;circle.style[$mdConstant.CSS.TRANSFORM]='scale('+scale+')';attr.$observe('value',function(value){var percentValue=clamp(value);element.attr('aria-valuenow',percentValue);});}
function clamp(value){return Math.max(0,Math.min(value||0,100));}}
MdProgressCircularDirective.$inject=["$mdConstant","$mdTheming"];})();(function(){"use strict";angular.module('material.components.progressLinear',['material.core']).directive('mdProgressLinear',MdProgressLinearDirective);function MdProgressLinearDirective($$rAF,$mdConstant,$mdTheming){return{restrict:'E',template:'<div class="md-container">'+'<div class="md-dashed"></div>'+'<div class="md-bar md-bar1"></div>'+'<div class="md-bar md-bar2"></div>'+'</div>',compile:compile};function compile(tElement,tAttrs,transclude){tElement.attr('aria-valuemin',0);tElement.attr('aria-valuemax',100);tElement.attr('role','progressbar');return postLink;}
function postLink(scope,element,attr){$mdTheming(element);var bar1Style=element[0].querySelector('.md-bar1').style,bar2Style=element[0].querySelector('.md-bar2').style,container=angular.element(element[0].querySelector('.md-container'));attr.$observe('value',function(value){if(attr.mdMode=='query'){return;}
var clamped=clamp(value);element.attr('aria-valuenow',clamped);bar2Style[$mdConstant.CSS.TRANSFORM]=transforms[clamped];});attr.$observe('mdBufferValue',function(value){bar1Style[$mdConstant.CSS.TRANSFORM]=transforms[clamp(value)];});$$rAF(function(){container.addClass('md-ready');});}
function clamp(value){if(value>100){return 100;}
if(value<0){return 0;}
return Math.ceil(value||0);}}
MdProgressLinearDirective.$inject=["$$rAF","$mdConstant","$mdTheming"];var transforms=(function(){var values=new Array(101);for(var i=0;i<101;i++){values[i]=makeTransform(i);}
return values;function makeTransform(value){var scale=value/100;var translateX=(value-100)/2;return'translateX('+translateX.toString()+'%) scale('+scale.toString()+', 1)';}})();})();(function(){"use strict";angular.module('material.components.radioButton',['material.core']).directive('mdRadioGroup',mdRadioGroupDirective).directive('mdRadioButton',mdRadioButtonDirective);function mdRadioGroupDirective($mdUtil,$mdConstant,$mdTheming,$timeout){RadioGroupController.prototype=createRadioGroupControllerProto();return{restrict:'E',controller:['$element',RadioGroupController],require:['mdRadioGroup','?ngModel'],link:{pre:linkRadioGroup}};function linkRadioGroup(scope,element,attr,ctrls){$mdTheming(element);var rgCtrl=ctrls[0];var ngModelCtrl=ctrls[1]||$mdUtil.fakeNgModel();function setFocus(){if(!element.hasClass('md-focused')){element.addClass('md-focused');}}
function keydownListener(ev){var keyCode=ev.which||ev.keyCode;switch(keyCode){case $mdConstant.KEY_CODE.LEFT_ARROW:case $mdConstant.KEY_CODE.UP_ARROW:ev.preventDefault();rgCtrl.selectPrevious();setFocus();break;case $mdConstant.KEY_CODE.RIGHT_ARROW:case $mdConstant.KEY_CODE.DOWN_ARROW:ev.preventDefault();rgCtrl.selectNext();setFocus();break;case $mdConstant.KEY_CODE.ENTER:var form=angular.element($mdUtil.getClosest(element[0],'form'));if(form.length>0){form.triggerHandler('submit');}
break;}}
rgCtrl.init(ngModelCtrl);scope.mouseActive=false;element.attr({'role':'radiogroup','tabIndex':element.attr('tabindex')||'0'}).on('keydown',keydownListener).on('mousedown',function(event){scope.mouseActive=true;$timeout(function(){scope.mouseActive=false;},100);}).on('focus',function(){if(scope.mouseActive===false){rgCtrl.$element.addClass('md-focused');}}).on('blur',function(){rgCtrl.$element.removeClass('md-focused');});}
function RadioGroupController($element){this._radioButtonRenderFns=[];this.$element=$element;}
function createRadioGroupControllerProto(){return{init:function(ngModelCtrl){this._ngModelCtrl=ngModelCtrl;this._ngModelCtrl.$render=angular.bind(this,this.render);},add:function(rbRender){this._radioButtonRenderFns.push(rbRender);},remove:function(rbRender){var index=this._radioButtonRenderFns.indexOf(rbRender);if(index!==-1){this._radioButtonRenderFns.splice(index,1);}},render:function(){this._radioButtonRenderFns.forEach(function(rbRender){rbRender();});},setViewValue:function(value,eventType){this._ngModelCtrl.$setViewValue(value,eventType);this.render();},getViewValue:function(){return this._ngModelCtrl.$viewValue;},selectNext:function(){return changeSelectedButton(this.$element,1);},selectPrevious:function(){return changeSelectedButton(this.$element,-1);},setActiveDescendant:function(radioId){this.$element.attr('aria-activedescendant',radioId);}};}
function changeSelectedButton(parent,increment){var buttons=$mdUtil.iterator(parent[0].querySelectorAll('md-radio-button'),true);if(buttons.count()){var validate=function(button){return!angular.element(button).attr("disabled");};var selected=parent[0].querySelector('md-radio-button.md-checked');var target=buttons[increment<0?'previous':'next'](selected,validate)||buttons.first();angular.element(target).triggerHandler('click');}}}
mdRadioGroupDirective.$inject=["$mdUtil","$mdConstant","$mdTheming","$timeout"];function mdRadioButtonDirective($mdAria,$mdUtil,$mdTheming){var CHECKED_CSS='md-checked';return{restrict:'E',require:'^mdRadioGroup',transclude:true,template:'<div class="md-container" md-ink-ripple md-ink-ripple-checkbox>'+'<div class="md-off"></div>'+'<div class="md-on"></div>'+'</div>'+'<div ng-transclude class="md-label"></div>',link:link};function link(scope,element,attr,rgCtrl){var lastChecked;$mdTheming(element);configureAria(element,scope);rgCtrl.add(render);attr.$observe('value',render);element.on('click',listener).on('$destroy',function(){rgCtrl.remove(render);});function listener(ev){if(element[0].hasAttribute('disabled'))return;scope.$apply(function(){rgCtrl.setViewValue(attr.value,ev&&ev.type);});}
function render(){var checked=(rgCtrl.getViewValue()==attr.value);if(checked===lastChecked){return;}
lastChecked=checked;element.attr('aria-checked',checked);if(checked){element.addClass(CHECKED_CSS);rgCtrl.setActiveDescendant(element.attr('id'));}else{element.removeClass(CHECKED_CSS);}}
function configureAria(element,scope){scope.ariaId=buildAriaID();element.attr({'id':scope.ariaId,'role':'radio','aria-checked':'false'});$mdAria.expectWithText(element,'aria-label');function buildAriaID(){return attr.id||('radio'+"_"+$mdUtil.nextUid());}}}}
mdRadioButtonDirective.$inject=["$mdAria","$mdUtil","$mdTheming"];})();(function(){"use strict";var SELECT_EDGE_MARGIN=8;var selectNextId=0;angular.module('material.components.select',['material.core','material.components.backdrop']).directive('mdSelect',SelectDirective).directive('mdSelectMenu',SelectMenuDirective).directive('mdOption',OptionDirective).directive('mdOptgroup',OptgroupDirective).provider('$mdSelect',SelectProvider);function SelectDirective($mdSelect,$mdUtil,$mdTheming,$mdAria,$interpolate,$compile,$parse){return{restrict:'E',require:['mdSelect','ngModel','?^form'],compile:compile,controller:function(){}};function compile(element,attr){var labelEl=element.find('md-select-label').remove();if(!labelEl.length){labelEl=angular.element('<md-select-label><span></span></md-select-label>');}else{if(!labelEl[0].firstElementChild){var spanWrapper=angular.element('<span>');spanWrapper.append(labelEl.contents());labelEl.append(spanWrapper);}}
labelEl.append('<span class="md-select-icon" aria-hidden="true"></span>');labelEl.addClass('md-select-label');if(!labelEl[0].hasAttribute('id')){labelEl.attr('id','select_label_'+$mdUtil.nextUid());}
if(!element.find('md-content').length){element.append(angular.element('<md-content>').append(element.contents()));}
if(attr.mdOnOpen){element.find('md-content').prepend(angular.element('<md-progress-circular>').attr('md-mode','indeterminate').attr('ng-hide','$$loadingAsyncDone').wrap('<div>').parent());}
if(attr.name){var autofillClone=angular.element('<select class="md-visually-hidden">');autofillClone.attr({'name':'.'+attr.name,'ng-model':attr.ngModel,'aria-hidden':'true','tabindex':'-1'});var opts=element.find('md-option');angular.forEach(opts,function(el){var newEl=angular.element('<option>'+el.innerHTML+'</option>');if(el.hasAttribute('ng-value'))newEl.attr('ng-value',el.getAttribute('ng-value'));else if(el.hasAttribute('value'))newEl.attr('value',el.getAttribute('value'));autofillClone.append(newEl);});element.parent().append(autofillClone);}
var selectTemplate='<div class="md-select-menu-container">'+'<md-select-menu '+
(angular.isDefined(attr.multiple)?'multiple':'')+'>'+
element.html()+'</md-select-menu></div>';element.empty().append(labelEl);attr.tabindex=attr.tabindex||'0';return function postLink(scope,element,attr,ctrls){var isOpen;var isDisabled;var mdSelectCtrl=ctrls[0];var ngModel=ctrls[1];var formCtrl=ctrls[2];var labelEl=element.find('md-select-label');var customLabel=labelEl.text().length!==0;var selectContainer,selectScope,selectMenuCtrl;createSelect();$mdTheming(element);if(attr.name&&formCtrl){var selectEl=element.parent()[0].querySelector('select[name=".'+attr.name+'"]')
formCtrl.$removeControl(angular.element(selectEl).controller());}
var originalRender=ngModel.$render;ngModel.$render=function(){originalRender();syncLabelText();};mdSelectCtrl.setLabelText=function(text){if(customLabel)return;mdSelectCtrl.setIsPlaceholder(!text);text=text||attr.placeholder||'';var target=customLabel?labelEl:labelEl.children().eq(0);target.text(text);};mdSelectCtrl.setIsPlaceholder=function(val){val?labelEl.addClass('md-placeholder'):labelEl.removeClass('md-placeholder');};scope.$$postDigest(function(){setAriaLabel();syncLabelText();});function setAriaLabel(){var labelText=element.attr('placeholder');if(!labelText){labelText=element.find('md-select-label').text();}
$mdAria.expect(element,'aria-label',labelText);}
function syncLabelText(){if(selectContainer){selectMenuCtrl=selectMenuCtrl||selectContainer.find('md-select-menu').controller('mdSelectMenu');mdSelectCtrl.setLabelText(selectMenuCtrl.selectedLabels());}}
var deregisterWatcher;attr.$observe('ngMultiple',function(val){if(deregisterWatcher)deregisterWatcher();var parser=$parse(val);deregisterWatcher=scope.$watch(function(){return parser(scope);},function(multiple,prevVal){if(multiple===undefined&&prevVal===undefined)return;if(multiple){element.attr('multiple','multiple');}else{element.removeAttr('multiple');}
if(selectContainer){selectMenuCtrl.setMultiple(multiple);originalRender=ngModel.$render;ngModel.$render=function(){originalRender();syncLabelText();};selectMenuCtrl.refreshViewValue();ngModel.$render();}});});attr.$observe('disabled',function(disabled){if(typeof disabled=="string"){disabled=true;}
if(isDisabled!==undefined&&isDisabled===disabled){return;}
isDisabled=disabled;if(disabled){element.attr({'tabindex':-1,'aria-disabled':'true'});element.off('click',openSelect);element.off('keydown',handleKeypress);}else{element.attr({'tabindex':attr.tabindex,'aria-disabled':'false'});element.on('click',openSelect);element.on('keydown',handleKeypress);}});if(!attr.disabled&&!attr.ngDisabled){element.attr({'tabindex':attr.tabindex,'aria-disabled':'false'});element.on('click',openSelect);element.on('keydown',handleKeypress);}
var ariaAttrs={role:'combobox','aria-expanded':'false'};if(!element[0].hasAttribute('id')){ariaAttrs.id='select_'+$mdUtil.nextUid();}
element.attr(ariaAttrs);scope.$on('$destroy',function(){if(isOpen){$mdSelect.cancel().then(function(){selectContainer.remove();});}else{selectContainer.remove();}});function createSelect(){selectContainer=angular.element(selectTemplate);var selectEl=selectContainer.find('md-select-menu');selectEl.data('$ngModelController',ngModel);selectEl.data('$mdSelectController',mdSelectCtrl);selectScope=scope.$new();selectContainer=$compile(selectContainer)(selectScope);selectMenuCtrl=selectContainer.find('md-select-menu').controller('mdSelectMenu');}
function handleKeypress(e){var allowedCodes=[32,13,38,40];if(allowedCodes.indexOf(e.keyCode)!=-1){e.preventDefault();openSelect(e);}else{if(e.keyCode<=90&&e.keyCode>=31){e.preventDefault();var node=selectMenuCtrl.optNodeForKeyboardSearch(e);if(!node)return;var optionCtrl=angular.element(node).controller('mdOption');if(!selectMenuCtrl.isMultiple){selectMenuCtrl.deselect(Object.keys(selectMenuCtrl.selected)[0]);}
selectMenuCtrl.select(optionCtrl.hashKey,optionCtrl.value);selectMenuCtrl.refreshViewValue();ngModel.$render();}}}
function openSelect(){scope.$evalAsync(function(){isOpen=true;$mdSelect.show({scope:selectScope,preserveScope:true,skipCompile:true,element:selectContainer,target:element[0],hasBackdrop:true,loadingAsync:attr.mdOnOpen?scope.$eval(attr.mdOnOpen)||true:false,}).then(function(selectedText){isOpen=false;});});}};}}
SelectDirective.$inject=["$mdSelect","$mdUtil","$mdTheming","$mdAria","$interpolate","$compile","$parse"];function SelectMenuDirective($parse,$mdUtil,$mdTheming){SelectMenuController.$inject=["$scope","$attrs","$element"];return{restrict:'E',require:['mdSelectMenu','?ngModel'],controller:SelectMenuController,link:{pre:preLink}};function preLink(scope,element,attr,ctrls){var selectCtrl=ctrls[0];var ngModel=ctrls[1];$mdTheming(element);element.on('click',clickListener);element.on('keypress',keyListener);if(ngModel)selectCtrl.init(ngModel);configureAria();function configureAria(){element.attr({'id':'select_menu_'+$mdUtil.nextUid(),'role':'listbox','aria-multiselectable':(selectCtrl.isMultiple?'true':'false')});}
function keyListener(e){if(e.keyCode==13||e.keyCode==32){clickListener(e);}}
function clickListener(ev){var option=$mdUtil.getClosest(ev.target,'md-option');var optionCtrl=option&&angular.element(option).data('$mdOptionController');if(!option||!optionCtrl)return;var optionHashKey=selectCtrl.hashGetter(optionCtrl.value);var isSelected=angular.isDefined(selectCtrl.selected[optionHashKey]);scope.$apply(function(){if(selectCtrl.isMultiple){if(isSelected){selectCtrl.deselect(optionHashKey);}else{selectCtrl.select(optionHashKey,optionCtrl.value);}}else{if(!isSelected){selectCtrl.deselect(Object.keys(selectCtrl.selected)[0]);selectCtrl.select(optionHashKey,optionCtrl.value);}}
selectCtrl.refreshViewValue();});}}
function SelectMenuController($scope,$attrs,$element){var self=this;self.isMultiple=angular.isDefined($attrs.multiple);self.selected={};self.options={};$scope.$watch(function(){return self.options;},function(){self.ngModel.$render();},true);var deregisterCollectionWatch;self.setMultiple=function(isMultiple){var ngModel=self.ngModel;self.isMultiple=isMultiple;if(deregisterCollectionWatch)deregisterCollectionWatch();if(self.isMultiple){ngModel.$validators['md-multiple']=validateArray;ngModel.$render=renderMultiple;$scope.$watchCollection($attrs.ngModel,function(value){if(validateArray(value))renderMultiple(value);});}else{delete ngModel.$validators['md-multiple'];ngModel.$render=renderSingular;}
function validateArray(modelValue,viewValue){return angular.isArray(modelValue||viewValue||[]);}};var searchStr='';var clearSearchTimeout,optNodes,optText;var CLEAR_SEARCH_AFTER=300;self.optNodeForKeyboardSearch=function(e){clearSearchTimeout&&clearTimeout(clearSearchTimeout);clearSearchTimeout=setTimeout(function(){clearSearchTimeout=undefined;searchStr='';optText=undefined;optNodes=undefined;},CLEAR_SEARCH_AFTER);searchStr+=String.fromCharCode(e.keyCode);var search=new RegExp('^'+searchStr,'i');if(!optNodes){optNodes=$element.find('md-option');optText=new Array(optNodes.length);angular.forEach(optNodes,function(el,i){optText[i]=el.textContent.trim();});}
for(var i=0;i<optText.length;++i){if(search.test(optText[i])){return optNodes[i];}}};self.init=function(ngModel){self.ngModel=ngModel;if(ngModel.$options&&ngModel.$options.trackBy){var trackByLocals={};var trackByParsed=$parse(ngModel.$options.trackBy);self.hashGetter=function(value,valueScope){trackByLocals.$value=value;return trackByParsed(valueScope||$scope,trackByLocals);};}else{self.hashGetter=function getHashValue(value){if(angular.isObject(value)){return'object_'+(value.$$mdSelectId||(value.$$mdSelectId=++selectNextId));}
return value;};}
self.setMultiple(self.isMultiple);};self.selectedLabels=function(){var selectedOptionEls=nodesToArray($element[0].querySelectorAll('md-option[selected]'));if(selectedOptionEls.length){return selectedOptionEls.map(function(el){return el.textContent;}).join(', ');}else{return'';}};self.select=function(hashKey,hashedValue){var option=self.options[hashKey];option&&option.setSelected(true);self.selected[hashKey]=hashedValue;};self.deselect=function(hashKey){var option=self.options[hashKey];option&&option.setSelected(false);delete self.selected[hashKey];};self.addOption=function(hashKey,optionCtrl){if(angular.isDefined(self.options[hashKey])){throw new Error('Duplicate md-option values are not allowed in a select. '+'Duplicate value "'+optionCtrl.value+'" found.');}
self.options[hashKey]=optionCtrl;if(angular.isDefined(self.selected[hashKey])){self.select(hashKey,optionCtrl.value);self.refreshViewValue();}};self.removeOption=function(hashKey){delete self.options[hashKey];};self.refreshViewValue=function(){var values=[];var option;for(var hashKey in self.selected){if((option=self.options[hashKey])){values.push(option.value);}else{values.push(self.selected[hashKey]);}}
self.ngModel.$setViewValue(self.isMultiple?values:values[0]);};function renderMultiple(){var newSelectedValues=self.ngModel.$modelValue||self.ngModel.$viewValue;if(!angular.isArray(newSelectedValues))return;var oldSelected=Object.keys(self.selected);var newSelectedHashes=newSelectedValues.map(self.hashGetter);var deselected=oldSelected.filter(function(hash){return newSelectedHashes.indexOf(hash)===-1;});deselected.forEach(self.deselect);newSelectedHashes.forEach(function(hashKey,i){self.select(hashKey,newSelectedValues[i]);});}
function renderSingular(){var value=self.ngModel.$viewValue||self.ngModel.$modelValue;Object.keys(self.selected).forEach(self.deselect);self.select(self.hashGetter(value),value);}}}
SelectMenuDirective.$inject=["$parse","$mdUtil","$mdTheming"];function OptionDirective($mdButtonInkRipple,$mdUtil){OptionController.$inject=["$element"];return{restrict:'E',require:['mdOption','^^mdSelectMenu'],controller:OptionController,compile:compile};function compile(element,attr){element.append(angular.element('<div class="md-text">').append(element.contents()));element.attr('tabindex',attr.tabindex||'0');return postLink;}
function postLink(scope,element,attr,ctrls){var optionCtrl=ctrls[0];var selectCtrl=ctrls[1];if(angular.isDefined(attr.ngValue)){scope.$watch(attr.ngValue,setOptionValue);}else if(angular.isDefined(attr.value)){setOptionValue(attr.value);}else{scope.$watch(function(){return element.text();},setOptionValue);}
scope.$$postDigest(function(){attr.$observe('selected',function(selected){if(!angular.isDefined(selected))return;if(selected){if(!selectCtrl.isMultiple){selectCtrl.deselect(Object.keys(selectCtrl.selected)[0]);}
selectCtrl.select(optionCtrl.hashKey,optionCtrl.value);}else{selectCtrl.deselect(optionCtrl.hashKey);}
selectCtrl.refreshViewValue();selectCtrl.ngModel.$render();});});$mdButtonInkRipple.attach(scope,element);configureAria();function setOptionValue(newValue,oldValue){var oldHashKey=selectCtrl.hashGetter(oldValue,scope);var newHashKey=selectCtrl.hashGetter(newValue,scope);optionCtrl.hashKey=newHashKey;optionCtrl.value=newValue;selectCtrl.removeOption(oldHashKey,optionCtrl);selectCtrl.addOption(newHashKey,optionCtrl);}
scope.$on('$destroy',function(){selectCtrl.removeOption(optionCtrl.hashKey,optionCtrl);});function configureAria(){var ariaAttrs={'role':'option','aria-selected':'false'};if(!element[0].hasAttribute('id')){ariaAttrs.id='select_option_'+$mdUtil.nextUid();}
element.attr(ariaAttrs);}}
function OptionController($element){this.selected=false;this.setSelected=function(isSelected){if(isSelected&&!this.selected){$element.attr({'selected':'selected','aria-selected':'true'});}else if(!isSelected&&this.selected){$element.removeAttr('selected');$element.attr('aria-selected','false');}
this.selected=isSelected;};}}
OptionDirective.$inject=["$mdButtonInkRipple","$mdUtil"];function OptgroupDirective(){return{restrict:'E',compile:compile};function compile(el,attrs){var labelElement=el.find('label');if(!labelElement.length){labelElement=angular.element('<label>');el.prepend(labelElement);}
if(attrs.label)labelElement.text(attrs.label);}}
function SelectProvider($$interimElementProvider){selectDefaultOptions.$inject=["$mdSelect","$mdConstant","$$rAF","$mdUtil","$mdTheming","$timeout","$window"];return $$interimElementProvider('$mdSelect').setDefaults({methods:['target'],options:selectDefaultOptions});function selectDefaultOptions($mdSelect,$mdConstant,$$rAF,$mdUtil,$mdTheming,$timeout,$window){return{parent:'body',onShow:onShow,onRemove:onRemove,hasBackdrop:true,disableParentScroll:true,themable:true};function onShow(scope,element,opts){if(!opts.target){throw new Error('$mdSelect.show() expected a target element in options.target but got '+'"'+opts.target+'"!');}
angular.extend(opts,{isRemoved:false,target:angular.element(opts.target),parent:angular.element(opts.parent),selectEl:element.find('md-select-menu'),contentEl:element.find('md-content'),backdrop:opts.hasBackdrop&&angular.element('<md-backdrop class="md-select-backdrop md-click-catcher">')});opts.resizeFn=function(){$$rAF(function(){$$rAF(function(){animateSelect(scope,element,opts);});});};angular.element($window).on('resize',opts.resizeFn);angular.element($window).on('orientationchange',opts.resizeFn);configureAria();element.removeClass('md-leave');var optionNodes=opts.selectEl[0].getElementsByTagName('md-option');if(opts.loadingAsync&&opts.loadingAsync.then){opts.loadingAsync.then(function(){scope.$$loadingAsyncDone=true;$$rAF(function(){$$rAF(function(){if(opts.isRemoved)return;animateSelect(scope,element,opts);});});});}else if(opts.loadingAsync){scope.$$loadingAsyncDone=true;}
if(opts.disableParentScroll&&!$mdUtil.getClosest(opts.target,'MD-DIALOG')){opts.restoreScroll=$mdUtil.disableScrollAround(opts.target);}else{opts.disableParentScroll=false;}
$timeout(activateInteraction,75,false);if(opts.backdrop){$mdTheming.inherit(opts.backdrop,opts.parent);opts.parent.append(opts.backdrop);}
opts.parent.append(element);$$rAF(function(){$$rAF(function(){if(opts.isRemoved)return;animateSelect(scope,element,opts);});});return $mdUtil.transitionEndPromise(opts.selectEl,{timeout:350});function configureAria(){opts.target.attr('aria-expanded','true');}
function activateInteraction(){if(opts.isRemoved)return;var selectCtrl=opts.selectEl.controller('mdSelectMenu')||{};element.addClass('md-clickable');opts.backdrop&&opts.backdrop.on('click',function(e){e.preventDefault();e.stopPropagation();opts.restoreFocus=false;scope.$apply($mdSelect.cancel);});opts.selectEl.on('keydown',function(ev){switch(ev.keyCode){case $mdConstant.KEY_CODE.SPACE:case $mdConstant.KEY_CODE.ENTER:var option=$mdUtil.getClosest(ev.target,'md-option');if(option){opts.selectEl.triggerHandler({type:'click',target:option});ev.preventDefault();}
break;case $mdConstant.KEY_CODE.TAB:case $mdConstant.KEY_CODE.ESCAPE:ev.preventDefault();opts.restoreFocus=true;scope.$apply($mdSelect.cancel);}});opts.selectEl.on('keydown',function(ev){switch(ev.keyCode){case $mdConstant.KEY_CODE.UP_ARROW:return focusPrevOption();case $mdConstant.KEY_CODE.DOWN_ARROW:return focusNextOption();default:if(ev.keyCode>=31&&ev.keyCode<=90){var optNode=opts.selectEl.controller('mdSelectMenu').optNodeForKeyboardSearch(ev);optNode&&optNode.focus();}}});function focusOption(direction){var optionsArray=nodesToArray(optionNodes);var index=optionsArray.indexOf(opts.focusedNode);if(index===-1){index=0;}else if(direction==='next'&&index<optionsArray.length-1){index++;}else if(direction==='prev'&&index>0){index--;}
var newOption=opts.focusedNode=optionsArray[index];newOption&&newOption.focus();}
function focusNextOption(){focusOption('next');}
function focusPrevOption(){focusOption('prev');}
opts.selectEl.on('click',checkCloseMenu);opts.selectEl.on('keydown',function(e){if(e.keyCode==32||e.keyCode==13){checkCloseMenu();}});function checkCloseMenu(){if(!selectCtrl.isMultiple){opts.restoreFocus=true;scope.$evalAsync(function(){$mdSelect.hide(selectCtrl.ngModel.$viewValue);});}}}}
function onRemove(scope,element,opts){opts.isRemoved=true;element.addClass('md-leave').removeClass('md-clickable');opts.target.attr('aria-expanded','false');angular.element($window).off('resize',opts.resizeFn);angular.element($window).off('orientationchange',opts.resizefn);opts.resizeFn=undefined;var mdSelect=opts.selectEl.controller('mdSelect');if(mdSelect){mdSelect.setLabelText(opts.selectEl.controller('mdSelectMenu').selectedLabels());}
return $mdUtil.transitionEndPromise(element,{timeout:350}).then(function(){element.removeClass('md-active');opts.backdrop&&opts.backdrop.remove();if(element[0].parentNode===opts.parent[0]){opts.parent[0].removeChild(element[0]);}
if(opts.disableParentScroll){opts.restoreScroll();}
if(opts.restoreFocus)opts.target.focus();});}
function animateSelect(scope,element,opts){var containerNode=element[0],targetNode=opts.target[0].firstElementChild.firstElementChild,parentNode=opts.parent[0],selectNode=opts.selectEl[0],contentNode=opts.contentEl[0],parentRect=parentNode.getBoundingClientRect(),targetRect=targetNode.getBoundingClientRect(),shouldOpenAroundTarget=false,bounds={left:parentRect.left+SELECT_EDGE_MARGIN,top:SELECT_EDGE_MARGIN,bottom:parentRect.height-SELECT_EDGE_MARGIN,right:parentRect.width-SELECT_EDGE_MARGIN-($mdUtil.floatingScrollbars()?16:0)},spaceAvailable={top:targetRect.top-bounds.top,left:targetRect.left-bounds.left,right:bounds.right-(targetRect.left+targetRect.width),bottom:bounds.bottom-(targetRect.top+targetRect.height)},maxWidth=parentRect.width-SELECT_EDGE_MARGIN*2,isScrollable=contentNode.scrollHeight>contentNode.offsetHeight,selectedNode=selectNode.querySelector('md-option[selected]'),optionNodes=selectNode.getElementsByTagName('md-option'),optgroupNodes=selectNode.getElementsByTagName('md-optgroup');var centeredNode;if(selectedNode){centeredNode=selectedNode;}else if(optgroupNodes.length){centeredNode=optgroupNodes[0];}else if(optionNodes.length){centeredNode=optionNodes[0];}else{centeredNode=contentNode.firstElementChild||contentNode;}
if(contentNode.offsetWidth>maxWidth){contentNode.style['max-width']=maxWidth+'px';}
if(shouldOpenAroundTarget){contentNode.style['min-width']=targetRect.width+'px';}
if(isScrollable){selectNode.classList.add('md-overflow');}
var selectMenuRect=selectNode.getBoundingClientRect();var centeredRect=getOffsetRect(centeredNode);if(centeredNode){var centeredStyle=$window.getComputedStyle(centeredNode);centeredRect.paddingLeft=parseInt(centeredStyle.paddingLeft,10)||0;centeredRect.paddingRight=parseInt(centeredStyle.paddingRight,10)||0;}
var focusedNode=centeredNode;if((focusedNode.tagName||'').toUpperCase()==='MD-OPTGROUP'){focusedNode=optionNodes[0]||contentNode.firstElementChild||contentNode;}
if(isScrollable){var scrollBuffer=contentNode.offsetHeight/2;contentNode.scrollTop=centeredRect.top+centeredRect.height/2-scrollBuffer;if(spaceAvailable.top<scrollBuffer){contentNode.scrollTop=Math.min(centeredRect.top,contentNode.scrollTop+scrollBuffer-spaceAvailable.top);}else if(spaceAvailable.bottom<scrollBuffer){contentNode.scrollTop=Math.max(centeredRect.top+centeredRect.height-selectMenuRect.height,contentNode.scrollTop-scrollBuffer+spaceAvailable.bottom);}}
var left,top,transformOrigin;if(shouldOpenAroundTarget){left=targetRect.left;top=targetRect.top+targetRect.height;transformOrigin='50% 0';if(top+selectMenuRect.height>bounds.bottom){top=targetRect.top-selectMenuRect.height;transformOrigin='50% 100%';}}else{left=targetRect.left+centeredRect.left-centeredRect.paddingLeft;top=Math.floor(targetRect.top+targetRect.height/2-centeredRect.height/2-
centeredRect.top+contentNode.scrollTop);transformOrigin=(centeredRect.left+targetRect.width/2)+'px '+
(centeredRect.top+centeredRect.height/2-contentNode.scrollTop)+'px 0px';containerNode.style.minWidth=targetRect.width+centeredRect.paddingLeft+
centeredRect.paddingRight+'px';}
var containerRect=containerNode.getBoundingClientRect();containerNode.style.left=clamp(bounds.left,left,bounds.right-containerRect.width)+'px';containerNode.style.top=clamp(bounds.top,top,bounds.bottom-containerRect.height)+'px';selectNode.style[$mdConstant.CSS.TRANSFORM_ORIGIN]=transformOrigin;selectNode.style[$mdConstant.CSS.TRANSFORM]='scale('+
Math.min(targetRect.width/selectMenuRect.width,1.0)+','+
Math.min(targetRect.height/selectMenuRect.height,1.0)+')';$$rAF(function(){element.addClass('md-active');selectNode.style[$mdConstant.CSS.TRANSFORM]='';if(focusedNode){opts.focusedNode=focusedNode;focusedNode.focus();}});}}
function clamp(min,n,max){return Math.max(min,Math.min(n,max));}
function getOffsetRect(node){return node?{left:node.offsetLeft,top:node.offsetTop,width:node.offsetWidth,height:node.offsetHeight}:{left:0,top:0,width:0,height:0};}}
SelectProvider.$inject=["$$interimElementProvider"];function nodesToArray(nodes){var results=[];for(var i=0;i<nodes.length;++i){results.push(nodes.item(i));}
return results;}})();(function(){"use strict";angular.module('material.components.sidenav',['material.core','material.components.backdrop']).factory('$mdSidenav',SidenavService).directive('mdSidenav',SidenavDirective).directive('mdSidenavFocus',SidenavFocusDirective).controller('$mdSidenavController',SidenavController);function SidenavService($mdComponentRegistry,$q){return function(handle){var self;var errorMsg="SideNav '"+handle+"' is not available!";var instance=$mdComponentRegistry.get(handle);if(!instance){$mdComponentRegistry.notFoundError(handle);}
return self={isOpen:function(){return instance&&instance.isOpen();},isLockedOpen:function(){return instance&&instance.isLockedOpen();},toggle:function(){return instance?instance.toggle():$q.reject(errorMsg);},open:function(){return instance?instance.open():$q.reject(errorMsg);},close:function(){return instance?instance.close():$q.reject(errorMsg);},then:function(callbackFn){var promise=instance?$q.when(instance):waitForInstance();return promise.then(callbackFn||angular.noop);}};function waitForInstance(){return $mdComponentRegistry.when(handle).then(function(it){instance=it;return it;});}};}
SidenavService.$inject=["$mdComponentRegistry","$q"];function SidenavFocusDirective(){return{restrict:'A',require:'^mdSidenav',link:function(scope,element,attr,sidenavCtrl){sidenavCtrl.focusElement(element);}};}
function SidenavDirective($timeout,$animate,$parse,$log,$mdMedia,$mdConstant,$compile,$mdTheming,$q,$document){return{restrict:'E',scope:{isOpen:'=?mdIsOpen'},controller:'$mdSidenavController',compile:function(element){element.addClass('md-closed');element.attr('tabIndex','-1');return postLink;}};function postLink(scope,element,attr,sidenavCtrl){var lastParentOverFlow;var triggeringElement=null;var promise=$q.when(true);var isLockedOpenParsed=$parse(attr.mdIsLockedOpen);var isLocked=function(){return isLockedOpenParsed(scope.$parent,{$media:function(arg){$log.warn("$media is deprecated for is-locked-open. Use $mdMedia instead.");return $mdMedia(arg);},$mdMedia:$mdMedia});};var backdrop=$compile('<md-backdrop class="md-sidenav-backdrop md-opaque ng-enter">')(scope);element.on('$destroy',sidenavCtrl.destroy);$mdTheming.inherit(backdrop,element);scope.$watch(isLocked,updateIsLocked);scope.$watch('isOpen',updateIsOpen);sidenavCtrl.$toggleOpen=toggleOpen;sidenavCtrl.focusElement(sidenavCtrl.focusElement()||element);function updateIsLocked(isLocked,oldValue){scope.isLockedOpen=isLocked;if(isLocked===oldValue){element.toggleClass('md-locked-open',!!isLocked);}else{$animate[isLocked?'addClass':'removeClass'](element,'md-locked-open');}
backdrop.toggleClass('md-locked-open',!!isLocked);}
function updateIsOpen(isOpen){var parent=element.parent();parent[isOpen?'on':'off']('keydown',onKeyDown);backdrop[isOpen?'on':'off']('click',close);if(isOpen){triggeringElement=$document[0].activeElement;}
var focusEl=sidenavCtrl.focusElement();disableParentScroll(isOpen);return promise=$q.all([isOpen?$animate.enter(backdrop,parent):$animate.leave(backdrop),$animate[isOpen?'removeClass':'addClass'](element,'md-closed')]).then(function(){if(scope.isOpen){focusEl&&focusEl.focus();}});}
function disableParentScroll(disabled){var parent=element.parent();if(disabled){lastParentOverFlow=parent.css('overflow');parent.css('overflow','hidden');}else if(angular.isDefined(lastParentOverFlow)){parent.css('overflow',lastParentOverFlow);lastParentOverFlow=undefined;}}
function toggleOpen(isOpen){if(scope.isOpen==isOpen){return $q.when(true);}else{var deferred=$q.defer();scope.isOpen=isOpen;$timeout(function(){promise.then(function(result){if(!scope.isOpen){triggeringElement&&triggeringElement.focus();triggeringElement=null;}
deferred.resolve(result);});},0,false);return deferred.promise;}}
function onKeyDown(ev){var isEscape=(ev.keyCode===$mdConstant.KEY_CODE.ESCAPE);return isEscape?close(ev):$q.when(true);}
function close(ev){ev.preventDefault();ev.stopPropagation();return sidenavCtrl.close();}}}
SidenavDirective.$inject=["$timeout","$animate","$parse","$log","$mdMedia","$mdConstant","$compile","$mdTheming","$q","$document"];function SidenavController($scope,$element,$attrs,$mdComponentRegistry,$q){var self=this,focusElement;self.isOpen=function(){return!!$scope.isOpen;};self.isLockedOpen=function(){return!!$scope.isLockedOpen;};self.open=function(){return self.$toggleOpen(true);};self.close=function(){return self.$toggleOpen(false);};self.toggle=function(){return self.$toggleOpen(!$scope.isOpen);};self.focusElement=function(el){if(angular.isDefined(el)){focusElement=el;}
return focusElement;};self.$toggleOpen=function(){return $q.when($scope.isOpen);};self.destroy=$mdComponentRegistry.register(self,$attrs.mdComponentId);}
SidenavController.$inject=["$scope","$element","$attrs","$mdComponentRegistry","$q"];})();(function(){"use strict";angular.module('material.components.slider',['material.core']).directive('mdSlider',SliderDirective);function SliderDirective($$rAF,$window,$mdAria,$mdUtil,$mdConstant,$mdTheming,$mdGesture,$parse){return{scope:{},require:'?ngModel',template:'<div class="md-slider-wrapper">\
        <div class="md-track-container">\
          <div class="md-track"></div>\
          <div class="md-track md-track-fill"></div>\
          <div class="md-track-ticks"></div>\
        </div>\
        <div class="md-thumb-container">\
          <div class="md-thumb"></div>\
          <div class="md-focus-thumb"></div>\
          <div class="md-focus-ring"></div>\
          <div class="md-sign">\
            <span class="md-thumb-text"></span>\
          </div>\
          <div class="md-disabled-thumb"></div>\
        </div>\
      </div>',compile:compile};function compile(tElement,tAttrs){tElement.attr({tabIndex:0,role:'slider'});$mdAria.expect(tElement,'aria-label');return postLink;}
function postLink(scope,element,attr,ngModelCtrl){$mdTheming(element);ngModelCtrl=ngModelCtrl||{$setViewValue:function(val){this.$viewValue=val;this.$viewChangeListeners.forEach(function(cb){cb();});},$parsers:[],$formatters:[],$viewChangeListeners:[]};var isDisabledParsed=attr.ngDisabled&&$parse(attr.ngDisabled);var isDisabledGetter=isDisabledParsed?function(){return isDisabledParsed(scope.$parent);}:angular.noop;var thumb=angular.element(element[0].querySelector('.md-thumb'));var thumbText=angular.element(element[0].querySelector('.md-thumb-text'));var thumbContainer=thumb.parent();var trackContainer=angular.element(element[0].querySelector('.md-track-container'));var activeTrack=angular.element(element[0].querySelector('.md-track-fill'));var tickContainer=angular.element(element[0].querySelector('.md-track-ticks'));var throttledRefreshDimensions=$mdUtil.throttle(refreshSliderDimensions,5000);angular.isDefined(attr.min)?attr.$observe('min',updateMin):updateMin(0);angular.isDefined(attr.max)?attr.$observe('max',updateMax):updateMax(100);angular.isDefined(attr.step)?attr.$observe('step',updateStep):updateStep(1);var stopDisabledWatch=angular.noop;if(attr.ngDisabled){stopDisabledWatch=scope.$parent.$watch(attr.ngDisabled,updateAriaDisabled);}
$mdGesture.register(element,'drag');element.on('keydown',keydownListener).on('$md.pressdown',onPressDown).on('$md.pressup',onPressUp).on('$md.dragstart',onDragStart).on('$md.drag',onDrag).on('$md.dragend',onDragEnd);function updateAll(){refreshSliderDimensions();ngModelRender();redrawTicks();}
setTimeout(updateAll);var debouncedUpdateAll=$$rAF.throttle(updateAll);angular.element($window).on('resize',debouncedUpdateAll);scope.$on('$destroy',function(){angular.element($window).off('resize',debouncedUpdateAll);stopDisabledWatch();});ngModelCtrl.$render=ngModelRender;ngModelCtrl.$viewChangeListeners.push(ngModelRender);ngModelCtrl.$formatters.push(minMaxValidator);ngModelCtrl.$formatters.push(stepValidator);var min;var max;var step;function updateMin(value){min=parseFloat(value);element.attr('aria-valuemin',value);updateAll();}
function updateMax(value){max=parseFloat(value);element.attr('aria-valuemax',value);updateAll();}
function updateStep(value){step=parseFloat(value);redrawTicks();}
function updateAriaDisabled(isDisabled){element.attr('aria-disabled',!!isDisabled);}
var tickCanvas,tickCtx;function redrawTicks(){if(!angular.isDefined(attr.mdDiscrete))return;var numSteps=Math.floor((max-min)/step);if(!tickCanvas){var trackTicksStyle=$window.getComputedStyle(tickContainer[0]);tickCanvas=angular.element('<canvas style="position:absolute;">');tickCtx=tickCanvas[0].getContext('2d');tickCtx.fillStyle=trackTicksStyle.backgroundColor||'black';tickContainer.append(tickCanvas);}
var dimensions=getSliderDimensions();tickCanvas[0].width=dimensions.width;tickCanvas[0].height=dimensions.height;var distance;for(var i=0;i<=numSteps;i++){distance=Math.floor(dimensions.width*(i/numSteps));tickCtx.fillRect(distance-1,0,2,dimensions.height);}}
var sliderDimensions={};refreshSliderDimensions();function refreshSliderDimensions(){sliderDimensions=trackContainer[0].getBoundingClientRect();}
function getSliderDimensions(){throttledRefreshDimensions();return sliderDimensions;}
function keydownListener(ev){if(element[0].hasAttribute('disabled')){return;}
var changeAmount;if(ev.keyCode===$mdConstant.KEY_CODE.LEFT_ARROW){changeAmount=-step;}else if(ev.keyCode===$mdConstant.KEY_CODE.RIGHT_ARROW){changeAmount=step;}
if(changeAmount){if(ev.metaKey||ev.ctrlKey||ev.altKey){changeAmount*=4;}
ev.preventDefault();ev.stopPropagation();scope.$evalAsync(function(){setModelValue(ngModelCtrl.$viewValue+changeAmount);});}}
function setModelValue(value){ngModelCtrl.$setViewValue(minMaxValidator(stepValidator(value)));}
function ngModelRender(){if(isNaN(ngModelCtrl.$viewValue)){ngModelCtrl.$viewValue=ngModelCtrl.$modelValue;}
var percent=(ngModelCtrl.$viewValue-min)/(max-min);scope.modelValue=ngModelCtrl.$viewValue;element.attr('aria-valuenow',ngModelCtrl.$viewValue);setSliderPercent(percent);thumbText.text(ngModelCtrl.$viewValue);}
function minMaxValidator(value){if(angular.isNumber(value)){return Math.max(min,Math.min(max,value));}}
function stepValidator(value){if(angular.isNumber(value)){var formattedValue=(Math.round(value/step)*step);return(Math.round(formattedValue*1000)/1000);}}
function setSliderPercent(percent){activeTrack.css('width',(percent*100)+'%');thumbContainer.css('left',(percent*100)+'%');element.toggleClass('md-min',percent===0);}
var isDragging=false;var isDiscrete=angular.isDefined(attr.mdDiscrete);function onPressDown(ev){if(isDisabledGetter())return;element.addClass('active');element[0].focus();refreshSliderDimensions();var exactVal=percentToValue(positionToPercent(ev.pointer.x));var closestVal=minMaxValidator(stepValidator(exactVal));scope.$apply(function(){setModelValue(closestVal);setSliderPercent(valueToPercent(closestVal));});}
function onPressUp(ev){if(isDisabledGetter())return;element.removeClass('dragging active');var exactVal=percentToValue(positionToPercent(ev.pointer.x));var closestVal=minMaxValidator(stepValidator(exactVal));scope.$apply(function(){setModelValue(closestVal);ngModelRender();});}
function onDragStart(ev){if(isDisabledGetter())return;isDragging=true;ev.stopPropagation();element.addClass('dragging');setSliderFromEvent(ev);}
function onDrag(ev){if(!isDragging)return;ev.stopPropagation();setSliderFromEvent(ev);}
function onDragEnd(ev){if(!isDragging)return;ev.stopPropagation();isDragging=false;}
function setSliderFromEvent(ev){if(isDiscrete)adjustThumbPosition(ev.pointer.x);else doSlide(ev.pointer.x);}
function doSlide(x){scope.$evalAsync(function(){setModelValue(percentToValue(positionToPercent(x)));});}
function adjustThumbPosition(x){var exactVal=percentToValue(positionToPercent(x));var closestVal=minMaxValidator(stepValidator(exactVal));setSliderPercent(positionToPercent(x));thumbText.text(closestVal);}
function positionToPercent(x){return Math.max(0,Math.min(1,(x-sliderDimensions.left)/(sliderDimensions.width)));}
function percentToValue(percent){return(min+percent*(max-min));}
function valueToPercent(val){return(val-min)/(max-min);}}}
SliderDirective.$inject=["$$rAF","$window","$mdAria","$mdUtil","$mdConstant","$mdTheming","$mdGesture","$parse"];})();(function(){"use strict";angular.module('material.components.sticky',['material.core','material.components.content']).factory('$mdSticky',MdSticky);function MdSticky($document,$mdConstant,$compile,$$rAF,$mdUtil){var browserStickySupport=checkStickySupport();return function registerStickyElement(scope,element,stickyClone){var contentCtrl=element.controller('mdContent');if(!contentCtrl)return;if(browserStickySupport){element.css({position:browserStickySupport,top:0,'z-index':2});}else{var $$sticky=contentCtrl.$element.data('$$sticky');if(!$$sticky){$$sticky=setupSticky(contentCtrl);contentCtrl.$element.data('$$sticky',$$sticky);}
var deregister=$$sticky.add(element,stickyClone||element.clone());scope.$on('$destroy',deregister);}};function setupSticky(contentCtrl){var contentEl=contentCtrl.$element;var debouncedRefreshElements=$$rAF.throttle(refreshElements);setupAugmentedScrollEvents(contentEl);contentEl.on('$scrollstart',debouncedRefreshElements);contentEl.on('$scroll',onScroll);var self;var stickyBaseoffset=contentEl.prop('offsetTop');return self={prev:null,current:null,next:null,items:[],add:add,refreshElements:refreshElements};function add(element,stickyClone){stickyClone.addClass('md-sticky-clone');stickyClone.css('top',stickyBaseoffset+'px');var item={element:element,clone:stickyClone};self.items.push(item);contentEl.parent().prepend(item.clone);debouncedRefreshElements();return function remove(){self.items.forEach(function(item,index){if(item.element[0]===element[0]){self.items.splice(index,1);item.clone.remove();}});debouncedRefreshElements();};}
function refreshElements(){self.items.forEach(refreshPosition);self.items=self.items.sort(function(a,b){return a.top<b.top?-1:1;});var item;var currentScrollTop=contentEl.prop('scrollTop');for(var i=self.items.length-1;i>=0;i--){if(currentScrollTop>self.items[i].top){item=self.items[i];break;}}
setCurrentItem(item);}
function refreshPosition(item){var current=item.element[0];item.top=0;item.left=0;while(current&&current!==contentEl[0]){item.top+=current.offsetTop;item.left+=current.offsetLeft;current=current.offsetParent;}
item.height=item.element.prop('offsetHeight');item.clone.css('margin-left',item.left+'px');if($mdUtil.floatingScrollbars()){item.clone.css('margin-right','0');}}
function onScroll(){var scrollTop=contentEl.prop('scrollTop');var isScrollingDown=scrollTop>(onScroll.prevScrollTop||0);onScroll.prevScrollTop=scrollTop;if(scrollTop===0){setCurrentItem(null);}else if(isScrollingDown&&self.next){if(self.next.top-scrollTop<=0){setCurrentItem(self.next);}else if(self.current){if(self.next.top-scrollTop<=self.next.height){translate(self.current,self.next.top-self.next.height-scrollTop);}else{translate(self.current,null);}}}else if(!isScrollingDown&&self.current){if(scrollTop<self.current.top){setCurrentItem(self.prev);}
if(self.current&&self.next){if(scrollTop>=self.next.top-self.current.height){translate(self.current,self.next.top-scrollTop-self.current.height);}else{translate(self.current,null);}}}}
function setCurrentItem(item){if(self.current===item)return;if(self.current){translate(self.current,null);setStickyState(self.current,null);}
if(item){setStickyState(item,'active');}
self.current=item;var index=self.items.indexOf(item);self.next=self.items[index+1];self.prev=self.items[index-1];setStickyState(self.next,'next');setStickyState(self.prev,'prev');}
function setStickyState(item,state){if(!item||item.state===state)return;if(item.state){item.clone.attr('sticky-prev-state',item.state);item.element.attr('sticky-prev-state',item.state);}
item.clone.attr('sticky-state',state);item.element.attr('sticky-state',state);item.state=state;}
function translate(item,amount){if(!item)return;if(amount===null||amount===undefined){if(item.translateY){item.translateY=null;item.clone.css($mdConstant.CSS.TRANSFORM,'');}}else{item.translateY=amount;item.clone.css($mdConstant.CSS.TRANSFORM,'translate3d('+item.left+'px,'+amount+'px,0)');}}}
function checkStickySupport($el){var stickyProp;var testEl=angular.element('<div>');$document[0].body.appendChild(testEl[0]);var stickyProps=['sticky','-webkit-sticky'];for(var i=0;i<stickyProps.length;++i){testEl.css({position:stickyProps[i],top:0,'z-index':2});if(testEl.css('position')==stickyProps[i]){stickyProp=stickyProps[i];break;}}
testEl.remove();return stickyProp;}
function setupAugmentedScrollEvents(element){var SCROLL_END_DELAY=200;var isScrolling;var lastScrollTime;element.on('scroll touchmove',function(){if(!isScrolling){isScrolling=true;$$rAF(loopScrollEvent);element.triggerHandler('$scrollstart');}
element.triggerHandler('$scroll');lastScrollTime=+$mdUtil.now();});function loopScrollEvent(){if(+$mdUtil.now()-lastScrollTime>SCROLL_END_DELAY){isScrolling=false;element.triggerHandler('$scrollend');}else{element.triggerHandler('$scroll');$$rAF(loopScrollEvent);}}}}
MdSticky.$inject=["$document","$mdConstant","$compile","$$rAF","$mdUtil"];})();(function(){"use strict";angular.module('material.components.subheader',['material.core','material.components.sticky']).directive('mdSubheader',MdSubheaderDirective);function MdSubheaderDirective($mdSticky,$compile,$mdTheming){return{restrict:'E',replace:true,transclude:true,template:'<h2 class="md-subheader">'+'<div class="md-subheader-inner">'+'<span class="md-subheader-content"></span>'+'</div>'+'</h2>',compile:function(element,attr,transclude){return function postLink(scope,element,attr){$mdTheming(element);var outerHTML=element[0].outerHTML;function getContent(el){return angular.element(el[0].querySelector('.md-subheader-content'));}
transclude(scope,function(clone){getContent(element).append(clone);});if(!element.hasClass('md-no-sticky')){transclude(scope,function(clone){var stickyClone=$compile(angular.element(outerHTML))(scope);getContent(stickyClone).append(clone);$mdSticky(scope,element,stickyClone);});}};}};}
MdSubheaderDirective.$inject=["$mdSticky","$compile","$mdTheming"];})();(function(){"use strict";angular.module('material.components.swipe',['material.core']).directive('mdSwipeLeft',getDirective('SwipeLeft')).directive('mdSwipeRight',getDirective('SwipeRight'));function getDirective(name){var directiveName='md'+name;var eventName='$md.'+name.toLowerCase();DirectiveFactory.$inject=["$parse"];return DirectiveFactory;function DirectiveFactory($parse){return{restrict:'A',link:postLink};function postLink(scope,element,attr){var fn=$parse(attr[directiveName]);element.on(eventName,function(ev){scope.$apply(function(){fn(scope,{$event:ev});});});}}}})();(function(){"use strict";angular.module('material.components.switch',['material.core','material.components.checkbox']).directive('mdSwitch',MdSwitch);function MdSwitch(mdCheckboxDirective,$mdTheming,$mdUtil,$document,$mdConstant,$parse,$$rAF,$mdGesture){var checkboxDirective=mdCheckboxDirective[0];return{restrict:'E',priority:210,transclude:true,template:'<div class="md-container">'+'<div class="md-bar"></div>'+'<div class="md-thumb-container">'+'<div class="md-thumb" md-ink-ripple md-ink-ripple-checkbox></div>'+'</div>'+'</div>'+'<div ng-transclude class="md-label">'+'</div>',require:'?ngModel',compile:compile};function compile(element,attr){var checkboxLink=checkboxDirective.compile(element,attr);element.addClass('md-dragging');return function(scope,element,attr,ngModel){ngModel=ngModel||$mdUtil.fakeNgModel();var disabledGetter=$parse(attr.ngDisabled);var thumbContainer=angular.element(element[0].querySelector('.md-thumb-container'));var switchContainer=angular.element(element[0].querySelector('.md-container'));$$rAF(function(){element.removeClass('md-dragging');});checkboxLink(scope,element,attr,ngModel);if(angular.isDefined(attr.ngDisabled)){scope.$watch(disabledGetter,function(isDisabled){element.attr('tabindex',isDisabled?-1:0);});}
$mdGesture.register(switchContainer,'drag');switchContainer.on('$md.dragstart',onDragStart).on('$md.drag',onDrag).on('$md.dragend',onDragEnd);var drag;function onDragStart(ev){if(disabledGetter(scope))return;ev.stopPropagation();element.addClass('md-dragging');drag={width:thumbContainer.prop('offsetWidth')};element.removeClass('transition');}
function onDrag(ev){if(!drag)return;ev.stopPropagation();ev.srcEvent&&ev.srcEvent.preventDefault();var percent=ev.pointer.distanceX/drag.width;var translate=ngModel.$viewValue?1+percent:percent;translate=Math.max(0,Math.min(1,translate));thumbContainer.css($mdConstant.CSS.TRANSFORM,'translate3d('+(100*translate)+'%,0,0)');drag.translate=translate;}
function onDragEnd(ev){if(!drag)return;ev.stopPropagation();element.removeClass('md-dragging');thumbContainer.css($mdConstant.CSS.TRANSFORM,'');var isChanged=ngModel.$viewValue?drag.translate<0.5:drag.translate>0.5;if(isChanged){applyModelValue(!ngModel.$viewValue);}
drag=null;}
function applyModelValue(newValue){scope.$apply(function(){ngModel.$setViewValue(newValue);ngModel.$render();});}};}}
MdSwitch.$inject=["mdCheckboxDirective","$mdTheming","$mdUtil","$document","$mdConstant","$parse","$$rAF","$mdGesture"];})();(function(){"use strict";angular.module('material.components.tabs',['material.core','material.components.icon']);})();(function(){"use strict";angular.module('material.components.toast',['material.core','material.components.button']).directive('mdToast',MdToastDirective).provider('$mdToast',MdToastProvider);function MdToastDirective(){return{restrict:'E'};}
function MdToastProvider($$interimElementProvider){var activeToastContent;var $mdToast=$$interimElementProvider('$mdToast').setDefaults({methods:['position','hideDelay','capsule'],options:toastDefaultOptions}).addPreset('simple',{argOption:'content',methods:['content','action','highlightAction','theme','parent'],options:["$mdToast","$mdTheming",function($mdToast,$mdTheming){var opts={template:['<md-toast md-theme="{{ toast.theme }}" ng-class="{\'md-capsule\': toast.capsule}">','<span flex>{{ toast.content }}</span>','<md-button class="md-action" ng-if="toast.action" ng-click="toast.resolve()" ng-class="{\'md-highlight\': toast.highlightAction}">','{{ toast.action }}','</md-button>','</md-toast>'].join(''),controller:["$scope",function mdToastCtrl($scope){var self=this;$scope.$watch(function(){return activeToastContent;},function(){self.content=activeToastContent;});this.resolve=function(){$mdToast.hide();};}],theme:$mdTheming.defaultTheme(),controllerAs:'toast',bindToController:true};return opts;}]}).addMethod('updateContent',function(newContent){activeToastContent=newContent;});toastDefaultOptions.$inject=["$timeout","$animate","$mdToast","$mdUtil"];return $mdToast;function toastDefaultOptions($timeout,$animate,$mdToast,$mdUtil){return{onShow:onShow,onRemove:onRemove,position:'bottom left',themable:true,hideDelay:3000};function onShow(scope,element,options){element=$mdUtil.extractElementByName(element,'md-toast');activeToastContent=options.content;element.addClass(options.position.split(' ').map(function(pos){return'md-'+pos;}).join(' '));options.parent.addClass(toastOpenClass(options.position));options.onSwipe=function(ev,gesture){element.addClass('md-'+ev.type.replace('$md.',''));$timeout($mdToast.cancel);};element.on('$md.swipeleft $md.swiperight',options.onSwipe);return $animate.enter(element,options.parent);}
function onRemove(scope,element,options){element.off('$md.swipeleft $md.swiperight',options.onSwipe);options.parent.removeClass(toastOpenClass(options.position));return $animate.leave(element);}
function toastOpenClass(position){return'md-toast-open-'+
(position.indexOf('top')>-1?'top':'bottom');}}}
MdToastProvider.$inject=["$$interimElementProvider"];})();(function(){"use strict";angular.module('material.components.toolbar',['material.core','material.components.content']).directive('mdToolbar',mdToolbarDirective);function mdToolbarDirective($$rAF,$mdConstant,$mdUtil,$mdTheming,$animate,$timeout){return{restrict:'E',controller:angular.noop,link:function(scope,element,attr){$mdTheming(element);if(angular.isDefined(attr.mdScrollShrink)){setupScrollShrink();}
function setupScrollShrink(){var y=0;var prevScrollTop=0;var shrinkSpeedFactor=attr.mdShrinkSpeedFactor||0.5;var toolbarHeight;var contentElement;var debouncedContentScroll=$$rAF.throttle(onContentScroll);var debouncedUpdateHeight=$mdUtil.debounce(updateToolbarHeight,5*1000);scope.$on('$mdContentLoaded',onMdContentLoad);function onMdContentLoad($event,newContentEl){if(element.parent()[0]===newContentEl.parent()[0]){if(contentElement){contentElement.off('scroll',debouncedContentScroll);}
newContentEl.on('scroll',debouncedContentScroll);newContentEl.attr('scroll-shrink','true');contentElement=newContentEl;$$rAF(updateToolbarHeight);}}
function updateToolbarHeight(){toolbarHeight=element.prop('offsetHeight');var margin=(-toolbarHeight*shrinkSpeedFactor)+'px';contentElement.css('margin-top',margin);contentElement.css('margin-bottom',margin);onContentScroll();}
function onContentScroll(e){var scrollTop=e?e.target.scrollTop:prevScrollTop;debouncedUpdateHeight();y=Math.min(toolbarHeight/shrinkSpeedFactor,Math.max(0,y+scrollTop-prevScrollTop));element.css($mdConstant.CSS.TRANSFORM,'translate3d(0,'+(-y*shrinkSpeedFactor)+'px,0)');contentElement.css($mdConstant.CSS.TRANSFORM,'translate3d(0,'+((toolbarHeight-y)*shrinkSpeedFactor)+'px,0)');prevScrollTop=scrollTop;if(element.hasClass('md-whiteframe-z1')){if(!y){$timeout(function(){$animate.removeClass(element,'md-whiteframe-z1');});}}else{if(y){$timeout(function(){$animate.addClass(element,'md-whiteframe-z1');});}}}}}};}
mdToolbarDirective.$inject=["$$rAF","$mdConstant","$mdUtil","$mdTheming","$animate","$timeout"];})();(function(){"use strict";angular.module('material.components.tooltip',['material.core']).directive('mdTooltip',MdTooltipDirective);function MdTooltipDirective($timeout,$window,$$rAF,$document,$mdUtil,$mdTheming,$rootElement,$animate,$q){var TOOLTIP_SHOW_DELAY=300;var TOOLTIP_WINDOW_EDGE_SPACE=8;return{restrict:'E',transclude:true,priority:210,template:'\
        <div class="md-background"></div>\
        <div class="md-content" ng-transclude></div>',scope:{visible:'=?mdVisible',delay:'=?mdDelay',autohide:'=?mdAutohide'},link:postLink};function postLink(scope,element,attr){$mdTheming(element);var parent=getParentWithPointerEvents(),background=angular.element(element[0].getElementsByClassName('md-background')[0]),content=angular.element(element[0].getElementsByClassName('md-content')[0]),direction=attr.mdDirection,current=getNearestContentElement(),tooltipParent=angular.element(current||document.body),debouncedOnResize=$$rAF.throttle(function(){if(scope.visible)positionTooltip();});return init();function init(){setDefaults();manipulateElement();bindEvents();configureWatchers();addAriaLabel();}
function setDefaults(){if(!angular.isDefined(attr.mdDelay))scope.delay=TOOLTIP_SHOW_DELAY;}
function configureWatchers(){scope.$on('$destroy',function(){scope.visible=false;element.remove();angular.element($window).off('resize',debouncedOnResize);});scope.$watch('visible',function(isVisible){if(isVisible)showTooltip();else hideTooltip();});}
function addAriaLabel(){if(!parent.attr('aria-label')&&!parent.text().trim()){parent.attr('aria-label',element.text().trim());}}
function manipulateElement(){element.detach();element.attr('role','tooltip');}
function getParentWithPointerEvents(){var parent=element.parent();while(parent&&$window.getComputedStyle(parent[0])['pointer-events']=='none'){parent=parent.parent();}
return parent;}
function getNearestContentElement(){var current=element.parent()[0];while(current&&current!==$rootElement[0]&&current!==document.body){current=current.parentNode;}
return current;}
function hasComputedStyleValue(key,value){var computedStyles=$window.getComputedStyle(element[0]);return angular.isDefined(computedStyles[key])&&(computedStyles[key]==value);}
function bindEvents(){var mouseActive=false;var enterHandler=function(){if(!hasComputedStyleValue('pointer-events','none')){setVisible(true);}};var leaveHandler=function(){var autohide=scope.hasOwnProperty('autohide')?scope.autohide:attr.hasOwnProperty('mdAutohide');if(autohide||mouseActive||($document[0].activeElement!==parent[0])){setVisible(false);}
mouseActive=false;};parent.on('mousedown',function(){mouseActive=true;});parent.on('focus mouseenter touchstart',enterHandler);parent.on('blur mouseleave touchend touchcancel',leaveHandler);angular.element($window).on('resize',debouncedOnResize);}
function setVisible(value){setVisible.value=!!value;if(!setVisible.queued){if(value){setVisible.queued=true;$timeout(function(){scope.visible=setVisible.value;setVisible.queued=false;},scope.delay);}else{$timeout(function(){scope.visible=false;});}}}
function showTooltip(){tooltipParent.append(element);if(hasComputedStyleValue('display','none')){scope.visible=false;element.detach();return;}
positionTooltip();angular.forEach([element,background,content],function(element){$animate.addClass(element,'md-show');});}
function hideTooltip(){$q.all([$animate.removeClass(content,'md-show'),$animate.removeClass(background,'md-show'),$animate.removeClass(element,'md-show')]).then(function(){if(!scope.visible)element.detach();});}
function positionTooltip(){var tipRect=$mdUtil.offsetRect(element,tooltipParent);var parentRect=$mdUtil.offsetRect(parent,tooltipParent);var newPosition=getPosition(direction);if(direction){newPosition=fitInParent(newPosition);}else if(newPosition.top>element.prop('offsetParent').scrollHeight-tipRect.height-TOOLTIP_WINDOW_EDGE_SPACE){newPosition=fitInParent(getPosition('top'));}
element.css({top:newPosition.top+'px',left:newPosition.left+'px'});positionBackground();function positionBackground(){var size=direction==='left'||direction==='right'?Math.sqrt(Math.pow(tipRect.width,2)+Math.pow(tipRect.height/2,2))*2:Math.sqrt(Math.pow(tipRect.width/2,2)+Math.pow(tipRect.height,2))*2,position=direction==='left'?{left:100,top:50}:direction==='right'?{left:0,top:50}:direction==='top'?{left:50,top:100}:{left:50,top:0};background.css({width:size+'px',height:size+'px',left:position.left+'%',top:position.top+'%'});}
function fitInParent(pos){var newPosition={left:pos.left,top:pos.top};newPosition.left=Math.min(newPosition.left,tooltipParent.prop('scrollWidth')-tipRect.width-TOOLTIP_WINDOW_EDGE_SPACE);newPosition.left=Math.max(newPosition.left,TOOLTIP_WINDOW_EDGE_SPACE);newPosition.top=Math.min(newPosition.top,tooltipParent.prop('scrollHeight')-tipRect.height-TOOLTIP_WINDOW_EDGE_SPACE);newPosition.top=Math.max(newPosition.top,TOOLTIP_WINDOW_EDGE_SPACE);return newPosition;}
function getPosition(dir){return dir==='left'?{left:parentRect.left-tipRect.width-TOOLTIP_WINDOW_EDGE_SPACE,top:parentRect.top+parentRect.height/2-tipRect.height/2}:dir==='right'?{left:parentRect.left+parentRect.width+TOOLTIP_WINDOW_EDGE_SPACE,top:parentRect.top+parentRect.height/2-tipRect.height/2}:dir==='top'?{left:parentRect.left+parentRect.width/2-tipRect.width/2,top:parentRect.top-tipRect.height-TOOLTIP_WINDOW_EDGE_SPACE}:{left:parentRect.left+parentRect.width/2-tipRect.width/2,top:parentRect.top+parentRect.height+TOOLTIP_WINDOW_EDGE_SPACE};}}}}
MdTooltipDirective.$inject=["$timeout","$window","$$rAF","$document","$mdUtil","$mdTheming","$rootElement","$animate","$q"];})();(function(){"use strict";angular.module('material.components.whiteframe',[]);})();(function(){"use strict";angular.module('material.components.autocomplete').controller('MdAutocompleteCtrl',MdAutocompleteCtrl);var ITEM_HEIGHT=41,MAX_HEIGHT=5.5*ITEM_HEIGHT,MENU_PADDING=8;function MdAutocompleteCtrl($scope,$element,$mdUtil,$mdConstant,$timeout,$mdTheming,$window,$animate,$rootElement){var self=this,itemParts=$scope.itemsExpr.split(/ in /i),itemExpr=itemParts[1],elements=null,promise=null,cache={},noBlur=false,selectedItemWatchers=[],hasFocus=false,lastCount=0;self.scope=$scope;self.parent=$scope.$parent;self.itemName=itemParts[0];self.matches=[];self.loading=false;self.hidden=true;self.index=null;self.messages=[];self.id=$mdUtil.nextUid();self.keydown=keydown;self.blur=blur;self.focus=focus;self.clear=clearValue;self.select=select;self.getCurrentDisplayValue=getCurrentDisplayValue;self.registerSelectedItemWatcher=registerSelectedItemWatcher;self.unregisterSelectedItemWatcher=unregisterSelectedItemWatcher;self.listEnter=function(){noBlur=true;};self.listLeave=function(){noBlur=false;if(!hasFocus)self.hidden=true;};self.mouseUp=function(){elements.input.focus();};return init();function init(){configureWatchers();$timeout(function(){gatherElements();focusElement();moveDropdown();});}
function positionDropdown(){if(!elements)return $timeout(positionDropdown,0,false);var hrect=elements.wrap.getBoundingClientRect(),vrect=elements.snap.getBoundingClientRect(),root=elements.root.getBoundingClientRect(),top=vrect.bottom-root.top,bot=root.bottom-vrect.top,left=hrect.left-root.left,width=hrect.width,styles={left:left+'px',minWidth:width+'px',maxWidth:Math.max(hrect.right-root.left,root.right-hrect.left)-MENU_PADDING+'px'};if(top>bot&&root.height-hrect.bottom-MENU_PADDING<MAX_HEIGHT){styles.top='auto';styles.bottom=bot+'px';styles.maxHeight=Math.min(MAX_HEIGHT,hrect.top-root.top-MENU_PADDING)+'px';}else{styles.top=top+'px';styles.bottom='auto';styles.maxHeight=Math.min(MAX_HEIGHT,root.bottom-hrect.bottom-MENU_PADDING)+'px';}
elements.$.ul.css(styles);$timeout(correctHorizontalAlignment,0,false);function correctHorizontalAlignment(){var dropdown=elements.ul.getBoundingClientRect(),styles={};if(dropdown.right>root.right-MENU_PADDING){styles.left=(hrect.right-dropdown.width)+'px';}
elements.$.ul.css(styles);}}
function moveDropdown(){if(!elements.$.root.length)return;$mdTheming(elements.$.ul);elements.$.ul.detach();elements.$.root.append(elements.$.ul);if($animate.pin)$animate.pin(elements.$.ul,$rootElement);}
function focusElement(){if($scope.autofocus)elements.input.focus();}
function configureWatchers(){var wait=parseInt($scope.delay,10)||0;$scope.$watch('searchText',wait?$mdUtil.debounce(handleSearchText,wait):handleSearchText);registerSelectedItemWatcher(selectedItemChange);$scope.$watch('selectedItem',handleSelectedItemChange);$scope.$watch('$mdAutocompleteCtrl.hidden',function(hidden,oldHidden){if(!hidden&&oldHidden)positionDropdown();});angular.element($window).on('resize',positionDropdown);$scope.$on('$destroy',cleanup);}
function cleanup(){elements.$.ul.remove();}
function gatherElements(){elements={main:$element[0],ul:$element.find('ul')[0],input:$element.find('input')[0],wrap:$element.find('md-autocomplete-wrap')[0],root:document.body};elements.li=elements.ul.getElementsByTagName('li');elements.snap=getSnapTarget();elements.$=getAngularElements(elements);}
function getSnapTarget(){for(var element=$element;element.length;element=element.parent()){if(angular.isDefined(element.attr('md-autocomplete-snap')))return element[0];}
return elements.wrap;}
function getAngularElements(elements){var obj={};for(var key in elements){obj[key]=angular.element(elements[key]);}
return obj;}
function selectedItemChange(selectedItem,previousSelectedItem){if(selectedItem){$scope.searchText=getDisplayValue(selectedItem);}
if($scope.itemChange&&selectedItem!==previousSelectedItem)
$scope.itemChange(getItemScope(selectedItem));}
function handleSelectedItemChange(selectedItem,previousSelectedItem){for(var i=0;i<selectedItemWatchers.length;++i){selectedItemWatchers[i](selectedItem,previousSelectedItem);}}
function registerSelectedItemWatcher(cb){if(selectedItemWatchers.indexOf(cb)==-1){selectedItemWatchers.push(cb);}}
function unregisterSelectedItemWatcher(cb){var i=selectedItemWatchers.indexOf(cb);if(i!=-1){selectedItemWatchers.splice(i,1);}}
function handleSearchText(searchText,previousSearchText){self.index=getDefaultIndex();if(searchText===previousSearchText)return;if(searchText!==getDisplayValue($scope.selectedItem))$scope.selectedItem=null;else return;if($scope.textChange&&searchText!==previousSearchText)
$scope.textChange(getItemScope($scope.selectedItem));if(!isMinLengthMet()){self.loading=false;self.matches=[];self.hidden=shouldHide();updateMessages();}else{handleQuery();}}
function blur(){hasFocus=false;if(!noBlur)self.hidden=true;}
function focus(){hasFocus=true;if(!angular.isString($scope.searchText))$scope.searchText='';if($scope.minLength>0)return;self.hidden=shouldHide();if(!self.hidden)handleQuery();}
function keydown(event){switch(event.keyCode){case $mdConstant.KEY_CODE.DOWN_ARROW:if(self.loading)return;event.preventDefault();self.index=Math.min(self.index+1,self.matches.length-1);updateScroll();updateMessages();break;case $mdConstant.KEY_CODE.UP_ARROW:if(self.loading)return;event.preventDefault();self.index=self.index<0?self.matches.length-1:Math.max(0,self.index-1);updateScroll();updateMessages();break;case $mdConstant.KEY_CODE.TAB:case $mdConstant.KEY_CODE.ENTER:if(self.hidden||self.loading||self.index<0||self.matches.length<1)return;event.preventDefault();select(self.index);break;case $mdConstant.KEY_CODE.ESCAPE:self.matches=[];self.hidden=true;self.index=getDefaultIndex();break;default:}}
function getMinLength(){return angular.isNumber($scope.minLength)?$scope.minLength:1;}
function getDisplayValue(item){return(item&&$scope.itemText)?$scope.itemText(getItemScope(item)):item;}
function getItemScope(item){if(!item)return;var locals={};if(self.itemName)locals[self.itemName]=item;return locals;}
function getDefaultIndex(){return $scope.autoselect?0:-1;}
function shouldHide(){if(!isMinLengthMet())return true;}
function getCurrentDisplayValue(){return getDisplayValue(self.matches[self.index]);}
function isMinLengthMet(){return $scope.searchText&&$scope.searchText.length>=getMinLength();}
function select(index){$scope.selectedItem=self.matches[index];self.hidden=true;self.index=0;self.matches=[];$timeout(function(){elements.$.input.controller('ngModel').$setViewValue(getDisplayValue($scope.selectedItem)||$scope.searchText);self.hidden=true;});}
function clearValue(){$scope.searchText='';select(-1);var eventObj=document.createEvent('CustomEvent');eventObj.initCustomEvent('input',true,true,{value:$scope.searchText});elements.input.dispatchEvent(eventObj);elements.input.focus();}
function fetchResults(searchText){var items=$scope.$parent.$eval(itemExpr),term=searchText.toLowerCase();if(angular.isArray(items)){handleResults(items);}else{self.loading=true;if(items.success)items.success(handleResults);if(items.then)items.then(handleResults);if(items.error)items.error(function(){self.loading=false;});}
function handleResults(matches){cache[term]=matches;if(searchText!==$scope.searchText)return;self.loading=false;promise=null;self.matches=matches;self.hidden=shouldHide();updateMessages();positionDropdown();}}
function updateMessages(){self.messages=[getCountMessage(),getCurrentDisplayValue()];}
function getCountMessage(){if(lastCount===self.matches.length)return'';lastCount=self.matches.length;switch(self.matches.length){case 0:return'There are no matches available.';case 1:return'There is 1 match available.';default:return'There are '+self.matches.length+' matches available.';}}
function updateScroll(){if(!elements.li[self.index])return;var li=elements.li[self.index],top=li.offsetTop,bot=top+li.offsetHeight,hgt=elements.ul.clientHeight;if(top<elements.ul.scrollTop){elements.ul.scrollTop=top;}else if(bot>elements.ul.scrollTop+hgt){elements.ul.scrollTop=bot-hgt;}}
function handleQuery(){var searchText=$scope.searchText,term=searchText.toLowerCase();if(promise&&promise.cancel){promise.cancel();promise=null;}
if(!$scope.noCache&&cache[term]){self.matches=cache[term];updateMessages();}else{fetchResults(searchText);}
if(hasFocus)self.hidden=shouldHide();}}
MdAutocompleteCtrl.$inject=["$scope","$element","$mdUtil","$mdConstant","$timeout","$mdTheming","$window","$animate","$rootElement"];})();(function(){"use strict";angular.module('material.components.autocomplete').directive('mdAutocomplete',MdAutocomplete);function MdAutocomplete($mdTheming,$mdUtil){return{controller:'MdAutocompleteCtrl',controllerAs:'$mdAutocompleteCtrl',link:link,scope:{inputName:'@mdInputName',inputMinlength:'@mdInputMinlength',inputMaxlength:'@mdInputMaxlength',searchText:'=?mdSearchText',selectedItem:'=?mdSelectedItem',itemsExpr:'@mdItems',itemText:'&mdItemText',placeholder:'@placeholder',noCache:'=?mdNoCache',itemChange:'&?mdSelectedItemChange',textChange:'&?mdSearchTextChange',minLength:'=?mdMinLength',delay:'=?mdDelay',autofocus:'=?mdAutofocus',floatingLabel:'@?mdFloatingLabel',autoselect:'=?mdAutoselect',menuClass:'@?mdMenuClass'},template:function(element,attr){var noItemsTemplate=getNoItemsTemplate(),itemTemplate=getItemTemplate(),leftover=element.html();return'\
        <md-autocomplete-wrap\
            layout="row"\
            ng-class="{ \'md-whiteframe-z1\': !floatingLabel }"\
            role="listbox">\
          '+getInputElement()+'\
          <md-progress-linear\
              ng-if="$mdAutocompleteCtrl.loading"\
              md-mode="indeterminate"></md-progress-linear>\
          <ul role="presentation"\
              class="md-autocomplete-suggestions md-whiteframe-z1 {{menuClass || \'\'}}"\
              id="ul-{{$mdAutocompleteCtrl.id}}"\
              ng-mouseenter="$mdAutocompleteCtrl.listEnter()"\
              ng-mouseleave="$mdAutocompleteCtrl.listLeave()"\
              ng-mouseup="$mdAutocompleteCtrl.mouseUp()">\
            <li ng-repeat="(index, item) in $mdAutocompleteCtrl.matches"\
                ng-class="{ selected: index === $mdAutocompleteCtrl.index }"\
                ng-hide="$mdAutocompleteCtrl.hidden"\
                ng-click="$mdAutocompleteCtrl.select(index)"\
                md-autocomplete-list-item="$mdAutocompleteCtrl.itemName">\
                '+itemTemplate+'\
            </li>\
            '+noItemsTemplate+'\
          </ul>\
        </md-autocomplete-wrap>\
        <aria-status\
            class="md-visually-hidden"\
            role="status"\
            aria-live="assertive">\
          <p ng-repeat="message in $mdAutocompleteCtrl.messages" ng-if="message">{{message}}</p>\
        </aria-status>';function getItemTemplate(){var templateTag=element.find('md-item-template').remove(),html=templateTag.length?templateTag.html():element.html();if(!templateTag.length)element.empty();return html;}
function getNoItemsTemplate(){var templateTag=element.find('md-not-found').remove(),template=templateTag.length?templateTag.html():'';return template?'<li ng-if="!$mdAutocompleteCtrl.matches.length && !$mdAutocompleteCtrl.loading\
                         && !$mdAutocompleteCtrl.hidden"\
                         ng-hide="$mdAutocompleteCtrl.hidden"\
                         md-autocomplete-parent-scope>'+template+'</li>':'';}
function getInputElement(){if(attr.mdFloatingLabel){return'\
            <md-input-container flex ng-if="floatingLabel">\
              <label>{{floatingLabel}}</label>\
              <input type="search"\
                  id="fl-input-{{$mdAutocompleteCtrl.id}}"\
                  name="{{inputName}}"\
                  autocomplete="off"\
                  ng-required="isRequired"\
                  ng-minlength="inputMinlength"\
                  ng-maxlength="inputMaxlength"\
                  ng-disabled="isDisabled"\
                  ng-model="$mdAutocompleteCtrl.scope.searchText"\
                  ng-keydown="$mdAutocompleteCtrl.keydown($event)"\
                  ng-blur="$mdAutocompleteCtrl.blur()"\
                  ng-focus="$mdAutocompleteCtrl.focus()"\
                  aria-owns="ul-{{$mdAutocompleteCtrl.id}}"\
                  aria-label="{{floatingLabel}}"\
                  aria-autocomplete="list"\
                  aria-haspopup="true"\
                  aria-activedescendant=""\
                  aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>\
              <div md-autocomplete-parent-scope md-autocomplete-replace>'+leftover+'</div>\
            </md-input-container>';}else{return'\
            <input flex type="search"\
                id="input-{{$mdAutocompleteCtrl.id}}"\
                name="{{inputName}}"\
                ng-if="!floatingLabel"\
                autocomplete="off"\
                ng-required="isRequired"\
                ng-disabled="isDisabled"\
                ng-model="$mdAutocompleteCtrl.scope.searchText"\
                ng-keydown="$mdAutocompleteCtrl.keydown($event)"\
                ng-blur="$mdAutocompleteCtrl.blur()"\
                ng-focus="$mdAutocompleteCtrl.focus()"\
                placeholder="{{placeholder}}"\
                aria-owns="ul-{{$mdAutocompleteCtrl.id}}"\
                aria-label="{{placeholder}}"\
                aria-autocomplete="list"\
                aria-haspopup="true"\
                aria-activedescendant=""\
                aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>\
            <button\
                type="button"\
                tabindex="-1"\
                ng-if="$mdAutocompleteCtrl.scope.searchText && !isDisabled"\
                ng-click="$mdAutocompleteCtrl.clear()">\
              <md-icon md-svg-icon="md-close"></md-icon>\
              <span class="md-visually-hidden">Clear</span>\
            </button>\
                ';}}}};function link(scope,element,attr){attr.$observe('disabled',function(value){scope.isDisabled=value;});attr.$observe('required',function(value){scope.isRequired=value!==null;});$mdUtil.initOptionalProperties(scope,attr,{searchText:null,selectedItem:null});$mdTheming(element);}}
MdAutocomplete.$inject=["$mdTheming","$mdUtil"];})();(function(){"use strict";angular.module('material.components.autocomplete').controller('MdHighlightCtrl',MdHighlightCtrl);function MdHighlightCtrl($scope,$element,$interpolate){this.init=init;return init();function init(term){var unsafeText=$interpolate($element.html())($scope),text=angular.element('<div>').text(unsafeText).html(),flags=$element.attr('md-highlight-flags')||'',watcher=$scope.$watch(term,function(term){var regex=getRegExp(term,flags),html=text.replace(regex,'<span class="highlight">$&</span>');$element.html(html);});$element.on('$destroy',function(){watcher();});}
function sanitize(term){if(!term)return term;return term.replace(/[\\\^\$\*\+\?\.\(\)\|\{\}\[\]]/g,'\\$&');}
function getRegExp(text,flags){var str='';if(flags.indexOf('^')>=1)str+='^';str+=text;if(flags.indexOf('$')>=1)str+='$';return new RegExp(sanitize(str),flags.replace(/[\$\^]/g,''));}}
MdHighlightCtrl.$inject=["$scope","$element","$interpolate"];})();(function(){"use strict";angular.module('material.components.autocomplete').directive('mdHighlightText',MdHighlight);function MdHighlight(){return{terminal:true,scope:false,controller:'MdHighlightCtrl',link:function(scope,element,attr,ctrl){ctrl.init(attr.mdHighlightText);}};}})();(function(){"use strict";angular.module('material.components.autocomplete').directive('mdAutocompleteListItem',MdAutocompleteListItem);function MdAutocompleteListItem($compile,$mdUtil){return{terminal:true,link:postLink,scope:false};function postLink(scope,element,attr){var ctrl=scope.$parent.$mdAutocompleteCtrl,newScope=ctrl.parent.$new(false,ctrl.parent),itemName=ctrl.scope.$eval(attr.mdAutocompleteListItem);newScope[itemName]=scope.item;$compile(element.contents())(newScope);element.attr({role:'option',id:'item_'+$mdUtil.nextUid()});}}
MdAutocompleteListItem.$inject=["$compile","$mdUtil"];})();(function(){"use strict";angular.module('material.components.autocomplete').directive('mdAutocompleteParentScope',MdAutocompleteParentScope);function MdAutocompleteParentScope($compile,$mdUtil){return{restrict:'A',terminal:true,link:postLink,scope:false};function postLink(scope,element,attr){var ctrl=scope.$parent.$mdAutocompleteCtrl;$compile(element.contents())(ctrl.parent);if(attr.hasOwnProperty('mdAutocompleteReplace')){element.after(element.contents());element.remove();}}}
MdAutocompleteParentScope.$inject=["$compile","$mdUtil"];})();(function(){"use strict";angular.module('material.components.chips').directive('mdChip',MdChip);var DELETE_HINT_TEMPLATE='\
    <span ng-if="!$mdChipsCtrl.readonly" class="md-visually-hidden">\
      {{$mdChipsCtrl.deleteHint}}\
    </span>';function MdChip($mdTheming){return{restrict:'E',require:'^?mdChips',compile:compile};function compile(element,attr){element.append(DELETE_HINT_TEMPLATE);return function postLink(scope,element,attr,ctrl){element.addClass('md-chip');$mdTheming(element);if(ctrl)angular.element(element[0].querySelector('.md-chip-content')).on('blur',function(){ctrl.selectedChip=-1;});};}}
MdChip.$inject=["$mdTheming"];})();(function(){"use strict";angular.module('material.components.chips').directive('mdChipRemove',MdChipRemove);function MdChipRemove($timeout){return{restrict:'A',require:'^mdChips',scope:false,link:postLink};function postLink(scope,element,attr,ctrl){element.on('click',function(event){scope.$apply(function(){ctrl.removeChip(scope.$$replacedScope.$index);});});$timeout(function(){element.attr({tabindex:-1,ariaHidden:true});element.find('button').attr('tabindex','-1');});}}
MdChipRemove.$inject=["$timeout"];})();(function(){"use strict";angular.module('material.components.chips').directive('mdChipTransclude',MdChipTransclude);function MdChipTransclude($compile,$mdUtil){return{restrict:'EA',terminal:true,link:link,scope:false};function link(scope,element,attr){var ctrl=scope.$parent.$mdChipsCtrl,newScope=ctrl.parent.$new(false,ctrl.parent);newScope.$$replacedScope=scope;newScope.$chip=scope.$chip;newScope.$mdChipsCtrl=ctrl;element.html(ctrl.$scope.$eval(attr.mdChipTransclude));$compile(element.contents())(newScope);}}
MdChipTransclude.$inject=["$compile","$mdUtil"];})();(function(){"use strict";angular.module('material.components.chips').controller('MdChipsCtrl',MdChipsCtrl);function MdChipsCtrl($scope,$mdConstant,$log,$element,$timeout){this.$timeout=$timeout;this.$mdConstant=$mdConstant;this.$scope=$scope;this.parent=$scope.$parent;this.$log=$log;this.$element=$element;this.ngModelCtrl=null;this.userInputNgModelCtrl=null;this.userInputElement=null;this.items=[];this.selectedChip=-1;this.deleteHint='Press delete to remove this chip.';this.deleteButtonLabel='Remove';this.chipBuffer='';this.useMdOnAppend=false;}
MdChipsCtrl.$inject=["$scope","$mdConstant","$log","$element","$timeout"];MdChipsCtrl.prototype.inputKeydown=function(event){var chipBuffer=this.getChipBuffer();switch(event.keyCode){case this.$mdConstant.KEY_CODE.ENTER:if(this.$scope.requireMatch||!chipBuffer)break;event.preventDefault();this.appendChip(chipBuffer);this.resetChipBuffer();break;case this.$mdConstant.KEY_CODE.BACKSPACE:if(chipBuffer)break;event.stopPropagation();if(this.items.length)this.selectAndFocusChipSafe(this.items.length-1);break;}};MdChipsCtrl.prototype.chipKeydown=function(event){if(this.getChipBuffer())return;switch(event.keyCode){case this.$mdConstant.KEY_CODE.BACKSPACE:case this.$mdConstant.KEY_CODE.DELETE:if(this.selectedChip<0)return;event.preventDefault();this.removeAndSelectAdjacentChip(this.selectedChip);break;case this.$mdConstant.KEY_CODE.LEFT_ARROW:event.preventDefault();if(this.selectedChip<0)this.selectedChip=this.items.length;if(this.items.length)this.selectAndFocusChipSafe(this.selectedChip-1);break;case this.$mdConstant.KEY_CODE.RIGHT_ARROW:event.preventDefault();this.selectAndFocusChipSafe(this.selectedChip+1);break;case this.$mdConstant.KEY_CODE.ESCAPE:case this.$mdConstant.KEY_CODE.TAB:if(this.selectedChip<0)return;event.preventDefault();this.onFocus();break;}};MdChipsCtrl.prototype.getPlaceholder=function(){var useSecondary=(this.items.length&&(this.secondaryPlaceholder==''||this.secondaryPlaceholder));return useSecondary?this.placeholder:this.secondaryPlaceholder;};MdChipsCtrl.prototype.removeAndSelectAdjacentChip=function(index){var selIndex=this.getAdjacentChipIndex(index);this.removeChip(index);this.$timeout(angular.bind(this,function(){this.selectAndFocusChipSafe(selIndex);}));};MdChipsCtrl.prototype.resetSelectedChip=function(){this.selectedChip=-1;};MdChipsCtrl.prototype.getAdjacentChipIndex=function(index){var len=this.items.length-1;return(len==0)?-1:(index==len)?index-1:index;};MdChipsCtrl.prototype.appendChip=function(newChip){if(this.items.indexOf(newChip)+1)return;if(this.useMdOnAppend&&this.mdOnAppend){newChip=this.mdOnAppend({'$chip':newChip});}
this.items.push(newChip);};MdChipsCtrl.prototype.useMdOnAppendExpression=function(){this.useMdOnAppend=true;};MdChipsCtrl.prototype.getChipBuffer=function(){return!this.userInputElement?this.chipBuffer:this.userInputNgModelCtrl?this.userInputNgModelCtrl.$viewValue:this.userInputElement[0].value;};MdChipsCtrl.prototype.resetChipBuffer=function(){if(this.userInputElement){if(this.userInputNgModelCtrl){this.userInputNgModelCtrl.$setViewValue('');this.userInputNgModelCtrl.$render();}else{this.userInputElement[0].value='';}}else{this.chipBuffer='';}};MdChipsCtrl.prototype.removeChip=function(index){this.items.splice(index,1);};MdChipsCtrl.prototype.removeChipAndFocusInput=function(index){this.removeChip(index);this.onFocus();};MdChipsCtrl.prototype.selectAndFocusChipSafe=function(index){if(!this.items.length){this.selectChip(-1);this.onFocus();return;}
if(index===this.items.length)return this.onFocus();index=Math.max(index,0);index=Math.min(index,this.items.length-1);this.selectChip(index);this.focusChip(index);};MdChipsCtrl.prototype.selectChip=function(index){if(index>=-1&&index<=this.items.length){this.selectedChip=index;}else{this.$log.warn('Selected Chip index out of bounds; ignoring.');}};MdChipsCtrl.prototype.selectAndFocusChip=function(index){this.selectChip(index);if(index!=-1){this.focusChip(index);}};MdChipsCtrl.prototype.focusChip=function(index){this.$element[0].querySelector('md-chip[index="'+index+'"] .md-chip-content').focus();};MdChipsCtrl.prototype.configureNgModel=function(ngModelCtrl){this.ngModelCtrl=ngModelCtrl;var self=this;ngModelCtrl.$render=function(){self.items=self.ngModelCtrl.$viewValue;};};MdChipsCtrl.prototype.onFocus=function(){var input=this.$element[0].querySelector('input');input&&input.focus();this.resetSelectedChip();};MdChipsCtrl.prototype.onInputFocus=function(){this.inputHasFocus=true;this.resetSelectedChip();};MdChipsCtrl.prototype.onInputBlur=function(){this.inputHasFocus=false;};MdChipsCtrl.prototype.configureUserInput=function(inputElement){this.userInputElement=inputElement;var ngModelCtrl=inputElement.controller('ngModel');if(ngModelCtrl!=this.ngModelCtrl){this.userInputNgModelCtrl=ngModelCtrl;}
var scope=this.$scope;var ctrl=this;inputElement.attr({tabindex:0}).on('keydown',function(event){scope.$apply(angular.bind(ctrl,function(){ctrl.inputKeydown(event);}))}).on('focus',angular.bind(ctrl,ctrl.onInputFocus)).on('blur',angular.bind(ctrl,ctrl.onInputBlur));};MdChipsCtrl.prototype.configureAutocomplete=function(ctrl){ctrl.registerSelectedItemWatcher(angular.bind(this,function(item){if(item){this.appendChip(item);this.resetChipBuffer();}}));this.$element.find('input').on('focus',angular.bind(this,this.onInputFocus)).on('blur',angular.bind(this,this.onInputBlur));};MdChipsCtrl.prototype.hasFocus=function(){return this.inputHasFocus||this.selectedChip>=0;};})();(function(){"use strict";angular.module('material.components.chips').directive('mdChips',MdChips);var MD_CHIPS_TEMPLATE='\
      <md-chips-wrap\
          ng-if="!$mdChipsCtrl.readonly || $mdChipsCtrl.items.length > 0"\
          ng-keydown="$mdChipsCtrl.chipKeydown($event)"\
          ng-class="{ \'md-focused\': $mdChipsCtrl.hasFocus() }"\
          class="md-chips">\
        <md-chip ng-repeat="$chip in $mdChipsCtrl.items"\
            index="{{$index}}"\
            ng-class="{\'md-focused\': $mdChipsCtrl.selectedChip == $index}">\
          <div class="md-chip-content"\
              tabindex="-1"\
              aria-hidden="true"\
              ng-focus="!$mdChipsCtrl.readonly && $mdChipsCtrl.selectChip($index)"\
              md-chip-transclude="$mdChipsCtrl.chipContentsTemplate"></div>\
          <div class="md-chip-remove-container"\
              md-chip-transclude="$mdChipsCtrl.chipRemoveTemplate"></div>\
        </md-chip>\
        <div ng-if="!$mdChipsCtrl.readonly && $mdChipsCtrl.ngModelCtrl"\
            class="md-chip-input-container"\
            md-chip-transclude="$mdChipsCtrl.chipInputTemplate"></div>\
        </div>\
      </md-chips-wrap>';var CHIP_INPUT_TEMPLATE='\
        <input\
            tabindex="0"\
            placeholder="{{$mdChipsCtrl.getPlaceholder()}}"\
            aria-label="{{$mdChipsCtrl.getPlaceholder()}}"\
            ng-model="$mdChipsCtrl.chipBuffer"\
            ng-focus="$mdChipsCtrl.onInputFocus()"\
            ng-blur="$mdChipsCtrl.onInputBlur()"\
            ng-keydown="$mdChipsCtrl.inputKeydown($event)">';var CHIP_DEFAULT_TEMPLATE='\
      <span>{{$chip}}</span>';var CHIP_REMOVE_TEMPLATE='\
      <button\
          class="md-chip-remove"\
          ng-if="!$mdChipsCtrl.readonly"\
          ng-click="$mdChipsCtrl.removeChipAndFocusInput($$replacedScope.$index)"\
          type="button"\
          aria-hidden="true"\
          tabindex="-1">\
        <md-icon md-svg-icon="md-close"></md-icon>\
        <span class="md-visually-hidden">\
          {{$mdChipsCtrl.deleteButtonLabel}}\
        </span>\
      </button>';function MdChips($mdTheming,$mdUtil,$compile,$log,$timeout){return{template:function(element,attrs){var content=attrs['$mdUserTemplate']=element.clone();return MD_CHIPS_TEMPLATE;},require:['mdChips'],restrict:'E',controller:'MdChipsCtrl',controllerAs:'$mdChipsCtrl',bindToController:true,compile:compile,scope:{readonly:'=readonly',placeholder:'@',secondaryPlaceholder:'@',mdOnAppend:'&',deleteHint:'@',deleteButtonLabel:'@',requireMatch:'=?mdRequireMatch'}};function compile(element,attr){var userTemplate=attr['$mdUserTemplate'];attr['$mdUserTemplate']=null;var chipRemoveTemplate=getTemplateByQuery('md-chips>*[md-chip-remove]')||CHIP_REMOVE_TEMPLATE,chipContentsTemplate=getTemplateByQuery('md-chips>md-chip-template')||CHIP_DEFAULT_TEMPLATE,chipInputTemplate=getTemplateByQuery('md-chips>md-autocomplete')||getTemplateByQuery('md-chips>input')||CHIP_INPUT_TEMPLATE,staticChips=userTemplate.find('md-chip');if(userTemplate[0].querySelector('md-chip-template>*[md-chip-remove]')){$log.warn('invalid placement of md-chip-remove within md-chip-template.');}
function getTemplateByQuery(query){if(!attr.ngModel)return;var element=userTemplate[0].querySelector(query);return element&&element.outerHTML;}
return function postLink(scope,element,attrs,controllers){$mdUtil.initOptionalProperties(scope,attr);$mdTheming(element);var mdChipsCtrl=controllers[0];mdChipsCtrl.chipContentsTemplate=chipContentsTemplate;mdChipsCtrl.chipRemoveTemplate=chipRemoveTemplate;mdChipsCtrl.chipInputTemplate=chipInputTemplate;element.attr({ariaHidden:true,tabindex:-1}).on('focus',function(){mdChipsCtrl.onFocus();});if(attr.ngModel){mdChipsCtrl.configureNgModel(element.controller('ngModel'));if(attrs.mdOnAppend)mdChipsCtrl.useMdOnAppendExpression();if(chipInputTemplate!=CHIP_INPUT_TEMPLATE){$timeout(function(){if(chipInputTemplate.indexOf('<md-autocomplete')===0)
mdChipsCtrl.configureAutocomplete(element.find('md-autocomplete').controller('mdAutocomplete'));mdChipsCtrl.configureUserInput(element.find('input'));});}}
if(staticChips.length>0){var compiledStaticChips=$compile(staticChips)(scope.$parent);$timeout(function(){element.find('md-chips-wrap').prepend(compiledStaticChips);});}};}}
MdChips.$inject=["$mdTheming","$mdUtil","$compile","$log","$timeout"];})();(function(){"use strict";angular.module('material.components.chips').controller('MdContactChipsCtrl',MdContactChipsCtrl);function MdContactChipsCtrl(){this.selectedItem=null;this.searchText='';}
MdContactChipsCtrl.prototype.queryContact=function(searchText){var results=this.contactQuery({'$query':searchText});return this.filterSelected?results.filter(angular.bind(this,this.filterSelectedContacts)):results;};MdContactChipsCtrl.prototype.filterSelectedContacts=function(contact){return this.contacts.indexOf(contact)==-1;};})();(function(){"use strict";angular.module('material.components.chips').directive('mdContactChips',MdContactChips);var MD_CONTACT_CHIPS_TEMPLATE='\
      <md-chips class="md-contact-chips"\
          ng-model="$mdContactChipsCtrl.contacts"\
          md-require-match="$mdContactChipsCtrl.requireMatch"\
          md-autocomplete-snap>\
          <md-autocomplete\
              md-menu-class="md-contact-chips-suggestions"\
              md-selected-item="$mdContactChipsCtrl.selectedItem"\
              md-search-text="$mdContactChipsCtrl.searchText"\
              md-items="item in $mdContactChipsCtrl.queryContact($mdContactChipsCtrl.searchText)"\
              md-item-text="$mdContactChipsCtrl.mdContactName"\
              md-no-cache="true"\
              md-autoselect\
              placeholder="{{$mdContactChipsCtrl.contacts.length == 0 ?\
                  $mdContactChipsCtrl.placeholder : $mdContactChipsCtrl.secondaryPlaceholder}}">\
            <div class="md-contact-suggestion">\
              <img \
                  ng-src="{{item[$mdContactChipsCtrl.contactImage]}}"\
                  alt="{{item[$mdContactChipsCtrl.contactName]}}" />\
              <span class="md-contact-name" md-highlight-text="$mdContactChipsCtrl.searchText">\
                {{item[$mdContactChipsCtrl.contactName]}}\
              </span>\
              <span class="md-contact-email" >{{item[$mdContactChipsCtrl.contactEmail]}}</span>\
            </div>\
          </md-autocomplete>\
          <md-chip-template>\
            <div class="md-contact-avatar">\
              <img \
                  ng-src="{{$chip[$mdContactChipsCtrl.contactImage]}}"\
                  alt="{{$chip[$mdContactChipsCtrl.contactName]}}" />\
            </div>\
            <div class="md-contact-name">\
              {{$chip[$mdContactChipsCtrl.contactName]}}\
            </div>\
          </md-chip-template>\
      </md-chips>';function MdContactChips($mdTheming,$mdUtil){return{template:function(element,attrs){return MD_CONTACT_CHIPS_TEMPLATE;},restrict:'E',controller:'MdContactChipsCtrl',controllerAs:'$mdContactChipsCtrl',bindToController:true,compile:compile,scope:{contactQuery:'&mdContacts',placeholder:'@',secondaryPlaceholder:'@',contactName:'@mdContactName',contactImage:'@mdContactImage',contactEmail:'@mdContactEmail',contacts:'=ngModel',requireMatch:'=?mdRequireMatch'}};function compile(element,attr){return function postLink(scope,element,attrs,controllers){$mdUtil.initOptionalProperties(scope,attr);$mdTheming(element);element.attr('tabindex','-1');};}}
MdContactChips.$inject=["$mdTheming","$mdUtil"];})();(function(){"use strict";angular.module('material.components.tabs').directive('mdTab',MdTab);function MdTab(){return{require:'^?mdTabs',terminal:true,template:function(element,attr){var label=getLabel(),body=getTemplate();return''+'<md-tab-label>'+label+'</md-tab-label>'+'<md-tab-body>'+body+'</md-tab-body>';function getLabel(){return getLabelElement()||getLabelAttribute()||getElementContents();function getLabelAttribute(){return attr.label;}
function getLabelElement(){var label=element.find('md-tab-label');if(label.length)return label.remove().html();}
function getElementContents(){var html=element.html();element.empty();return html;}}
function getTemplate(){var content=element.find('md-tab-body'),template=content.length?content.html():attr.label?element.html():'';if(content.length)content.remove();else if(attr.label)element.empty();return template;}},scope:{active:'=?mdActive',disabled:'=?ngDisabled',select:'&?mdOnSelect',deselect:'&?mdOnDeselect'},link:postLink};function postLink(scope,element,attr,ctrl){if(!ctrl)return;var tabs=element.parent()[0].getElementsByTagName('md-tab'),index=Array.prototype.indexOf.call(tabs,element[0]),body=element.find('md-tab-body').remove(),label=element.find('md-tab-label').remove(),data=ctrl.insertTab({scope:scope,parent:scope.$parent,index:index,element:element,template:body.html(),label:label.html()},index);scope.select=scope.select||angular.noop;scope.deselect=scope.deselect||angular.noop;scope.$watch('active',function(active){if(active)ctrl.select(data.getIndex());});scope.$watch('disabled',function(){ctrl.refreshIndex();});scope.$watch(function(){return Array.prototype.indexOf.call(tabs,element[0]);},function(newIndex){data.index=newIndex;ctrl.updateTabOrder();});scope.$on('$destroy',function(){ctrl.removeTab(data);});}}})();(function(){"use strict";angular.module('material.components.tabs').directive('mdTabItem',MdTabItem);function MdTabItem(){return{require:'^?mdTabs',link:function link(scope,element,attr,ctrl){if(!ctrl)return;ctrl.attachRipple(scope,element);}};}})();(function(){"use strict";angular.module('material.components.tabs').directive('mdTabLabel',MdTabLabel);function MdTabLabel(){return{terminal:true};}})();(function(){"use strict";angular.module('material.components.tabs').directive('mdTabScroll',MdTabScroll);function MdTabScroll($parse){return{restrict:'A',compile:function($element,attr){var fn=$parse(attr.mdTabScroll,null,true);return function ngEventHandler(scope,element){element.on('mousewheel',function(event){scope.$apply(function(){fn(scope,{$event:event});});});};}}}
MdTabScroll.$inject=["$parse"];})();(function(){"use strict";angular.module('material.components.tabs').controller('MdTabsController',MdTabsController);function MdTabsController($scope,$element,$window,$timeout,$mdConstant,$mdTabInkRipple,$mdUtil,$animate){var ctrl=this,locked=false,elements=getElements(),queue=[],destroyed=false;ctrl.scope=$scope;ctrl.parent=$scope.$parent;ctrl.tabs=[];ctrl.lastSelectedIndex=null;ctrl.focusIndex=$scope.selectedIndex||0;ctrl.offsetLeft=0;ctrl.hasContent=false;ctrl.hasFocus=false;ctrl.lastClick=true;ctrl.redirectFocus=redirectFocus;ctrl.attachRipple=attachRipple;ctrl.shouldStretchTabs=shouldStretchTabs;ctrl.shouldPaginate=shouldPaginate;ctrl.shouldCenterTabs=shouldCenterTabs;ctrl.insertTab=insertTab;ctrl.removeTab=removeTab;ctrl.select=select;ctrl.scroll=scroll;ctrl.nextPage=nextPage;ctrl.previousPage=previousPage;ctrl.keydown=keydown;ctrl.canPageForward=canPageForward;ctrl.canPageBack=canPageBack;ctrl.refreshIndex=refreshIndex;ctrl.incrementSelectedIndex=incrementSelectedIndex;ctrl.updateInkBarStyles=$mdUtil.debounce(updateInkBarStyles,100);ctrl.updateTabOrder=$mdUtil.debounce(updateTabOrder,100);init();function init(){$scope.$watch('selectedIndex',handleSelectedIndexChange);$scope.$watch('$mdTabsCtrl.focusIndex',handleFocusIndexChange);$scope.$watch('$mdTabsCtrl.offsetLeft',handleOffsetChange);$scope.$watch('$mdTabsCtrl.hasContent',handleHasContent);angular.element($window).on('resize',handleWindowResize);angular.element(elements.paging).on('DOMSubtreeModified',ctrl.updateInkBarStyles);$timeout(updateHeightFromContent,0,false);$timeout(adjustOffset);$scope.$on('$destroy',cleanup);}
function cleanup(){destroyed=true;angular.element($window).off('resize',handleWindowResize);angular.element(elements.paging).off('DOMSubtreeModified',ctrl.updateInkBarStyles);}
function handleHasContent(hasContent){$element[hasContent?'removeClass':'addClass']('md-no-tab-content');}
function handleOffsetChange(left){var newValue=shouldCenterTabs()?'':'-'+left+'px';angular.element(elements.paging).css('transform','translate3d('+newValue+', 0, 0)');$scope.$broadcast('$mdTabsPaginationChanged');}
function handleFocusIndexChange(newIndex,oldIndex){if(newIndex===oldIndex)return;if(!elements.tabs[newIndex])return;adjustOffset();redirectFocus();}
function handleSelectedIndexChange(newValue,oldValue){if(newValue===oldValue)return;$scope.selectedIndex=getNearestSafeIndex(newValue);ctrl.lastSelectedIndex=oldValue;ctrl.updateInkBarStyles();updateHeightFromContent();$scope.$broadcast('$mdTabsChanged');ctrl.tabs[oldValue]&&ctrl.tabs[oldValue].scope.deselect();ctrl.tabs[newValue]&&ctrl.tabs[newValue].scope.select();}
function handleResizeWhenVisible(){if(handleResizeWhenVisible.watcher)return;handleResizeWhenVisible.watcher=$scope.$watch(function(){$timeout(function(){if(!handleResizeWhenVisible.watcher)return;if($element.prop('offsetParent')){handleResizeWhenVisible.watcher();handleResizeWhenVisible.watcher=null;handleWindowResize();}},0,false);});}
function keydown(event){switch(event.keyCode){case $mdConstant.KEY_CODE.LEFT_ARROW:event.preventDefault();incrementSelectedIndex(-1,true);break;case $mdConstant.KEY_CODE.RIGHT_ARROW:event.preventDefault();incrementSelectedIndex(1,true);break;case $mdConstant.KEY_CODE.SPACE:case $mdConstant.KEY_CODE.ENTER:event.preventDefault();if(!locked)$scope.selectedIndex=ctrl.focusIndex;break;}
ctrl.lastClick=false;}
function select(index){if(!locked)ctrl.focusIndex=$scope.selectedIndex=index;ctrl.lastClick=true;ctrl.tabs[index].element.triggerHandler('click');}
function scroll(event){if(!shouldPaginate())return;event.preventDefault();ctrl.offsetLeft=fixOffset(ctrl.offsetLeft-event.wheelDelta);}
function nextPage(){var viewportWidth=elements.canvas.clientWidth,totalWidth=viewportWidth+ctrl.offsetLeft,i,tab;for(i=0;i<elements.tabs.length;i++){tab=elements.tabs[i];if(tab.offsetLeft+tab.offsetWidth>totalWidth)break;}
ctrl.offsetLeft=fixOffset(tab.offsetLeft);}
function previousPage(){var i,tab;for(i=0;i<elements.tabs.length;i++){tab=elements.tabs[i];if(tab.offsetLeft+tab.offsetWidth>=ctrl.offsetLeft)break;}
ctrl.offsetLeft=fixOffset(tab.offsetLeft+tab.offsetWidth-elements.canvas.clientWidth);}
function handleWindowResize(){$scope.$apply(function(){ctrl.lastSelectedIndex=$scope.selectedIndex;ctrl.offsetLeft=fixOffset(ctrl.offsetLeft);$timeout(ctrl.updateInkBarStyles,0,false);});}
function removeTab(tabData){var selectedIndex=$scope.selectedIndex,tab=ctrl.tabs.splice(tabData.getIndex(),1)[0];refreshIndex();if($scope.selectedIndex===selectedIndex&&!destroyed){tab.scope.deselect();ctrl.tabs[$scope.selectedIndex]&&ctrl.tabs[$scope.selectedIndex].scope.select();}
$timeout(function(){ctrl.offsetLeft=fixOffset(ctrl.offsetLeft);});}
function insertTab(tabData,index){var proto={getIndex:function(){return ctrl.tabs.indexOf(tab);},isActive:function(){return this.getIndex()===$scope.selectedIndex;},isLeft:function(){return this.getIndex()<$scope.selectedIndex;},isRight:function(){return this.getIndex()>$scope.selectedIndex;},shouldRender:function(){return!$scope.noDisconnect||this.isActive();},hasFocus:function(){return!ctrl.lastClick&&ctrl.hasFocus&&this.getIndex()===ctrl.focusIndex;},id:$mdUtil.nextUid()},tab=angular.extend(proto,tabData);if(angular.isDefined(index)){ctrl.tabs.splice(index,0,tab);}else{ctrl.tabs.push(tab);}
processQueue();updateHasContent();return tab;}
function getElements(){var elements={};elements.wrapper=$element[0].getElementsByTagName('md-tabs-wrapper')[0];elements.canvas=elements.wrapper.getElementsByTagName('md-tabs-canvas')[0];elements.paging=elements.canvas.getElementsByTagName('md-pagination-wrapper')[0];elements.tabs=elements.paging.getElementsByTagName('md-tab-item');elements.dummies=elements.canvas.getElementsByTagName('md-dummy-tab');elements.inkBar=elements.paging.getElementsByTagName('md-ink-bar')[0];elements.contentsWrapper=$element[0].getElementsByTagName('md-tabs-content-wrapper')[0];elements.contents=elements.contentsWrapper.getElementsByTagName('md-tab-content');return elements;}
function canPageBack(){return ctrl.offsetLeft>0;}
function canPageForward(){var lastTab=elements.tabs[elements.tabs.length-1];return lastTab&&lastTab.offsetLeft+lastTab.offsetWidth>elements.canvas.clientWidth+ctrl.offsetLeft;}
function shouldStretchTabs(){switch($scope.stretchTabs){case'always':return true;case'never':return false;default:return!shouldPaginate()&&$window.matchMedia('(max-width: 600px)').matches;}}
function shouldCenterTabs(){return $scope.centerTabs&&!shouldPaginate();}
function shouldPaginate(){if($scope.noPagination)return false;var canvasWidth=$element.prop('clientWidth');angular.forEach(elements.tabs,function(tab){canvasWidth-=tab.offsetWidth;});return canvasWidth<0;}
function getNearestSafeIndex(newIndex){var maxOffset=Math.max(ctrl.tabs.length-newIndex,newIndex),i,tab;for(i=0;i<=maxOffset;i++){tab=ctrl.tabs[newIndex+i];if(tab&&(tab.scope.disabled!==true))return tab.getIndex();tab=ctrl.tabs[newIndex-i];if(tab&&(tab.scope.disabled!==true))return tab.getIndex();}
return newIndex;}
function updateTabOrder(){var selectedItem=ctrl.tabs[$scope.selectedIndex],focusItem=ctrl.tabs[ctrl.focusIndex];ctrl.tabs=ctrl.tabs.sort(function(a,b){return a.index-b.index;});$scope.selectedIndex=ctrl.tabs.indexOf(selectedItem);ctrl.focusIndex=ctrl.tabs.indexOf(focusItem);}
function incrementSelectedIndex(inc,focus){var newIndex,index=focus?ctrl.focusIndex:$scope.selectedIndex;for(newIndex=index+inc;ctrl.tabs[newIndex]&&ctrl.tabs[newIndex].scope.disabled;newIndex+=inc){}
if(ctrl.tabs[newIndex]){if(focus)ctrl.focusIndex=newIndex;else $scope.selectedIndex=newIndex;}}
function redirectFocus(){elements.dummies[ctrl.focusIndex].focus();}
function adjustOffset(){if(shouldCenterTabs())return;var tab=elements.tabs[ctrl.focusIndex],left=tab.offsetLeft,right=tab.offsetWidth+left;ctrl.offsetLeft=Math.max(ctrl.offsetLeft,fixOffset(right-elements.canvas.clientWidth));ctrl.offsetLeft=Math.min(ctrl.offsetLeft,fixOffset(left));}
function processQueue(){queue.forEach(function(func){$timeout(func);});queue=[];}
function updateHasContent(){var hasContent=false;angular.forEach(ctrl.tabs,function(tab){if(tab.template)hasContent=true;});ctrl.hasContent=hasContent;}
function refreshIndex(){$scope.selectedIndex=getNearestSafeIndex($scope.selectedIndex);ctrl.focusIndex=getNearestSafeIndex(ctrl.focusIndex);}
function updateHeightFromContent(){if(!$scope.dynamicHeight)return $element.css('height','');if(!ctrl.tabs.length)return queue.push(updateHeightFromContent);var tabContent=elements.contents[$scope.selectedIndex],contentHeight=tabContent?tabContent.offsetHeight:0,tabsHeight=elements.wrapper.offsetHeight,newHeight=contentHeight+tabsHeight,currentHeight=$element.prop('clientHeight');if(currentHeight===newHeight)return;locked=true;$animate.animate($element,{height:currentHeight+'px'},{height:newHeight+'px'}).then(function(){$element.css('height','');locked=false;});}
function updateInkBarStyles(){if(!elements.tabs[$scope.selectedIndex])return;if(!ctrl.tabs.length)return queue.push(ctrl.updateInkBarStyles);if(!$element.prop('offsetParent'))return handleResizeWhenVisible();var index=$scope.selectedIndex,totalWidth=elements.paging.offsetWidth,tab=elements.tabs[index],left=tab.offsetLeft,right=totalWidth-left-tab.offsetWidth;updateInkBarClassName();angular.element(elements.inkBar).css({left:left+'px',right:right+'px'});}
function updateInkBarClassName(){var newIndex=$scope.selectedIndex,oldIndex=ctrl.lastSelectedIndex,ink=angular.element(elements.inkBar);ink.removeClass('md-left md-right');if(!angular.isNumber(oldIndex))return;if(newIndex<oldIndex){ink.addClass('md-left');}else if(newIndex>oldIndex){ink.addClass('md-right');}}
function fixOffset(value){if(!elements.tabs.length||!shouldPaginate())return 0;var lastTab=elements.tabs[elements.tabs.length-1],totalWidth=lastTab.offsetLeft+lastTab.offsetWidth;value=Math.max(0,value);value=Math.min(totalWidth-elements.canvas.clientWidth,value);return value;}
function attachRipple(scope,element){var options={colorElement:angular.element(elements.inkBar)};$mdTabInkRipple.attach(scope,element,options);}}
MdTabsController.$inject=["$scope","$element","$window","$timeout","$mdConstant","$mdTabInkRipple","$mdUtil","$animate"];})();(function(){"use strict";angular.module('material.components.tabs').directive('mdTabs',MdTabs);function MdTabs($mdTheming,$mdUtil,$compile){return{scope:{noPagination:'=?mdNoPagination',dynamicHeight:'=?mdDynamicHeight',centerTabs:'=?mdCenterTabs',selectedIndex:'=?mdSelected',stretchTabs:'@?mdStretchTabs',swipeContent:'=?mdSwipeContent',noDisconnect:'=?mdNoDisconnect'},template:function(element,attr){attr["$mdTabsTemplate"]=element.html();return'\
        <md-tabs-wrapper ng-class="{ \'md-stretch-tabs\': $mdTabsCtrl.shouldStretchTabs() }">\
          <md-tab-data></md-tab-data>\
          <md-prev-button\
              tabindex="-1"\
              role="button"\
              aria-label="Previous Page"\
              aria-disabled="{{!$mdTabsCtrl.canPageBack()}}"\
              ng-class="{ \'md-disabled\': !$mdTabsCtrl.canPageBack() }"\
              ng-if="$mdTabsCtrl.shouldPaginate()"\
              ng-click="$mdTabsCtrl.previousPage()">\
            <md-icon md-svg-icon="md-tabs-arrow"></md-icon>\
          </md-prev-button>\
          <md-next-button\
              tabindex="-1"\
              role="button"\
              aria-label="Next Page"\
              aria-disabled="{{!$mdTabsCtrl.canPageForward()}}"\
              ng-class="{ \'md-disabled\': !$mdTabsCtrl.canPageForward() }"\
              ng-if="$mdTabsCtrl.shouldPaginate()"\
              ng-click="$mdTabsCtrl.nextPage()">\
            <md-icon md-svg-icon="md-tabs-arrow"></md-icon>\
          </md-next-button>\
          <md-tabs-canvas\
              tabindex="0"\
              aria-activedescendant="tab-item-{{$mdTabsCtrl.tabs[$mdTabsCtrl.focusIndex].id}}"\
              ng-focus="$mdTabsCtrl.redirectFocus()"\
              ng-class="{\
                  \'md-paginated\': $mdTabsCtrl.shouldPaginate(),\
                  \'md-center-tabs\': $mdTabsCtrl.shouldCenterTabs()\
              }"\
              ng-keydown="$mdTabsCtrl.keydown($event)"\
              role="tablist">\
            <md-pagination-wrapper\
                ng-class="{ \'md-center-tabs\': $mdTabsCtrl.shouldCenterTabs() }"\
                md-tab-scroll="$mdTabsCtrl.scroll($event)">\
              <md-tab-item\
                  tabindex="-1"\
                  class="md-tab"\
                  style="max-width: {{ tabWidth ? tabWidth + \'px\' : \'none\' }}"\
                  ng-repeat="tab in $mdTabsCtrl.tabs"\
                  role="tab"\
                  aria-controls="tab-content-{{tab.id}}"\
                  aria-selected="{{tab.isActive()}}"\
                  aria-disabled="{{tab.scope.disabled || \'false\'}}"\
                  ng-click="$mdTabsCtrl.select(tab.getIndex())"\
                  ng-class="{\
                      \'md-active\':    tab.isActive(),\
                      \'md-focused\':   tab.hasFocus(),\
                      \'md-disabled\':  tab.scope.disabled\
                  }"\
                  ng-disabled="tab.scope.disabled"\
                  md-swipe-left="$mdTabsCtrl.nextPage()"\
                  md-swipe-right="$mdTabsCtrl.previousPage()"\
                  md-template="tab.label"\
                  md-scope="tab.parent"></md-tab-item>\
              <md-ink-bar ng-hide="noInkBar"></md-ink-bar>\
            </md-pagination-wrapper>\
            <div class="md-visually-hidden md-dummy-wrapper">\
              <md-dummy-tab\
                  tabindex="-1"\
                  id="tab-item-{{tab.id}}"\
                  role="tab"\
                  aria-controls="tab-content-{{tab.id}}"\
                  aria-selected="{{tab.isActive()}}"\
                  aria-disabled="{{tab.scope.disabled || \'false\'}}"\
                  ng-focus="$mdTabsCtrl.hasFocus = true"\
                  ng-blur="$mdTabsCtrl.hasFocus = false"\
                  ng-repeat="tab in $mdTabsCtrl.tabs"\
                  md-template="tab.label"\
                  md-scope="tab.parent"></md-dummy-tab>\
            </div>\
          </md-tabs-canvas>\
        </md-tabs-wrapper>\
        <md-tabs-content-wrapper ng-show="$mdTabsCtrl.hasContent">\
          <md-tab-content\
              id="tab-content-{{tab.id}}"\
              role="tabpanel"\
              aria-labelledby="tab-item-{{tab.id}}"\
              md-swipe-left="swipeContent && $mdTabsCtrl.incrementSelectedIndex(1)"\
              md-swipe-right="swipeContent && $mdTabsCtrl.incrementSelectedIndex(-1)"\
              ng-if="$mdTabsCtrl.hasContent"\
              ng-repeat="(index, tab) in $mdTabsCtrl.tabs"\
              md-connected-if="tab.isActive()"\
              ng-class="{\
                \'md-no-transition\': $mdTabsCtrl.lastSelectedIndex == null,\
                \'md-active\':        tab.isActive(),\
                \'md-left\':          tab.isLeft(),\
                \'md-right\':         tab.isRight(),\
                \'md-no-scroll\':     dynamicHeight\
              }">\
            <div\
                md-template="tab.template"\
                md-scope="tab.parent"\
                ng-if="tab.shouldRender()"></div>\
          </md-tab-content>\
        </md-tabs-content-wrapper>\
      ';},controller:'MdTabsController',controllerAs:'$mdTabsCtrl',link:function(scope,element,attr){compileTabData(attr.$mdTabsTemplate);delete attr.$mdTabsTemplate;$mdUtil.initOptionalProperties(scope,attr);attr.$observe('mdNoBar',function(value){scope.noInkBar=angular.isDefined(value);});scope.selectedIndex=angular.isNumber(scope.selectedIndex)?scope.selectedIndex:0;$mdTheming(element);function compileTabData(template){var dataElement=element.find('md-tab-data');dataElement.html(template);$compile(dataElement.contents())(scope.$parent);}}};}
MdTabs.$inject=["$mdTheming","$mdUtil","$compile"];})();(function(){"use strict";angular.module('material.components.tabs').directive('mdTemplate',MdTemplate);function MdTemplate($compile,$mdUtil,$timeout){return{restrict:'A',link:link,scope:{template:'=mdTemplate',compileScope:'=mdScope',connected:'=?mdConnectedIf'},require:'^?mdTabs'};function link(scope,element,attr,ctrl){if(!ctrl)return;var compileScope=scope.compileScope.$new();element.html(scope.template);$compile(element.contents())(compileScope);return $timeout(handleScope);function handleScope(){scope.$watch('connected',function(value){value===false?disconnect():reconnect();});scope.$on('$destroy',reconnect);}
function disconnect(){if(ctrl.scope.noDisconnect)return;$mdUtil.disconnectScope(compileScope);}
function reconnect(){if(ctrl.scope.noDisconnect)return;$mdUtil.reconnectScope(compileScope);}}}
MdTemplate.$inject=["$compile","$mdUtil","$timeout"];})();(function(){angular.module("material.core").constant("$MD_THEME_CSS","/* mixin definition ; sets LTR and RTL within the same style call */md-autocomplete.md-THEME_NAME-theme {  background: '{{background-50}}'; }  md-autocomplete.md-THEME_NAME-theme[disabled] {    background: '{{background-100}}'; }  md-autocomplete.md-THEME_NAME-theme button md-icon path {    fill: '{{background-600}}'; }  md-autocomplete.md-THEME_NAME-theme button:after {    background: '{{background-600-0.3}}'; }.md-autocomplete-suggestions.md-THEME_NAME-theme {  background: '{{background-50}}'; }  .md-autocomplete-suggestions.md-THEME_NAME-theme li {    color: '{{background-900}}'; }    .md-autocomplete-suggestions.md-THEME_NAME-theme li .highlight {      color: '{{background-600}}'; }    .md-autocomplete-suggestions.md-THEME_NAME-theme li:hover, .md-autocomplete-suggestions.md-THEME_NAME-theme li.selected {      background: '{{background-200}}'; }md-backdrop.md-opaque.md-THEME_NAME-theme {  background-color: '{{foreground-4-0.5}}'; }md-bottom-sheet.md-THEME_NAME-theme {  background-color: '{{background-50}}';  border-top-color: '{{background-300}}'; }  md-bottom-sheet.md-THEME_NAME-theme.md-list md-list-item {    color: '{{foreground-1}}'; }  md-bottom-sheet.md-THEME_NAME-theme .md-subheader {    background-color: '{{background-50}}'; }  md-bottom-sheet.md-THEME_NAME-theme .md-subheader {    color: '{{foreground-1}}'; }a.md-button.md-THEME_NAME-theme, .md-button.md-THEME_NAME-theme {  border-radius: 3px; }  a.md-button.md-THEME_NAME-theme:not([disabled]):hover, .md-button.md-THEME_NAME-theme:not([disabled]):hover {    background-color: '{{background-500-0.2}}'; }  a.md-button.md-THEME_NAME-theme:not([disabled]).md-focused, .md-button.md-THEME_NAME-theme:not([disabled]).md-focused {    background-color: '{{background-500-0.2}}'; }  a.md-button.md-THEME_NAME-theme:not([disabled]).md-icon-button:hover, .md-button.md-THEME_NAME-theme:not([disabled]).md-icon-button:hover {    background-color: transparent; }  a.md-button.md-THEME_NAME-theme.md-fab, .md-button.md-THEME_NAME-theme.md-fab {    border-radius: 50%;    background-color: '{{accent-color}}';    color: '{{accent-contrast}}'; }    a.md-button.md-THEME_NAME-theme.md-fab md-icon, .md-button.md-THEME_NAME-theme.md-fab md-icon {      color: '{{accent-contrast}}'; }    a.md-button.md-THEME_NAME-theme.md-fab:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-fab:not([disabled]):hover {      background-color: '{{accent-color}}'; }    a.md-button.md-THEME_NAME-theme.md-fab:not([disabled]).md-focused, .md-button.md-THEME_NAME-theme.md-fab:not([disabled]).md-focused {      background-color: '{{accent-A700}}'; }  a.md-button.md-THEME_NAME-theme.md-icon-button, .md-button.md-THEME_NAME-theme.md-icon-button {    border-radius: 50%; }  a.md-button.md-THEME_NAME-theme.md-primary, .md-button.md-THEME_NAME-theme.md-primary {    color: '{{primary-color}}'; }    a.md-button.md-THEME_NAME-theme.md-primary.md-raised, a.md-button.md-THEME_NAME-theme.md-primary.md-fab, .md-button.md-THEME_NAME-theme.md-primary.md-raised, .md-button.md-THEME_NAME-theme.md-primary.md-fab {      color: '{{primary-contrast}}';      background-color: '{{primary-color}}'; }      a.md-button.md-THEME_NAME-theme.md-primary.md-raised:not([disabled]) md-icon, a.md-button.md-THEME_NAME-theme.md-primary.md-fab:not([disabled]) md-icon, .md-button.md-THEME_NAME-theme.md-primary.md-raised:not([disabled]) md-icon, .md-button.md-THEME_NAME-theme.md-primary.md-fab:not([disabled]) md-icon {        color: '{{primary-contrast}}'; }      a.md-button.md-THEME_NAME-theme.md-primary.md-raised:not([disabled]):hover, a.md-button.md-THEME_NAME-theme.md-primary.md-fab:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-primary.md-raised:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-primary.md-fab:not([disabled]):hover {        background-color: '{{primary-color}}'; }      a.md-button.md-THEME_NAME-theme.md-primary.md-raised:not([disabled]).md-focused, a.md-button.md-THEME_NAME-theme.md-primary.md-fab:not([disabled]).md-focused, .md-button.md-THEME_NAME-theme.md-primary.md-raised:not([disabled]).md-focused, .md-button.md-THEME_NAME-theme.md-primary.md-fab:not([disabled]).md-focused {        background-color: '{{primary-600}}'; }    a.md-button.md-THEME_NAME-theme.md-primary:not([disabled]) md-icon, .md-button.md-THEME_NAME-theme.md-primary:not([disabled]) md-icon {      color: '{{primary-color}}'; }  a.md-button.md-THEME_NAME-theme.md-fab, .md-button.md-THEME_NAME-theme.md-fab {    border-radius: 50%;    background-color: '{{accent-color}}';    color: '{{accent-contrast}}'; }    a.md-button.md-THEME_NAME-theme.md-fab:not([disabled]) .md-icon, .md-button.md-THEME_NAME-theme.md-fab:not([disabled]) .md-icon {      color: '{{accent-contrast}}'; }    a.md-button.md-THEME_NAME-theme.md-fab:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-fab:not([disabled]):hover {      background-color: '{{accent-color}}'; }    a.md-button.md-THEME_NAME-theme.md-fab:not([disabled]).md-focused, .md-button.md-THEME_NAME-theme.md-fab:not([disabled]).md-focused {      background-color: '{{accent-A700}}'; }  a.md-button.md-THEME_NAME-theme.md-raised, .md-button.md-THEME_NAME-theme.md-raised {    color: '{{background-contrast}}';    background-color: '{{background-50}}'; }    a.md-button.md-THEME_NAME-theme.md-raised:not([disabled]) .md-icon, .md-button.md-THEME_NAME-theme.md-raised:not([disabled]) .md-icon {      color: '{{background-contrast}}'; }    a.md-button.md-THEME_NAME-theme.md-raised:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-raised:not([disabled]):hover {      background-color: '{{background-50}}'; }    a.md-button.md-THEME_NAME-theme.md-raised:not([disabled]).md-focused, .md-button.md-THEME_NAME-theme.md-raised:not([disabled]).md-focused {      background-color: '{{background-200}}'; }  a.md-button.md-THEME_NAME-theme.md-warn, .md-button.md-THEME_NAME-theme.md-warn {    color: '{{warn-color}}'; }    a.md-button.md-THEME_NAME-theme.md-warn.md-raised, a.md-button.md-THEME_NAME-theme.md-warn.md-fab, .md-button.md-THEME_NAME-theme.md-warn.md-raised, .md-button.md-THEME_NAME-theme.md-warn.md-fab {      color: '{{warn-contrast}}';      background-color: '{{warn-color}}'; }      a.md-button.md-THEME_NAME-theme.md-warn.md-raised:not([disabled]) md-icon, a.md-button.md-THEME_NAME-theme.md-warn.md-fab:not([disabled]) md-icon, .md-button.md-THEME_NAME-theme.md-warn.md-raised:not([disabled]) md-icon, .md-button.md-THEME_NAME-theme.md-warn.md-fab:not([disabled]) md-icon {        color: '{{warn-contrast}}'; }      a.md-button.md-THEME_NAME-theme.md-warn.md-raised:not([disabled]):hover, a.md-button.md-THEME_NAME-theme.md-warn.md-fab:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-warn.md-raised:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-warn.md-fab:not([disabled]):hover {        background-color: '{{warn-color}}'; }      a.md-button.md-THEME_NAME-theme.md-warn.md-raised:not([disabled]).md-focused, a.md-button.md-THEME_NAME-theme.md-warn.md-fab:not([disabled]).md-focused, .md-button.md-THEME_NAME-theme.md-warn.md-raised:not([disabled]).md-focused, .md-button.md-THEME_NAME-theme.md-warn.md-fab:not([disabled]).md-focused {        background-color: '{{warn-700}}'; }    a.md-button.md-THEME_NAME-theme.md-warn:not([disabled]) md-icon, .md-button.md-THEME_NAME-theme.md-warn:not([disabled]) md-icon {      color: '{{warn-color}}'; }  a.md-button.md-THEME_NAME-theme.md-accent, .md-button.md-THEME_NAME-theme.md-accent {    color: '{{accent-color}}'; }    a.md-button.md-THEME_NAME-theme.md-accent.md-raised, a.md-button.md-THEME_NAME-theme.md-accent.md-fab, .md-button.md-THEME_NAME-theme.md-accent.md-raised, .md-button.md-THEME_NAME-theme.md-accent.md-fab {      color: '{{accent-contrast}}';      background-color: '{{accent-color}}'; }      a.md-button.md-THEME_NAME-theme.md-accent.md-raised:not([disabled]) md-icon, a.md-button.md-THEME_NAME-theme.md-accent.md-fab:not([disabled]) md-icon, .md-button.md-THEME_NAME-theme.md-accent.md-raised:not([disabled]) md-icon, .md-button.md-THEME_NAME-theme.md-accent.md-fab:not([disabled]) md-icon {        color: '{{accent-contrast}}'; }      a.md-button.md-THEME_NAME-theme.md-accent.md-raised:not([disabled]):hover, a.md-button.md-THEME_NAME-theme.md-accent.md-fab:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-accent.md-raised:not([disabled]):hover, .md-button.md-THEME_NAME-theme.md-accent.md-fab:not([disabled]):hover {        background-color: '{{accent-color}}'; }      a.md-button.md-THEME_NAME-theme.md-accent.md-raised:not([disabled]).md-focused, a.md-button.md-THEME_NAME-theme.md-accent.md-fab:not([disabled]).md-focused, .md-button.md-THEME_NAME-theme.md-accent.md-raised:not([disabled]).md-focused, .md-button.md-THEME_NAME-theme.md-accent.md-fab:not([disabled]).md-focused {        background-color: '{{accent-700}}'; }    a.md-button.md-THEME_NAME-theme.md-accent:not([disabled]) md-icon, .md-button.md-THEME_NAME-theme.md-accent:not([disabled]) md-icon {      color: '{{accent-color}}'; }  a.md-button.md-THEME_NAME-theme[disabled], a.md-button.md-THEME_NAME-theme.md-raised[disabled], a.md-button.md-THEME_NAME-theme.md-fab[disabled], a.md-button.md-THEME_NAME-theme.md-accent[disabled], a.md-button.md-THEME_NAME-theme.md-warn[disabled], .md-button.md-THEME_NAME-theme[disabled], .md-button.md-THEME_NAME-theme.md-raised[disabled], .md-button.md-THEME_NAME-theme.md-fab[disabled], .md-button.md-THEME_NAME-theme.md-accent[disabled], .md-button.md-THEME_NAME-theme.md-warn[disabled] {    color: '{{foreground-3}}';    cursor: not-allowed; }    a.md-button.md-THEME_NAME-theme[disabled] md-icon, a.md-button.md-THEME_NAME-theme.md-raised[disabled] md-icon, a.md-button.md-THEME_NAME-theme.md-fab[disabled] md-icon, a.md-button.md-THEME_NAME-theme.md-accent[disabled] md-icon, a.md-button.md-THEME_NAME-theme.md-warn[disabled] md-icon, .md-button.md-THEME_NAME-theme[disabled] md-icon, .md-button.md-THEME_NAME-theme.md-raised[disabled] md-icon, .md-button.md-THEME_NAME-theme.md-fab[disabled] md-icon, .md-button.md-THEME_NAME-theme.md-accent[disabled] md-icon, .md-button.md-THEME_NAME-theme.md-warn[disabled] md-icon {      color: '{{foreground-3}}'; }  a.md-button.md-THEME_NAME-theme.md-raised[disabled], a.md-button.md-THEME_NAME-theme.md-fab[disabled], .md-button.md-THEME_NAME-theme.md-raised[disabled], .md-button.md-THEME_NAME-theme.md-fab[disabled] {    background-color: '{{foreground-4}}'; }  a.md-button.md-THEME_NAME-theme[disabled], .md-button.md-THEME_NAME-theme[disabled] {    background-color: transparent; }md-card.md-THEME_NAME-theme {  background-color: '{{background-color}}';  border-radius: 2px; }  md-card.md-THEME_NAME-theme .md-card-image {    border-radius: 2px 2px 0 0; }md-checkbox.md-THEME_NAME-theme .md-ripple {  color: '{{accent-600}}'; }md-checkbox.md-THEME_NAME-theme.md-checked .md-ripple {  color: '{{background-600}}'; }md-checkbox.md-THEME_NAME-theme.md-checked.md-focused .md-container:before {  background-color: '{{accent-color-0.26}}'; }md-checkbox.md-THEME_NAME-theme .md-icon {  border-color: '{{foreground-2}}'; }md-checkbox.md-THEME_NAME-theme.md-checked .md-icon {  background-color: '{{accent-color-0.87}}'; }md-checkbox.md-THEME_NAME-theme.md-checked .md-icon:after {  border-color: '{{background-200}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-primary .md-ripple {  color: '{{primary-600}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked .md-ripple {  color: '{{background-600}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-primary .md-icon {  border-color: '{{foreground-2}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked .md-icon {  background-color: '{{primary-color-0.87}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked.md-focused .md-container:before {  background-color: '{{primary-color-0.26}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked .md-icon:after {  border-color: '{{background-200}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn .md-ripple {  color: '{{warn-600}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn .md-icon {  border-color: '{{foreground-2}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-icon {  background-color: '{{warn-color-0.87}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked.md-focused:not([disabled]) .md-container:before {  background-color: '{{warn-color-0.26}}'; }md-checkbox.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-icon:after {  border-color: '{{background-200}}'; }md-checkbox.md-THEME_NAME-theme[disabled] .md-icon {  border-color: '{{foreground-3}}'; }md-checkbox.md-THEME_NAME-theme[disabled].md-checked .md-icon {  background-color: '{{foreground-3}}'; }md-checkbox.md-THEME_NAME-theme[disabled] .md-label {  color: '{{foreground-3}}'; }md-chips.md-THEME_NAME-theme .md-chips {  box-shadow: 0 1px '{{background-300}}'; }  md-chips.md-THEME_NAME-theme .md-chips.md-focused {    box-shadow: 0 2px '{{primary-color}}'; }md-chips.md-THEME_NAME-theme .md-chip {  background: '{{background-300}}';  color: '{{background-800}}'; }  md-chips.md-THEME_NAME-theme .md-chip.md-focused {    background: '{{primary-color}}';    color: '{{primary-contrast}}'; }    md-chips.md-THEME_NAME-theme .md-chip.md-focused md-icon {      color: '{{primary-contrast}}'; }md-chips.md-THEME_NAME-theme md-chip-remove .md-button md-icon path {  fill: '{{background-500}}'; }.md-contact-suggestion span.md-contact-email {  color: '{{background-400}}'; }md-content.md-THEME_NAME-theme {  background-color: '{{background-color}}'; }md-dialog.md-THEME_NAME-theme {  border-radius: 4px;  background-color: '{{background-color}}'; }  md-dialog.md-THEME_NAME-theme.md-content-overflow .md-actions {    border-top-color: '{{foreground-4}}'; }md-divider.md-THEME_NAME-theme {  border-top-color: '{{foreground-4}}'; }md-icon.md-THEME_NAME-theme {  color: '{{foreground-2}}'; }  md-icon.md-THEME_NAME-theme.md-primary {    color: '{{primary-color}}'; }  md-icon.md-THEME_NAME-theme.md-accent {    color: '{{accent-color}}'; }  md-icon.md-THEME_NAME-theme.md-warn {    color: '{{warn-color}}'; }md-input-container.md-THEME_NAME-theme .md-input {  color: '{{foreground-1}}';  border-color: '{{foreground-4}}';  text-shadow: '{{foreground-shadow}}'; }  md-input-container.md-THEME_NAME-theme .md-input::-webkit-input-placeholder, md-input-container.md-THEME_NAME-theme .md-input::-moz-placeholder, md-input-container.md-THEME_NAME-theme .md-input:-moz-placeholder, md-input-container.md-THEME_NAME-theme .md-input:-ms-input-placeholder {    color: '{{foreground-3}}'; }md-input-container.md-THEME_NAME-theme > md-icon {  color: '{{foreground-1}}'; }md-input-container.md-THEME_NAME-theme label, md-input-container.md-THEME_NAME-theme .md-placeholder {  text-shadow: '{{foreground-shadow}}';  color: '{{foreground-3}}'; }md-input-container.md-THEME_NAME-theme ng-messages, md-input-container.md-THEME_NAME-theme [ng-message], md-input-container.md-THEME_NAME-theme [data-ng-message], md-input-container.md-THEME_NAME-theme [x-ng-message] {  color: '{{warn-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-has-value label {  color: '{{foreground-2}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused .md-input {  border-color: '{{primary-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused label {  color: '{{primary-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused md-icon {  color: '{{primary-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused.md-accent .md-input {  border-color: '{{accent-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused.md-accent label {  color: '{{accent-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused.md-warn .md-input {  border-color: '{{warn-500}}'; }md-input-container.md-THEME_NAME-theme:not(.md-input-invalid).md-input-focused.md-warn label {  color: '{{warn-500}}'; }md-input-container.md-THEME_NAME-theme.md-input-invalid .md-input {  border-color: '{{warn-500}}'; }md-input-container.md-THEME_NAME-theme.md-input-invalid.md-input-focused label {  color: '{{warn-500}}'; }md-input-container.md-THEME_NAME-theme.md-input-invalid ng-message, md-input-container.md-THEME_NAME-theme.md-input-invalid data-ng-message, md-input-container.md-THEME_NAME-theme.md-input-invalid x-ng-message, md-input-container.md-THEME_NAME-theme.md-input-invalid [ng-message], md-input-container.md-THEME_NAME-theme.md-input-invalid [data-ng-message], md-input-container.md-THEME_NAME-theme.md-input-invalid [x-ng-message], md-input-container.md-THEME_NAME-theme.md-input-invalid .md-char-counter {  color: '{{warn-500}}'; }md-input-container.md-THEME_NAME-theme .md-input[disabled], [disabled] md-input-container.md-THEME_NAME-theme .md-input {  border-bottom-color: transparent;  color: '{{foreground-3}}';  background-image: linear-gradient(to right, '{{foreground-3}}' 0%, '{{foreground-3}}' 33%, transparent 0%);  background-image: -ms-linear-gradient(left, transparent 0%, '{{foreground-3}}' 100%); }md-list.md-THEME_NAME-theme md-list-item.md-2-line .md-list-item-text h3, md-list.md-THEME_NAME-theme md-list-item.md-2-line .md-list-item-text h4, md-list.md-THEME_NAME-theme md-list-item.md-3-line .md-list-item-text h3, md-list.md-THEME_NAME-theme md-list-item.md-3-line .md-list-item-text h4 {  color: '{{foreground-1}}'; }md-list.md-THEME_NAME-theme md-list-item.md-2-line .md-list-item-text p, md-list.md-THEME_NAME-theme md-list-item.md-3-line .md-list-item-text p {  color: '{{foreground-2}}'; }md-list.md-THEME_NAME-theme .md-proxy-focus.md-focused div.md-no-style {  background-color: '{{background-100}}'; }md-list.md-THEME_NAME-theme md-list-item > md-icon {  color: '{{foreground-2}}'; }  md-list.md-THEME_NAME-theme md-list-item > md-icon.md-highlight {    color: '{{primary-color}}'; }    md-list.md-THEME_NAME-theme md-list-item > md-icon.md-highlight.md-accent {      color: '{{accent-color}}'; }md-list.md-THEME_NAME-theme md-list-item button {  background-color: '{{background-color}}'; }  md-list.md-THEME_NAME-theme md-list-item button.md-button:not([disabled]):hover {    background-color: '{{background-color}}'; }md-progress-circular.md-THEME_NAME-theme {  background-color: transparent; }  md-progress-circular.md-THEME_NAME-theme .md-inner .md-gap {    border-top-color: '{{primary-color}}';    border-bottom-color: '{{primary-color}}'; }  md-progress-circular.md-THEME_NAME-theme .md-inner .md-left .md-half-circle, md-progress-circular.md-THEME_NAME-theme .md-inner .md-right .md-half-circle {    border-top-color: '{{primary-color}}'; }  md-progress-circular.md-THEME_NAME-theme .md-inner .md-right .md-half-circle {    border-right-color: '{{primary-color}}'; }  md-progress-circular.md-THEME_NAME-theme .md-inner .md-left .md-half-circle {    border-left-color: '{{primary-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-warn .md-inner .md-gap {    border-top-color: '{{warn-color}}';    border-bottom-color: '{{warn-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-warn .md-inner .md-left .md-half-circle, md-progress-circular.md-THEME_NAME-theme.md-warn .md-inner .md-right .md-half-circle {    border-top-color: '{{warn-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-warn .md-inner .md-right .md-half-circle {    border-right-color: '{{warn-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-warn .md-inner .md-left .md-half-circle {    border-left-color: '{{warn-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-accent .md-inner .md-gap {    border-top-color: '{{accent-color}}';    border-bottom-color: '{{accent-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-accent .md-inner .md-left .md-half-circle, md-progress-circular.md-THEME_NAME-theme.md-accent .md-inner .md-right .md-half-circle {    border-top-color: '{{accent-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-accent .md-inner .md-right .md-half-circle {    border-right-color: '{{accent-color}}'; }  md-progress-circular.md-THEME_NAME-theme.md-accent .md-inner .md-left .md-half-circle {    border-left-color: '{{accent-color}}'; }md-progress-linear.md-THEME_NAME-theme .md-container {  background-color: '{{primary-100}}'; }md-progress-linear.md-THEME_NAME-theme .md-bar {  background-color: '{{primary-color}}'; }md-progress-linear.md-THEME_NAME-theme.md-warn .md-container {  background-color: '{{warn-100}}'; }md-progress-linear.md-THEME_NAME-theme.md-warn .md-bar {  background-color: '{{warn-color}}'; }md-progress-linear.md-THEME_NAME-theme.md-accent .md-container {  background-color: '{{accent-100}}'; }md-progress-linear.md-THEME_NAME-theme.md-accent .md-bar {  background-color: '{{accent-color}}'; }md-progress-linear.md-THEME_NAME-theme[md-mode=buffer].md-warn .md-bar1 {  background-color: '{{warn-100}}'; }md-progress-linear.md-THEME_NAME-theme[md-mode=buffer].md-warn .md-dashed:before {  background: radial-gradient('{{warn-100}}' 0%, '{{warn-100}}' 16%, transparent 42%); }md-progress-linear.md-THEME_NAME-theme[md-mode=buffer].md-accent .md-bar1 {  background-color: '{{accent-100}}'; }md-progress-linear.md-THEME_NAME-theme[md-mode=buffer].md-accent .md-dashed:before {  background: radial-gradient('{{accent-100}}' 0%, '{{accent-100}}' 16%, transparent 42%); }md-radio-button.md-THEME_NAME-theme .md-off {  border-color: '{{foreground-2}}'; }md-radio-button.md-THEME_NAME-theme .md-on {  background-color: '{{accent-color-0.87}}'; }md-radio-button.md-THEME_NAME-theme.md-checked .md-off {  border-color: '{{accent-color-0.87}}'; }md-radio-button.md-THEME_NAME-theme.md-checked .md-ink-ripple {  color: '{{accent-color-0.87}}'; }md-radio-button.md-THEME_NAME-theme .md-container .md-ripple {  color: '{{accent-600}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary .md-on, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary .md-on, md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary .md-on, md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary .md-on {  background-color: '{{primary-color-0.87}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary .md-checked .md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary.md-checked .md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary .md-checked .md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked .md-off, md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary .md-checked .md-off, md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary.md-checked .md-off, md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary .md-checked .md-off, md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked .md-off {  border-color: '{{primary-color-0.87}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary .md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary.md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary .md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked .md-ink-ripple, md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary .md-checked .md-ink-ripple, md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary.md-checked .md-ink-ripple, md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary .md-checked .md-ink-ripple, md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary.md-checked .md-ink-ripple {  color: '{{primary-color-0.87}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-primary .md-container .md-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-primary .md-container .md-ripple, md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-primary .md-container .md-ripple, md-radio-button.md-THEME_NAME-theme:not([disabled]).md-primary .md-container .md-ripple {  color: '{{primary-600}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn .md-on, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn .md-on, md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn .md-on, md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn .md-on {  background-color: '{{warn-color-0.87}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn .md-checked .md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn.md-checked .md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn .md-checked .md-off, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-off, md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn .md-checked .md-off, md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn.md-checked .md-off, md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn .md-checked .md-off, md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-off {  border-color: '{{warn-color-0.87}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn .md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn.md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn .md-checked .md-ink-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-ink-ripple, md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn .md-checked .md-ink-ripple, md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn.md-checked .md-ink-ripple, md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn .md-checked .md-ink-ripple, md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn.md-checked .md-ink-ripple {  color: '{{warn-color-0.87}}'; }md-radio-group.md-THEME_NAME-theme:not([disabled]) .md-warn .md-container .md-ripple, md-radio-group.md-THEME_NAME-theme:not([disabled]).md-warn .md-container .md-ripple, md-radio-button.md-THEME_NAME-theme:not([disabled]) .md-warn .md-container .md-ripple, md-radio-button.md-THEME_NAME-theme:not([disabled]).md-warn .md-container .md-ripple {  color: '{{warn-600}}'; }md-radio-group.md-THEME_NAME-theme[disabled], md-radio-button.md-THEME_NAME-theme[disabled] {  color: '{{foreground-3}}'; }  md-radio-group.md-THEME_NAME-theme[disabled] .md-container .md-off, md-radio-button.md-THEME_NAME-theme[disabled] .md-container .md-off {    border-color: '{{foreground-3}}'; }  md-radio-group.md-THEME_NAME-theme[disabled] .md-container .md-on, md-radio-button.md-THEME_NAME-theme[disabled] .md-container .md-on {    border-color: '{{foreground-3}}'; }md-radio-group.md-THEME_NAME-theme.md-focused:not(:empty) .md-checked .md-container:before {  background-color: '{{accent-color-0.26}}'; }md-radio-group.md-THEME_NAME-theme.md-focused:not(:empty) .md-checked:not([disabled]).md-primary .md-container:before {  background-color: '{{primary-color-0.26}}'; }md-radio-group.md-THEME_NAME-theme.md-focused:not(:empty) .md-checked.md-primary .md-container:before {  background-color: '{{warn-color-0.26}}'; }md-select.md-THEME_NAME-theme.ng-invalid.ng-dirty .md-select-label {  color: '{{warn-500}}' !important;  border-bottom-color: '{{warn-500}}' !important; }md-select.md-THEME_NAME-theme:not([disabled]):focus .md-select-label {  border-bottom-color: '{{primary-color}}';  color: '{{ foreground-1 }}'; }  md-select.md-THEME_NAME-theme:not([disabled]):focus .md-select-label.md-placeholder {    color: '{{ foreground-1 }}'; }md-select.md-THEME_NAME-theme:not([disabled]):focus.md-accent .md-select-label {  border-bottom-color: '{{accent-color}}'; }md-select.md-THEME_NAME-theme:not([disabled]):focus.md-warn .md-select-label {  border-bottom-color: '{{warn-color}}'; }md-select.md-THEME_NAME-theme[disabled] .md-select-label {  color: '{{foreground-3}}'; }  md-select.md-THEME_NAME-theme[disabled] .md-select-label.md-placeholder {    color: '{{foreground-3}}'; }md-select.md-THEME_NAME-theme .md-select-label {  border-bottom-color: '{{foreground-4}}'; }  md-select.md-THEME_NAME-theme .md-select-label.md-placeholder {    color: '{{foreground-2}}'; }md-select-menu.md-THEME_NAME-theme md-optgroup {  color: '{{foreground-2}}'; }  md-select-menu.md-THEME_NAME-theme md-optgroup md-option {    color: '{{foreground-1}}'; }md-select-menu.md-THEME_NAME-theme md-option[selected] {  color: '{{primary-500}}'; }  md-select-menu.md-THEME_NAME-theme md-option[selected]:focus {    color: '{{primary-600}}'; }  md-select-menu.md-THEME_NAME-theme md-option[selected].md-accent {    color: '{{accent-500}}'; }    md-select-menu.md-THEME_NAME-theme md-option[selected].md-accent:focus {      color: '{{accent-600}}'; }md-select-menu.md-THEME_NAME-theme md-option:focus:not([selected]) {  background: '{{background-200}}'; }md-sidenav.md-THEME_NAME-theme {  background-color: '{{background-color}}'; }md-slider.md-THEME_NAME-theme .md-track {  background-color: '{{foreground-3}}'; }md-slider.md-THEME_NAME-theme .md-track-ticks {  background-color: '{{foreground-4}}'; }md-slider.md-THEME_NAME-theme .md-focus-thumb {  background-color: '{{foreground-2}}'; }md-slider.md-THEME_NAME-theme .md-focus-ring {  border-color: '{{foreground-4}}'; }md-slider.md-THEME_NAME-theme .md-disabled-thumb {  border-color: '{{background-color}}'; }md-slider.md-THEME_NAME-theme.md-min .md-thumb:after {  background-color: '{{background-color}}'; }md-slider.md-THEME_NAME-theme .md-track.md-track-fill {  background-color: '{{accent-color}}'; }md-slider.md-THEME_NAME-theme .md-thumb:after {  border-color: '{{accent-color}}';  background-color: '{{accent-color}}'; }md-slider.md-THEME_NAME-theme .md-sign {  background-color: '{{accent-color}}'; }  md-slider.md-THEME_NAME-theme .md-sign:after {    border-top-color: '{{accent-color}}'; }md-slider.md-THEME_NAME-theme .md-thumb-text {  color: '{{accent-contrast}}'; }md-slider.md-THEME_NAME-theme.md-warn .md-track.md-track-fill {  background-color: '{{warn-color}}'; }md-slider.md-THEME_NAME-theme.md-warn .md-thumb:after {  border-color: '{{warn-color}}';  background-color: '{{warn-color}}'; }md-slider.md-THEME_NAME-theme.md-warn .md-sign {  background-color: '{{warn-color}}'; }  md-slider.md-THEME_NAME-theme.md-warn .md-sign:after {    border-top-color: '{{warn-color}}'; }md-slider.md-THEME_NAME-theme.md-warn .md-thumb-text {  color: '{{warn-contrast}}'; }md-slider.md-THEME_NAME-theme.md-primary .md-track.md-track-fill {  background-color: '{{primary-color}}'; }md-slider.md-THEME_NAME-theme.md-primary .md-thumb:after {  border-color: '{{primary-color}}';  background-color: '{{primary-color}}'; }md-slider.md-THEME_NAME-theme.md-primary .md-sign {  background-color: '{{primary-color}}'; }  md-slider.md-THEME_NAME-theme.md-primary .md-sign:after {    border-top-color: '{{primary-color}}'; }md-slider.md-THEME_NAME-theme.md-primary .md-thumb-text {  color: '{{primary-contrast}}'; }md-slider.md-THEME_NAME-theme[disabled] .md-thumb:after {  border-color: '{{foreground-3}}'; }md-slider.md-THEME_NAME-theme[disabled]:not(.md-min) .md-thumb:after {  background-color: '{{foreground-3}}'; }.md-subheader.md-THEME_NAME-theme {  color: '{{ foreground-2-0.23 }}';  background-color: '{{background-color}}'; }  .md-subheader.md-THEME_NAME-theme.md-primary {    color: '{{primary-color}}'; }  .md-subheader.md-THEME_NAME-theme.md-accent {    color: '{{accent-color}}'; }  .md-subheader.md-THEME_NAME-theme.md-warn {    color: '{{warn-color}}'; }md-switch.md-THEME_NAME-theme .md-thumb {  background-color: '{{background-50}}'; }md-switch.md-THEME_NAME-theme .md-bar {  background-color: '{{background-500}}'; }md-switch.md-THEME_NAME-theme.md-checked .md-thumb {  background-color: '{{accent-color}}'; }md-switch.md-THEME_NAME-theme.md-checked .md-bar {  background-color: '{{accent-color-0.5}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-focused .md-thumb:before {  background-color: '{{accent-color-0.26}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-primary .md-thumb {  background-color: '{{primary-color}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-primary .md-bar {  background-color: '{{primary-color-0.5}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-primary.md-focused .md-thumb:before {  background-color: '{{primary-color-0.26}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-warn .md-thumb {  background-color: '{{warn-color}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-warn .md-bar {  background-color: '{{warn-color-0.5}}'; }md-switch.md-THEME_NAME-theme.md-checked.md-warn.md-focused .md-thumb:before {  background-color: '{{warn-color-0.26}}'; }md-switch.md-THEME_NAME-theme[disabled] .md-thumb {  background-color: '{{background-400}}'; }md-switch.md-THEME_NAME-theme[disabled] .md-bar {  background-color: '{{foreground-4}}'; }md-tabs.md-THEME_NAME-theme md-tabs-wrapper {  background-color: transparent;  border-color: '{{foreground-4}}'; }md-tabs.md-THEME_NAME-theme .md-paginator md-icon {  color: '{{primary-color}}'; }md-tabs.md-THEME_NAME-theme md-ink-bar {  color: '{{accent-color}}';  background: '{{accent-color}}'; }md-tabs.md-THEME_NAME-theme .md-tab {  color: '{{foreground-2}}'; }  md-tabs.md-THEME_NAME-theme .md-tab[disabled] {    color: '{{foreground-3}}'; }  md-tabs.md-THEME_NAME-theme .md-tab.md-active, md-tabs.md-THEME_NAME-theme .md-tab.md-focused {    color: '{{primary-color}}'; }  md-tabs.md-THEME_NAME-theme .md-tab.md-focused {    background: '{{primary-color-0.1}}'; }  md-tabs.md-THEME_NAME-theme .md-tab .md-ripple-container {    color: '{{accent-100}}'; }md-tabs.md-THEME_NAME-theme.md-accent md-tabs-wrapper {  background-color: '{{accent-color}}'; }md-tabs.md-THEME_NAME-theme.md-accent md-tab-item:not([disabled]) {  color: '{{accent-100}}'; }  md-tabs.md-THEME_NAME-theme.md-accent md-tab-item:not([disabled]).md-active, md-tabs.md-THEME_NAME-theme.md-accent md-tab-item:not([disabled]).md-focused {    color: '{{accent-contrast}}'; }  md-tabs.md-THEME_NAME-theme.md-accent md-tab-item:not([disabled]).md-focused {    background: '{{accent-contrast-0.1}}'; }md-tabs.md-THEME_NAME-theme.md-accent md-ink-bar {  color: '{{primary-600-1}}';  background: '{{primary-600-1}}'; }md-tabs.md-THEME_NAME-theme.md-primary md-tabs-wrapper {  background-color: '{{primary-color}}'; }md-tabs.md-THEME_NAME-theme.md-primary md-tab-item:not([disabled]) {  color: '{{primary-100}}'; }  md-tabs.md-THEME_NAME-theme.md-primary md-tab-item:not([disabled]).md-active, md-tabs.md-THEME_NAME-theme.md-primary md-tab-item:not([disabled]).md-focused {    color: '{{primary-contrast}}'; }  md-tabs.md-THEME_NAME-theme.md-primary md-tab-item:not([disabled]).md-focused {    background: '{{primary-contrast-0.1}}'; }md-tabs.md-THEME_NAME-theme.md-warn md-tabs-wrapper {  background-color: '{{warn-color}}'; }md-tabs.md-THEME_NAME-theme.md-warn md-tab-item:not([disabled]) {  color: '{{warn-100}}'; }  md-tabs.md-THEME_NAME-theme.md-warn md-tab-item:not([disabled]).md-active, md-tabs.md-THEME_NAME-theme.md-warn md-tab-item:not([disabled]).md-focused {    color: '{{warn-contrast}}'; }  md-tabs.md-THEME_NAME-theme.md-warn md-tab-item:not([disabled]).md-focused {    background: '{{warn-contrast-0.1}}'; }md-toolbar > md-tabs.md-THEME_NAME-theme md-tabs-wrapper {  background-color: '{{primary-color}}'; }md-toolbar > md-tabs.md-THEME_NAME-theme md-tab-item:not([disabled]) {  color: '{{primary-100}}'; }  md-toolbar > md-tabs.md-THEME_NAME-theme md-tab-item:not([disabled]).md-active, md-toolbar > md-tabs.md-THEME_NAME-theme md-tab-item:not([disabled]).md-focused {    color: '{{primary-contrast}}'; }  md-toolbar > md-tabs.md-THEME_NAME-theme md-tab-item:not([disabled]).md-focused {    background: '{{primary-contrast-0.1}}'; }md-toolbar.md-accent > md-tabs.md-THEME_NAME-theme md-tabs-wrapper {  background-color: '{{accent-color}}'; }md-toolbar.md-accent > md-tabs.md-THEME_NAME-theme md-tab-item:not([disabled]) {  color: '{{accent-100}}'; }  md-toolbar.md-accent > md-tabs.md-THEME_NAME-theme md-tab-item:not([disabled]).md-active, md-toolbar.md-accent > md-tabs.md-THEME_NAME-theme md-tab-item:not([disabled]).md-focused {    color: '{{accent-contrast}}'; }  md-toolbar.md-accent > md-tabs.md-THEME_NAME-theme md-tab-item:not([disabled]).md-focused {    background: '{{accent-contrast-0.1}}'; }md-toolbar.md-accent > md-tabs.md-THEME_NAME-theme md-ink-bar {  color: '{{primary-600-1}}';  background: '{{primary-600-1}}'; }md-toolbar.md-warn > md-tabs.md-THEME_NAME-theme md-tabs-wrapper {  background-color: '{{warn-color}}'; }md-toolbar.md-warn > md-tabs.md-THEME_NAME-theme md-tab-item:not([disabled]) {  color: '{{warn-100}}'; }  md-toolbar.md-warn > md-tabs.md-THEME_NAME-theme md-tab-item:not([disabled]).md-active, md-toolbar.md-warn > md-tabs.md-THEME_NAME-theme md-tab-item:not([disabled]).md-focused {    color: '{{warn-contrast}}'; }  md-toolbar.md-warn > md-tabs.md-THEME_NAME-theme md-tab-item:not([disabled]).md-focused {    background: '{{warn-contrast-0.1}}'; }md-toast.md-THEME_NAME-theme {  background-color: #323232;  color: '{{background-50}}'; }  md-toast.md-THEME_NAME-theme .md-button {    color: '{{background-50}}'; }    md-toast.md-THEME_NAME-theme .md-button.md-highlight {      color: '{{primary-A200}}'; }      md-toast.md-THEME_NAME-theme .md-button.md-highlight.md-accent {        color: '{{accent-A200}}'; }      md-toast.md-THEME_NAME-theme .md-button.md-highlight.md-warn {        color: '{{warn-A200}}'; }md-toolbar.md-THEME_NAME-theme {  background-color: '{{primary-color}}';  color: '{{primary-contrast}}'; }  md-toolbar.md-THEME_NAME-theme md-icon {    color: '{{primary-contrast}}'; }  md-toolbar.md-THEME_NAME-theme .md-button {    color: '{{primary-contrast}}'; }  md-toolbar.md-THEME_NAME-theme.md-accent {    background-color: '{{accent-color}}';    color: '{{accent-contrast}}'; }  md-toolbar.md-THEME_NAME-theme.md-warn {    background-color: '{{warn-color}}';    color: '{{warn-contrast}}'; }md-tooltip.md-THEME_NAME-theme {  color: '{{background-A100}}'; }  md-tooltip.md-THEME_NAME-theme .md-background {    background-color: '{{foreground-2}}'; }");})();})(window,window.angular);